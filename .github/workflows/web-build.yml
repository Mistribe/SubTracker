name: Web Build and Test
permissions:
  contents: read

on:
  push:
    branches:
      - main
    paths:
      - "web/**"
      - ".github/workflows/web-build.yml"
  pull_request:
    branches:
      - main
    paths:
      - "web/**"
      - ".github/workflows/web-build.yml"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-and-test:
    if: github.event_name != 'pull_request' || !github.event.pull_request.draft
    name: Build and Test (web)
    runs-on: ubuntu-latest
    env:
      CI: true
    defaults:
      run:
        working-directory: web
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: "web/package-lock.json"

      - name: Install dependencies
        run: |
          if [ -f package-lock.json ]; then
            npm ci
          else
            npm install
          fi

      - name: Build
        run: npm run build
      - name: Test
        run: npm test

  e2e-tests:
    if: github.event_name != 'pull_request' || !github.event.pull_request.draft
    name: E2E Tests (web)
    runs-on: ubuntu-latest
    env:
      CI: true
    defaults:
      run:
        working-directory: .
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: "web/package-lock.json"

      - name: Install dependencies
        working-directory: web
        run: |
          if [ -f package-lock.json ]; then
            npm ci
          else
            npm install
          fi

      - name: Install Playwright Browsers
        working-directory: web
        run: npx playwright install --with-deps chromium

      - name: Setup config
        run: |
          echo "VITE_CLERK_PUBLISHABLE_KEY=${{secrets.TEST_CLERK_PUBLISHABLE_KEY}}" >> .env.web
          echo "VITE_CLERK_PUBLISHABLE_KEY=${{secrets.TEST_CLERK_PUBLISHABLE_KEY}}" >> .env.test
          echo "TEST_USER_EMAIL=${{secrets.TEST_USER_EMAIL}}" >> .env.test
          echo "TEST_USER_PASSWORD=${{secrets.TEST_USER_PASSWORD}}" >> .env.test
          echo "CLERK_SECRET_KEY=${{secrets.TEST_CLERK_SECRET_KEY}}" >> .env.backend

      - name: Start services with Docker Compose
        run: docker compose up --build -d

      - name: Wait for services to be ready
        run: |
          echo "Waiting for backend to be ready..."
          timeout 60 bash -c 'until curl -f http://localhost:8080/health 2>/dev/null; do sleep 2; done' || true
          echo "Waiting for frontend to be ready..."
          timeout 60 bash -c 'until curl -f http://localhost:5173 2>/dev/null; do sleep 2; done' || true
          sleep 5

      - name: Run E2E tests
        working-directory: web
        run: npm run test:e2e
        env:
          PLAYWRIGHT_BASE_URL: http://localhost:5173

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: |
            web/test-results/
            web/playwright-report/
          retention-days: 30

      - name: Stop services
        if: always()
        run: docker compose down -v
