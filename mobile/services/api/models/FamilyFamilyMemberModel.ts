/**
 * SubTracker API
 * This api provide HTTPRest endpoints for the application SubTracker.
 *
 * OpenAPI spec version: 1.0
 * Contact: support@mistribe.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { HttpFile } from '../http/http';

/**
* Family member object containing member information
*/
export class FamilyFamilyMemberModel {
    /**
    * @Description Timestamp when the member was created
    */
    'createdAt': Date;
    /**
    * @Description Entity tag for optimistic concurrency control
    */
    'etag': string;
    /**
    * @Description ID of the family this member belongs to
    */
    'familyId': string;
    /**
    * @Description Indicates whether this member has an account with the service provider
    */
    'hasAccount': boolean;
    /**
    * @Description Unique identifier for the family member
    */
    'id': string;
    /**
    * @Description Indicates whether this member is the current authenticated user
    */
    'isYou': boolean;
    /**
    * @Description Name of the family member
    */
    'name': string;
    /**
    * @Description Whether this member is a child (affects permissions and features)
    */
    'type': FamilyFamilyMemberModelTypeEnum;
    /**
    * @Description Timestamp when the member was last updated
    */
    'updatedAt': Date;

    static readonly discriminator: string | undefined = undefined;

    static readonly mapping: {[index: string]: string} | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "createdAt",
            "baseName": "created_at",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "etag",
            "baseName": "etag",
            "type": "string",
            "format": ""
        },
        {
            "name": "familyId",
            "baseName": "family_id",
            "type": "string",
            "format": ""
        },
        {
            "name": "hasAccount",
            "baseName": "has_account",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "id",
            "baseName": "id",
            "type": "string",
            "format": ""
        },
        {
            "name": "isYou",
            "baseName": "is_you",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "name",
            "baseName": "name",
            "type": "string",
            "format": ""
        },
        {
            "name": "type",
            "baseName": "type",
            "type": "FamilyFamilyMemberModelTypeEnum",
            "format": ""
        },
        {
            "name": "updatedAt",
            "baseName": "updated_at",
            "type": "Date",
            "format": "date-time"
        }    ];

    static getAttributeTypeMap() {
        return FamilyFamilyMemberModel.attributeTypeMap;
    }

    public constructor() {
    }
}

export enum FamilyFamilyMemberModelTypeEnum {
    Owner = 'owner',
    Adult = 'adult',
    Kid = 'kid'
}

