/* tslint:disable */
/* eslint-disable */
/**
 * SubTracker API
 * This api provide HTTPRest endpoints for the application SubTracker.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@mistribe.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  DtoCurrencyRatesModel,
  GinxHttpErrorResponse,
} from '../models/index';
import {
    DtoCurrencyRatesModelFromJSON,
    DtoCurrencyRatesModelToJSON,
    GinxHttpErrorResponseFromJSON,
    GinxHttpErrorResponseToJSON,
} from '../models/index';

export interface CurrenciesRatesGetRequest {
    date?: string;
}

/**
 * 
 */
export class CurrenciesApi extends runtime.BaseAPI {

    /**
     * Get exchange rates for all currencies at a specific date
     * Get Currency Rates
     */
    async currenciesRatesGetRaw(requestParameters: CurrenciesRatesGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<DtoCurrencyRatesModel>> {
        const queryParameters: any = {};

        if (requestParameters['date'] != null) {
            queryParameters['date'] = requestParameters['date'];
        }

        const headerParameters: runtime.HTTPHeaders = {};


        let urlPath = `/currencies/rates`;

        const response = await this.request({
            path: urlPath,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => DtoCurrencyRatesModelFromJSON(jsonValue));
    }

    /**
     * Get exchange rates for all currencies at a specific date
     * Get Currency Rates
     */
    async currenciesRatesGet(requestParameters: CurrenciesRatesGetRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<DtoCurrencyRatesModel> {
        const response = await this.currenciesRatesGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * get details of all supported currencies
     * Get Supported Currencies
     */
    async currenciesSupportedGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<string>>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};


        let urlPath = `/currencies/supported`;

        const response = await this.request({
            path: urlPath,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse<any>(response);
    }

    /**
     * get details of all supported currencies
     * Get Supported Currencies
     */
    async currenciesSupportedGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<string>> {
        const response = await this.currenciesSupportedGetRaw(initOverrides);
        return await response.value();
    }

}
