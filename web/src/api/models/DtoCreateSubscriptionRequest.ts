/* tslint:disable */
/* eslint-disable */
/**
 * SubTracker API
 * This api provide HTTPRest endpoints for the application SubTracker.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@mistribe.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { DtoEditableOwnerModel } from './DtoEditableOwnerModel';
import {
    DtoEditableOwnerModelFromJSON,
    DtoEditableOwnerModelFromJSONTyped,
    DtoEditableOwnerModelToJSON,
    DtoEditableOwnerModelToJSONTyped,
} from './DtoEditableOwnerModel';
import type { DtoSubscriptionFreeTrialModel } from './DtoSubscriptionFreeTrialModel';
import {
    DtoSubscriptionFreeTrialModelFromJSON,
    DtoSubscriptionFreeTrialModelFromJSONTyped,
    DtoSubscriptionFreeTrialModelToJSON,
    DtoSubscriptionFreeTrialModelToJSONTyped,
} from './DtoSubscriptionFreeTrialModel';
import type { DtoAmountModel } from './DtoAmountModel';
import {
    DtoAmountModelFromJSON,
    DtoAmountModelFromJSONTyped,
    DtoAmountModelToJSON,
    DtoAmountModelToJSONTyped,
} from './DtoAmountModel';
import type { DtoEditableSubscriptionPayerModel } from './DtoEditableSubscriptionPayerModel';
import {
    DtoEditableSubscriptionPayerModelFromJSON,
    DtoEditableSubscriptionPayerModelFromJSONTyped,
    DtoEditableSubscriptionPayerModelToJSON,
    DtoEditableSubscriptionPayerModelToJSONTyped,
} from './DtoEditableSubscriptionPayerModel';

/**
 * 
 * @export
 * @interface DtoCreateSubscriptionRequest
 */
export interface DtoCreateSubscriptionRequest {
    /**
     * 
     * @type {string}
     * @memberof DtoCreateSubscriptionRequest
     */
    createdAt?: string;
    /**
     * 
     * @type {DtoAmountModel}
     * @memberof DtoCreateSubscriptionRequest
     */
    customPrice?: DtoAmountModel;
    /**
     * 
     * @type {number}
     * @memberof DtoCreateSubscriptionRequest
     */
    customRecurrency?: number;
    /**
     * 
     * @type {Date}
     * @memberof DtoCreateSubscriptionRequest
     */
    endDate?: Date;
    /**
     * 
     * @type {DtoSubscriptionFreeTrialModel}
     * @memberof DtoCreateSubscriptionRequest
     */
    freeTrial?: DtoSubscriptionFreeTrialModel;
    /**
     * 
     * @type {string}
     * @memberof DtoCreateSubscriptionRequest
     */
    friendlyName?: string;
    /**
     * 
     * @type {string}
     * @memberof DtoCreateSubscriptionRequest
     */
    id?: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof DtoCreateSubscriptionRequest
     */
    labels?: Array<string>;
    /**
     * 
     * @type {DtoEditableOwnerModel}
     * @memberof DtoCreateSubscriptionRequest
     */
    owner: DtoEditableOwnerModel;
    /**
     * 
     * @type {DtoEditableSubscriptionPayerModel}
     * @memberof DtoCreateSubscriptionRequest
     */
    payer?: DtoEditableSubscriptionPayerModel;
    /**
     * 
     * @type {string}
     * @memberof DtoCreateSubscriptionRequest
     */
    planId?: string;
    /**
     * 
     * @type {string}
     * @memberof DtoCreateSubscriptionRequest
     */
    priceId?: string;
    /**
     * 
     * @type {string}
     * @memberof DtoCreateSubscriptionRequest
     */
    providerId: string;
    /**
     * 
     * @type {string}
     * @memberof DtoCreateSubscriptionRequest
     */
    recurrency: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof DtoCreateSubscriptionRequest
     */
    serviceUsers?: Array<string>;
    /**
     * 
     * @type {Date}
     * @memberof DtoCreateSubscriptionRequest
     */
    startDate: Date;
}

/**
 * Check if a given object implements the DtoCreateSubscriptionRequest interface.
 */
export function instanceOfDtoCreateSubscriptionRequest(value: object): value is DtoCreateSubscriptionRequest {
    if (!('owner' in value) || value['owner'] === undefined) return false;
    if (!('providerId' in value) || value['providerId'] === undefined) return false;
    if (!('recurrency' in value) || value['recurrency'] === undefined) return false;
    if (!('startDate' in value) || value['startDate'] === undefined) return false;
    return true;
}

export function DtoCreateSubscriptionRequestFromJSON(json: any): DtoCreateSubscriptionRequest {
    return DtoCreateSubscriptionRequestFromJSONTyped(json, false);
}

export function DtoCreateSubscriptionRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): DtoCreateSubscriptionRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'createdAt': json['created_at'] == null ? undefined : json['created_at'],
        'customPrice': json['custom_price'] == null ? undefined : DtoAmountModelFromJSON(json['custom_price']),
        'customRecurrency': json['custom_recurrency'] == null ? undefined : json['custom_recurrency'],
        'endDate': json['end_date'] == null ? undefined : (new Date(json['end_date'])),
        'freeTrial': json['free_trial'] == null ? undefined : DtoSubscriptionFreeTrialModelFromJSON(json['free_trial']),
        'friendlyName': json['friendly_name'] == null ? undefined : json['friendly_name'],
        'id': json['id'] == null ? undefined : json['id'],
        'labels': json['labels'] == null ? undefined : json['labels'],
        'owner': DtoEditableOwnerModelFromJSON(json['owner']),
        'payer': json['payer'] == null ? undefined : DtoEditableSubscriptionPayerModelFromJSON(json['payer']),
        'planId': json['plan_id'] == null ? undefined : json['plan_id'],
        'priceId': json['price_id'] == null ? undefined : json['price_id'],
        'providerId': json['provider_id'],
        'recurrency': json['recurrency'],
        'serviceUsers': json['service_users'] == null ? undefined : json['service_users'],
        'startDate': (new Date(json['start_date'])),
    };
}

export function DtoCreateSubscriptionRequestToJSON(json: any): DtoCreateSubscriptionRequest {
    return DtoCreateSubscriptionRequestToJSONTyped(json, false);
}

export function DtoCreateSubscriptionRequestToJSONTyped(value?: DtoCreateSubscriptionRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'created_at': value['createdAt'],
        'custom_price': DtoAmountModelToJSON(value['customPrice']),
        'custom_recurrency': value['customRecurrency'],
        'end_date': value['endDate'] == null ? value['endDate'] : value['endDate'].toISOString(),
        'free_trial': DtoSubscriptionFreeTrialModelToJSON(value['freeTrial']),
        'friendly_name': value['friendlyName'],
        'id': value['id'],
        'labels': value['labels'],
        'owner': DtoEditableOwnerModelToJSON(value['owner']),
        'payer': DtoEditableSubscriptionPayerModelToJSON(value['payer']),
        'plan_id': value['planId'],
        'price_id': value['priceId'],
        'provider_id': value['providerId'],
        'recurrency': value['recurrency'],
        'service_users': value['serviceUsers'],
        'start_date': value['startDate'].toISOString(),
    };
}

