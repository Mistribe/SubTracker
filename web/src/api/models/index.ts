/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { type AdditionalDataHolder, type ApiError, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {CreateFamilyMemberModel}
 */
// @ts-ignore
export function createCreateFamilyMemberModelFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoCreateFamilyMemberModel;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {CreateFamilyModel}
 */
// @ts-ignore
export function createCreateFamilyModelFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoCreateFamilyModel;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {CreateLabelModel}
 */
// @ts-ignore
export function createCreateLabelModelFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoCreateLabelModel;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {CreatePaymentModel}
 */
// @ts-ignore
export function createCreatePaymentModelFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoCreatePaymentModel;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {CreateSubscriptionModel}
 */
// @ts-ignore
export function createCreateSubscriptionModelFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoCreateSubscriptionModel;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {CreateSubscriptionPaymentModel}
 */
// @ts-ignore
export function createCreateSubscriptionPaymentModelFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoCreateSubscriptionPaymentModel;
}
export interface CreateFamilyMemberModel extends AdditionalDataHolder, Parsable {
    /**
     * The created_at property
     */
    createdAt?: string | null;
    /**
     * The email property
     */
    email?: string | null;
    /**
     * The id property
     */
    id?: string | null;
    /**
     * The is_kid property
     */
    isKid?: boolean | null;
    /**
     * The name property
     */
    name?: string | null;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {FamilyMemberModel}
 */
// @ts-ignore
export function createFamilyMemberModelFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoFamilyMemberModel;
}
export interface CreateFamilyModel extends AdditionalDataHolder, Parsable {
    /**
     * The created_at property
     */
    createdAt?: string | null;
    /**
     * The have_joint_account property
     */
    haveJointAccount?: boolean | null;
    /**
     * The id property
     */
    id?: string | null;
    /**
     * The name property
     */
    name?: string | null;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {FamilyModel}
 */
// @ts-ignore
export function createFamilyModelFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoFamilyModel;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {HttpError}
 */
// @ts-ignore
export function createHttpErrorFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoHttpError;
}
export interface CreateLabelModel extends AdditionalDataHolder, Parsable {
    /**
     * The color property
     */
    color?: string | null;
    /**
     * The created_at property
     */
    createdAt?: string | null;
    /**
     * The id property
     */
    id?: string | null;
    /**
     * The is_default property
     */
    isDefault?: boolean | null;
    /**
     * The name property
     */
    name?: string | null;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {LabelModel}
 */
// @ts-ignore
export function createLabelModelFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoLabelModel;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {PaginatedResponseModelEndpoints_familyModel}
 */
// @ts-ignore
export function createPaginatedResponseModelEndpoints_familyModelFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoPaginatedResponseModelEndpoints_familyModel;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {PaginatedResponseModelEndpoints_labelModel}
 */
// @ts-ignore
export function createPaginatedResponseModelEndpoints_labelModelFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoPaginatedResponseModelEndpoints_labelModel;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {PaginatedResponseModelEndpoints_subscriptionModel}
 */
// @ts-ignore
export function createPaginatedResponseModelEndpoints_subscriptionModelFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoPaginatedResponseModelEndpoints_subscriptionModel;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {PatchFamilyMemberModel}
 */
// @ts-ignore
export function createPatchFamilyMemberModelFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoPatchFamilyMemberModel;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {PatchFamilyModel}
 */
// @ts-ignore
export function createPatchFamilyModelFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoPatchFamilyModel;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {PatchPaymentModel}
 */
// @ts-ignore
export function createPatchPaymentModelFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoPatchPaymentModel;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {PatchSubscriptionModel}
 */
// @ts-ignore
export function createPatchSubscriptionModelFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoPatchSubscriptionModel;
}
export interface CreatePaymentModel extends AdditionalDataHolder, Parsable {
    /**
     * The created_at property
     */
    createdAt?: string | null;
    /**
     * The currency property
     */
    currency?: string | null;
    /**
     * The end_date property
     */
    endDate?: string | null;
    /**
     * The id property
     */
    id?: string | null;
    /**
     * The months property
     */
    months?: number | null;
    /**
     * The price property
     */
    price?: number | null;
    /**
     * The start_date property
     */
    startDate?: string | null;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {PaymentModel}
 */
// @ts-ignore
export function createPaymentModelFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoPaymentModel;
}
export interface CreateSubscriptionModel extends AdditionalDataHolder, Parsable {
    /**
     * The created_at property
     */
    createdAt?: string | null;
    /**
     * The family_id property
     */
    familyId?: string | null;
    /**
     * The family_members property
     */
    familyMembers?: string[] | null;
    /**
     * The id property
     */
    id?: string | null;
    /**
     * The labels property
     */
    labels?: string[] | null;
    /**
     * The name property
     */
    name?: string | null;
    /**
     * The payed_by_joint_account property
     */
    payedByJointAccount?: boolean | null;
    /**
     * The payer_id property
     */
    payerId?: string | null;
    /**
     * The payments property
     */
    payments?: CreatePaymentModel[] | null;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {SubscriptionModel}
 */
// @ts-ignore
export function createSubscriptionModelFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoSubscriptionModel;
}
export interface CreateSubscriptionPaymentModel extends AdditionalDataHolder, Parsable {
    /**
     * The created_at property
     */
    createdAt?: string | null;
    /**
     * The currency property
     */
    currency?: string | null;
    /**
     * The end_date property
     */
    endDate?: string | null;
    /**
     * The id property
     */
    id?: string | null;
    /**
     * The months property
     */
    months?: number | null;
    /**
     * The price property
     */
    price?: number | null;
    /**
     * The start_date property
     */
    startDate?: string | null;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {UpdateFamilyMemberModel}
 */
// @ts-ignore
export function createUpdateFamilyMemberModelFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoUpdateFamilyMemberModel;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {UpdateFamilyModel}
 */
// @ts-ignore
export function createUpdateFamilyModelFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoUpdateFamilyModel;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {UpdateLabelModel}
 */
// @ts-ignore
export function createUpdateLabelModelFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoUpdateLabelModel;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {UpdatePaymentModel}
 */
// @ts-ignore
export function createUpdatePaymentModelFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoUpdatePaymentModel;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {UpdateSubscriptionModel}
 */
// @ts-ignore
export function createUpdateSubscriptionModelFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoUpdateSubscriptionModel;
}
/**
 * The deserialization information for the current model
 * @param CreateFamilyMemberModel The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoCreateFamilyMemberModel(createFamilyMemberModel: Partial<CreateFamilyMemberModel> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "created_at": n => { createFamilyMemberModel.createdAt = n.getStringValue(); },
        "email": n => { createFamilyMemberModel.email = n.getStringValue(); },
        "id": n => { createFamilyMemberModel.id = n.getStringValue(); },
        "is_kid": n => { createFamilyMemberModel.isKid = n.getBooleanValue(); },
        "name": n => { createFamilyMemberModel.name = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param CreateFamilyModel The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoCreateFamilyModel(createFamilyModel: Partial<CreateFamilyModel> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "created_at": n => { createFamilyModel.createdAt = n.getStringValue(); },
        "have_joint_account": n => { createFamilyModel.haveJointAccount = n.getBooleanValue(); },
        "id": n => { createFamilyModel.id = n.getStringValue(); },
        "name": n => { createFamilyModel.name = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param CreateLabelModel The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoCreateLabelModel(createLabelModel: Partial<CreateLabelModel> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "color": n => { createLabelModel.color = n.getStringValue(); },
        "created_at": n => { createLabelModel.createdAt = n.getStringValue(); },
        "id": n => { createLabelModel.id = n.getStringValue(); },
        "is_default": n => { createLabelModel.isDefault = n.getBooleanValue(); },
        "name": n => { createLabelModel.name = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param CreatePaymentModel The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoCreatePaymentModel(createPaymentModel: Partial<CreatePaymentModel> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "created_at": n => { createPaymentModel.createdAt = n.getStringValue(); },
        "currency": n => { createPaymentModel.currency = n.getStringValue(); },
        "end_date": n => { createPaymentModel.endDate = n.getStringValue(); },
        "id": n => { createPaymentModel.id = n.getStringValue(); },
        "months": n => { createPaymentModel.months = n.getNumberValue(); },
        "price": n => { createPaymentModel.price = n.getNumberValue(); },
        "start_date": n => { createPaymentModel.startDate = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param CreateSubscriptionModel The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoCreateSubscriptionModel(createSubscriptionModel: Partial<CreateSubscriptionModel> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "created_at": n => { createSubscriptionModel.createdAt = n.getStringValue(); },
        "family_id": n => { createSubscriptionModel.familyId = n.getStringValue(); },
        "family_members": n => { createSubscriptionModel.familyMembers = n.getCollectionOfPrimitiveValues<string>(); },
        "id": n => { createSubscriptionModel.id = n.getStringValue(); },
        "labels": n => { createSubscriptionModel.labels = n.getCollectionOfPrimitiveValues<string>(); },
        "name": n => { createSubscriptionModel.name = n.getStringValue(); },
        "payed_by_joint_account": n => { createSubscriptionModel.payedByJointAccount = n.getBooleanValue(); },
        "payer_id": n => { createSubscriptionModel.payerId = n.getStringValue(); },
        "payments": n => { createSubscriptionModel.payments = n.getCollectionOfObjectValues<CreatePaymentModel>(createCreatePaymentModelFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @param CreateSubscriptionPaymentModel The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoCreateSubscriptionPaymentModel(createSubscriptionPaymentModel: Partial<CreateSubscriptionPaymentModel> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "created_at": n => { createSubscriptionPaymentModel.createdAt = n.getStringValue(); },
        "currency": n => { createSubscriptionPaymentModel.currency = n.getStringValue(); },
        "end_date": n => { createSubscriptionPaymentModel.endDate = n.getStringValue(); },
        "id": n => { createSubscriptionPaymentModel.id = n.getStringValue(); },
        "months": n => { createSubscriptionPaymentModel.months = n.getNumberValue(); },
        "price": n => { createSubscriptionPaymentModel.price = n.getNumberValue(); },
        "start_date": n => { createSubscriptionPaymentModel.startDate = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param FamilyMemberModel The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoFamilyMemberModel(familyMemberModel: Partial<FamilyMemberModel> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "created_at": n => { familyMemberModel.createdAt = n.getStringValue(); },
        "etag": n => { familyMemberModel.etag = n.getStringValue(); },
        "family_id": n => { familyMemberModel.familyId = n.getStringValue(); },
        "id": n => { familyMemberModel.id = n.getStringValue(); },
        "is_kid": n => { familyMemberModel.isKid = n.getBooleanValue(); },
        "name": n => { familyMemberModel.name = n.getStringValue(); },
        "updated_at": n => { familyMemberModel.updatedAt = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param FamilyModel The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoFamilyModel(familyModel: Partial<FamilyModel> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "created_at": n => { familyModel.createdAt = n.getStringValue(); },
        "etag": n => { familyModel.etag = n.getStringValue(); },
        "have_joint_account": n => { familyModel.haveJointAccount = n.getBooleanValue(); },
        "id": n => { familyModel.id = n.getStringValue(); },
        "is_owner": n => { familyModel.isOwner = n.getBooleanValue(); },
        "members": n => { familyModel.members = n.getCollectionOfObjectValues<FamilyMemberModel>(createFamilyMemberModelFromDiscriminatorValue); },
        "name": n => { familyModel.name = n.getStringValue(); },
        "updated_at": n => { familyModel.updatedAt = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param HttpError The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoHttpError(httpError: Partial<HttpError> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "message": n => { httpError.messageEscaped = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param LabelModel The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoLabelModel(labelModel: Partial<LabelModel> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "color": n => { labelModel.color = n.getStringValue(); },
        "created_at": n => { labelModel.createdAt = n.getStringValue(); },
        "etag": n => { labelModel.etag = n.getStringValue(); },
        "id": n => { labelModel.id = n.getStringValue(); },
        "is_default": n => { labelModel.isDefault = n.getBooleanValue(); },
        "name": n => { labelModel.name = n.getStringValue(); },
        "updated_at": n => { labelModel.updatedAt = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param PaginatedResponseModelEndpoints_familyModel The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoPaginatedResponseModelEndpoints_familyModel(paginatedResponseModelEndpoints_familyModel: Partial<PaginatedResponseModelEndpoints_familyModel> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "data": n => { paginatedResponseModelEndpoints_familyModel.data = n.getCollectionOfObjectValues<FamilyModel>(createFamilyModelFromDiscriminatorValue); },
        "length": n => { paginatedResponseModelEndpoints_familyModel.length = n.getNumberValue(); },
        "total": n => { paginatedResponseModelEndpoints_familyModel.total = n.getNumberValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param PaginatedResponseModelEndpoints_labelModel The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoPaginatedResponseModelEndpoints_labelModel(paginatedResponseModelEndpoints_labelModel: Partial<PaginatedResponseModelEndpoints_labelModel> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "data": n => { paginatedResponseModelEndpoints_labelModel.data = n.getCollectionOfObjectValues<LabelModel>(createLabelModelFromDiscriminatorValue); },
        "length": n => { paginatedResponseModelEndpoints_labelModel.length = n.getNumberValue(); },
        "total": n => { paginatedResponseModelEndpoints_labelModel.total = n.getNumberValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param PaginatedResponseModelEndpoints_subscriptionModel The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoPaginatedResponseModelEndpoints_subscriptionModel(paginatedResponseModelEndpoints_subscriptionModel: Partial<PaginatedResponseModelEndpoints_subscriptionModel> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "data": n => { paginatedResponseModelEndpoints_subscriptionModel.data = n.getCollectionOfObjectValues<SubscriptionModel>(createSubscriptionModelFromDiscriminatorValue); },
        "length": n => { paginatedResponseModelEndpoints_subscriptionModel.length = n.getNumberValue(); },
        "total": n => { paginatedResponseModelEndpoints_subscriptionModel.total = n.getNumberValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param PatchFamilyMemberModel The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoPatchFamilyMemberModel(patchFamilyMemberModel: Partial<PatchFamilyMemberModel> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "email": n => { patchFamilyMemberModel.email = n.getStringValue(); },
        "id": n => { patchFamilyMemberModel.id = n.getStringValue(); },
        "is_kid": n => { patchFamilyMemberModel.isKid = n.getBooleanValue(); },
        "name": n => { patchFamilyMemberModel.name = n.getStringValue(); },
        "updated_at": n => { patchFamilyMemberModel.updatedAt = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param PatchFamilyModel The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoPatchFamilyModel(patchFamilyModel: Partial<PatchFamilyModel> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "have_joint_account": n => { patchFamilyModel.haveJointAccount = n.getBooleanValue(); },
        "id": n => { patchFamilyModel.id = n.getStringValue(); },
        "members": n => { patchFamilyModel.members = n.getCollectionOfObjectValues<PatchFamilyMemberModel>(createPatchFamilyMemberModelFromDiscriminatorValue); },
        "name": n => { patchFamilyModel.name = n.getStringValue(); },
        "updated_at": n => { patchFamilyModel.updatedAt = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param PatchPaymentModel The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoPatchPaymentModel(patchPaymentModel: Partial<PatchPaymentModel> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "currency": n => { patchPaymentModel.currency = n.getStringValue(); },
        "end_date": n => { patchPaymentModel.endDate = n.getStringValue(); },
        "id": n => { patchPaymentModel.id = n.getStringValue(); },
        "months": n => { patchPaymentModel.months = n.getNumberValue(); },
        "price": n => { patchPaymentModel.price = n.getNumberValue(); },
        "start_date": n => { patchPaymentModel.startDate = n.getStringValue(); },
        "updated_at": n => { patchPaymentModel.updatedAt = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param PatchSubscriptionModel The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoPatchSubscriptionModel(patchSubscriptionModel: Partial<PatchSubscriptionModel> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "family_id": n => { patchSubscriptionModel.familyId = n.getStringValue(); },
        "family_members": n => { patchSubscriptionModel.familyMembers = n.getCollectionOfPrimitiveValues<string>(); },
        "id": n => { patchSubscriptionModel.id = n.getStringValue(); },
        "labels": n => { patchSubscriptionModel.labels = n.getCollectionOfPrimitiveValues<string>(); },
        "name": n => { patchSubscriptionModel.name = n.getStringValue(); },
        "payed_by_joint_account": n => { patchSubscriptionModel.payedByJointAccount = n.getBooleanValue(); },
        "payer_id": n => { patchSubscriptionModel.payerId = n.getStringValue(); },
        "payments": n => { patchSubscriptionModel.payments = n.getCollectionOfObjectValues<PatchPaymentModel>(createPatchPaymentModelFromDiscriminatorValue); },
        "updated_at": n => { patchSubscriptionModel.updatedAt = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param PaymentModel The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoPaymentModel(paymentModel: Partial<PaymentModel> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "created_at": n => { paymentModel.createdAt = n.getStringValue(); },
        "currency": n => { paymentModel.currency = n.getStringValue(); },
        "end_date": n => { paymentModel.endDate = n.getStringValue(); },
        "etag": n => { paymentModel.etag = n.getStringValue(); },
        "id": n => { paymentModel.id = n.getStringValue(); },
        "months": n => { paymentModel.months = n.getNumberValue(); },
        "price": n => { paymentModel.price = n.getNumberValue(); },
        "start_date": n => { paymentModel.startDate = n.getStringValue(); },
        "updated_at": n => { paymentModel.updatedAt = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param SubscriptionModel The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoSubscriptionModel(subscriptionModel: Partial<SubscriptionModel> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "created_at": n => { subscriptionModel.createdAt = n.getStringValue(); },
        "etag": n => { subscriptionModel.etag = n.getStringValue(); },
        "family_id": n => { subscriptionModel.familyId = n.getStringValue(); },
        "family_members": n => { subscriptionModel.familyMembers = n.getCollectionOfPrimitiveValues<string>(); },
        "id": n => { subscriptionModel.id = n.getStringValue(); },
        "labels": n => { subscriptionModel.labels = n.getCollectionOfPrimitiveValues<string>(); },
        "name": n => { subscriptionModel.name = n.getStringValue(); },
        "payer_id_id": n => { subscriptionModel.payerIdId = n.getStringValue(); },
        "payments": n => { subscriptionModel.payments = n.getCollectionOfObjectValues<PaymentModel>(createPaymentModelFromDiscriminatorValue); },
        "updated_at": n => { subscriptionModel.updatedAt = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param UpdateFamilyMemberModel The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoUpdateFamilyMemberModel(updateFamilyMemberModel: Partial<UpdateFamilyMemberModel> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "email": n => { updateFamilyMemberModel.email = n.getStringValue(); },
        "id_kid": n => { updateFamilyMemberModel.idKid = n.getBooleanValue(); },
        "name": n => { updateFamilyMemberModel.name = n.getStringValue(); },
        "updated_at": n => { updateFamilyMemberModel.updatedAt = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param UpdateFamilyModel The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoUpdateFamilyModel(updateFamilyModel: Partial<UpdateFamilyModel> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "have_joint_account": n => { updateFamilyModel.haveJointAccount = n.getBooleanValue(); },
        "name": n => { updateFamilyModel.name = n.getStringValue(); },
        "updated_at": n => { updateFamilyModel.updatedAt = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param UpdateLabelModel The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoUpdateLabelModel(updateLabelModel: Partial<UpdateLabelModel> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "color": n => { updateLabelModel.color = n.getStringValue(); },
        "name": n => { updateLabelModel.name = n.getStringValue(); },
        "updated_at": n => { updateLabelModel.updatedAt = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param UpdatePaymentModel The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoUpdatePaymentModel(updatePaymentModel: Partial<UpdatePaymentModel> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "currency": n => { updatePaymentModel.currency = n.getStringValue(); },
        "end_date": n => { updatePaymentModel.endDate = n.getStringValue(); },
        "months": n => { updatePaymentModel.months = n.getNumberValue(); },
        "price": n => { updatePaymentModel.price = n.getNumberValue(); },
        "start_date": n => { updatePaymentModel.startDate = n.getStringValue(); },
        "updated_at": n => { updatePaymentModel.updatedAt = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param UpdateSubscriptionModel The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoUpdateSubscriptionModel(updateSubscriptionModel: Partial<UpdateSubscriptionModel> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "family_id": n => { updateSubscriptionModel.familyId = n.getStringValue(); },
        "family_members": n => { updateSubscriptionModel.familyMembers = n.getCollectionOfPrimitiveValues<string>(); },
        "labels": n => { updateSubscriptionModel.labels = n.getCollectionOfPrimitiveValues<string>(); },
        "name": n => { updateSubscriptionModel.name = n.getStringValue(); },
        "payed_by_joint_account": n => { updateSubscriptionModel.payedByJointAccount = n.getBooleanValue(); },
        "payer_id": n => { updateSubscriptionModel.payerId = n.getStringValue(); },
        "updated_at": n => { updateSubscriptionModel.updatedAt = n.getStringValue(); },
    }
}
export interface FamilyMemberModel extends AdditionalDataHolder, Parsable {
    /**
     * The created_at property
     */
    createdAt?: string | null;
    /**
     * The etag property
     */
    etag?: string | null;
    /**
     * The family_id property
     */
    familyId?: string | null;
    /**
     * The id property
     */
    id?: string | null;
    /**
     * The is_kid property
     */
    isKid?: boolean | null;
    /**
     * The name property
     */
    name?: string | null;
    /**
     * The updated_at property
     */
    updatedAt?: string | null;
}
export interface FamilyModel extends AdditionalDataHolder, Parsable {
    /**
     * The created_at property
     */
    createdAt?: string | null;
    /**
     * The etag property
     */
    etag?: string | null;
    /**
     * The have_joint_account property
     */
    haveJointAccount?: boolean | null;
    /**
     * The id property
     */
    id?: string | null;
    /**
     * The is_owner property
     */
    isOwner?: boolean | null;
    /**
     * The members property
     */
    members?: FamilyMemberModel[] | null;
    /**
     * The name property
     */
    name?: string | null;
    /**
     * The updated_at property
     */
    updatedAt?: string | null;
}
export interface HttpError extends AdditionalDataHolder, ApiError, Parsable {
    /**
     * The message property
     */
    messageEscaped?: string | null;
}
export interface LabelModel extends AdditionalDataHolder, Parsable {
    /**
     * The color property
     */
    color?: string | null;
    /**
     * The created_at property
     */
    createdAt?: string | null;
    /**
     * The etag property
     */
    etag?: string | null;
    /**
     * The id property
     */
    id?: string | null;
    /**
     * The is_default property
     */
    isDefault?: boolean | null;
    /**
     * The name property
     */
    name?: string | null;
    /**
     * The updated_at property
     */
    updatedAt?: string | null;
}
export interface PaginatedResponseModelEndpoints_familyModel extends AdditionalDataHolder, Parsable {
    /**
     * The data property
     */
    data?: FamilyModel[] | null;
    /**
     * The length property
     */
    length?: number | null;
    /**
     * The total property
     */
    total?: number | null;
}
export interface PaginatedResponseModelEndpoints_labelModel extends AdditionalDataHolder, Parsable {
    /**
     * The data property
     */
    data?: LabelModel[] | null;
    /**
     * The length property
     */
    length?: number | null;
    /**
     * The total property
     */
    total?: number | null;
}
export interface PaginatedResponseModelEndpoints_subscriptionModel extends AdditionalDataHolder, Parsable {
    /**
     * The data property
     */
    data?: SubscriptionModel[] | null;
    /**
     * The length property
     */
    length?: number | null;
    /**
     * The total property
     */
    total?: number | null;
}
/**
 * Model for updating family member details
 */
export interface PatchFamilyMemberModel extends AdditionalDataHolder, Parsable {
    /**
     * Optional email address
     */
    email?: string | null;
    /**
     * Optional member ID. If not provided, new member will be created
     */
    id?: string | null;
    /**
     * Indicates if the member is a kid
     */
    isKid?: boolean | null;
    /**
     * Member's name
     */
    name?: string | null;
    /**
     * Optional timestamp of the last update
     */
    updatedAt?: string | null;
}
/**
 * Model for updating family details
 */
export interface PatchFamilyModel extends AdditionalDataHolder, Parsable {
    /**
     * Indicates if family has joint account
     */
    haveJointAccount?: boolean | null;
    /**
     * Family ID
     */
    id?: string | null;
    /**
     * List of family members
     */
    members?: PatchFamilyMemberModel[] | null;
    /**
     * Family name
     */
    name?: string | null;
    /**
     * Optional timestamp of the last update
     */
    updatedAt?: string | null;
}
/**
 * Payment update model
 */
export interface PatchPaymentModel extends AdditionalDataHolder, Parsable {
    /**
     * The currency property
     */
    currency?: string | null;
    /**
     * The end_date property
     */
    endDate?: string | null;
    /**
     * The id property
     */
    id?: string | null;
    /**
     * The months property
     */
    months?: number | null;
    /**
     * The price property
     */
    price?: number | null;
    /**
     * The start_date property
     */
    startDate?: string | null;
    /**
     * The updated_at property
     */
    updatedAt?: string | null;
}
/**
 * Subscription update model
 */
export interface PatchSubscriptionModel extends AdditionalDataHolder, Parsable {
    /**
     * The family_id property
     */
    familyId?: string | null;
    /**
     * The family_members property
     */
    familyMembers?: string[] | null;
    /**
     * The id property
     */
    id?: string | null;
    /**
     * The labels property
     */
    labels?: string[] | null;
    /**
     * The name property
     */
    name?: string | null;
    /**
     * The payed_by_joint_account property
     */
    payedByJointAccount?: boolean | null;
    /**
     * The payer_id property
     */
    payerId?: string | null;
    /**
     * The payments property
     */
    payments?: PatchPaymentModel[] | null;
    /**
     * The updated_at property
     */
    updatedAt?: string | null;
}
export interface PaymentModel extends AdditionalDataHolder, Parsable {
    /**
     * The created_at property
     */
    createdAt?: string | null;
    /**
     * The currency property
     */
    currency?: string | null;
    /**
     * The end_date property
     */
    endDate?: string | null;
    /**
     * The etag property
     */
    etag?: string | null;
    /**
     * The id property
     */
    id?: string | null;
    /**
     * The months property
     */
    months?: number | null;
    /**
     * The price property
     */
    price?: number | null;
    /**
     * The start_date property
     */
    startDate?: string | null;
    /**
     * The updated_at property
     */
    updatedAt?: string | null;
}
/**
 * Serializes information the current object
 * @param CreateFamilyMemberModel The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeCreateFamilyMemberModel(writer: SerializationWriter, createFamilyMemberModel: Partial<CreateFamilyMemberModel> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!createFamilyMemberModel || isSerializingDerivedType) { return; }
    writer.writeStringValue("created_at", createFamilyMemberModel.createdAt);
    writer.writeStringValue("email", createFamilyMemberModel.email);
    writer.writeStringValue("id", createFamilyMemberModel.id);
    writer.writeBooleanValue("is_kid", createFamilyMemberModel.isKid);
    writer.writeStringValue("name", createFamilyMemberModel.name);
    writer.writeAdditionalData(createFamilyMemberModel.additionalData);
}
/**
 * Serializes information the current object
 * @param CreateFamilyModel The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeCreateFamilyModel(writer: SerializationWriter, createFamilyModel: Partial<CreateFamilyModel> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!createFamilyModel || isSerializingDerivedType) { return; }
    writer.writeStringValue("created_at", createFamilyModel.createdAt);
    writer.writeBooleanValue("have_joint_account", createFamilyModel.haveJointAccount);
    writer.writeStringValue("id", createFamilyModel.id);
    writer.writeStringValue("name", createFamilyModel.name);
    writer.writeAdditionalData(createFamilyModel.additionalData);
}
/**
 * Serializes information the current object
 * @param CreateLabelModel The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeCreateLabelModel(writer: SerializationWriter, createLabelModel: Partial<CreateLabelModel> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!createLabelModel || isSerializingDerivedType) { return; }
    writer.writeStringValue("color", createLabelModel.color);
    writer.writeStringValue("created_at", createLabelModel.createdAt);
    writer.writeStringValue("id", createLabelModel.id);
    writer.writeBooleanValue("is_default", createLabelModel.isDefault);
    writer.writeStringValue("name", createLabelModel.name);
    writer.writeAdditionalData(createLabelModel.additionalData);
}
/**
 * Serializes information the current object
 * @param CreatePaymentModel The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeCreatePaymentModel(writer: SerializationWriter, createPaymentModel: Partial<CreatePaymentModel> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!createPaymentModel || isSerializingDerivedType) { return; }
    writer.writeStringValue("created_at", createPaymentModel.createdAt);
    writer.writeStringValue("currency", createPaymentModel.currency);
    writer.writeStringValue("end_date", createPaymentModel.endDate);
    writer.writeStringValue("id", createPaymentModel.id);
    writer.writeNumberValue("months", createPaymentModel.months);
    writer.writeNumberValue("price", createPaymentModel.price);
    writer.writeStringValue("start_date", createPaymentModel.startDate);
    writer.writeAdditionalData(createPaymentModel.additionalData);
}
/**
 * Serializes information the current object
 * @param CreateSubscriptionModel The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeCreateSubscriptionModel(writer: SerializationWriter, createSubscriptionModel: Partial<CreateSubscriptionModel> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!createSubscriptionModel || isSerializingDerivedType) { return; }
    writer.writeStringValue("created_at", createSubscriptionModel.createdAt);
    writer.writeStringValue("family_id", createSubscriptionModel.familyId);
    writer.writeCollectionOfPrimitiveValues<string>("family_members", createSubscriptionModel.familyMembers);
    writer.writeStringValue("id", createSubscriptionModel.id);
    writer.writeCollectionOfPrimitiveValues<string>("labels", createSubscriptionModel.labels);
    writer.writeStringValue("name", createSubscriptionModel.name);
    writer.writeBooleanValue("payed_by_joint_account", createSubscriptionModel.payedByJointAccount);
    writer.writeStringValue("payer_id", createSubscriptionModel.payerId);
    writer.writeCollectionOfObjectValues<CreatePaymentModel>("payments", createSubscriptionModel.payments, serializeCreatePaymentModel);
    writer.writeAdditionalData(createSubscriptionModel.additionalData);
}
/**
 * Serializes information the current object
 * @param CreateSubscriptionPaymentModel The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeCreateSubscriptionPaymentModel(writer: SerializationWriter, createSubscriptionPaymentModel: Partial<CreateSubscriptionPaymentModel> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!createSubscriptionPaymentModel || isSerializingDerivedType) { return; }
    writer.writeStringValue("created_at", createSubscriptionPaymentModel.createdAt);
    writer.writeStringValue("currency", createSubscriptionPaymentModel.currency);
    writer.writeStringValue("end_date", createSubscriptionPaymentModel.endDate);
    writer.writeStringValue("id", createSubscriptionPaymentModel.id);
    writer.writeNumberValue("months", createSubscriptionPaymentModel.months);
    writer.writeNumberValue("price", createSubscriptionPaymentModel.price);
    writer.writeStringValue("start_date", createSubscriptionPaymentModel.startDate);
    writer.writeAdditionalData(createSubscriptionPaymentModel.additionalData);
}
/**
 * Serializes information the current object
 * @param FamilyMemberModel The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeFamilyMemberModel(writer: SerializationWriter, familyMemberModel: Partial<FamilyMemberModel> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!familyMemberModel || isSerializingDerivedType) { return; }
    writer.writeStringValue("created_at", familyMemberModel.createdAt);
    writer.writeStringValue("etag", familyMemberModel.etag);
    writer.writeStringValue("family_id", familyMemberModel.familyId);
    writer.writeStringValue("id", familyMemberModel.id);
    writer.writeBooleanValue("is_kid", familyMemberModel.isKid);
    writer.writeStringValue("name", familyMemberModel.name);
    writer.writeStringValue("updated_at", familyMemberModel.updatedAt);
    writer.writeAdditionalData(familyMemberModel.additionalData);
}
/**
 * Serializes information the current object
 * @param FamilyModel The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeFamilyModel(writer: SerializationWriter, familyModel: Partial<FamilyModel> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!familyModel || isSerializingDerivedType) { return; }
    writer.writeStringValue("created_at", familyModel.createdAt);
    writer.writeStringValue("etag", familyModel.etag);
    writer.writeBooleanValue("have_joint_account", familyModel.haveJointAccount);
    writer.writeStringValue("id", familyModel.id);
    writer.writeBooleanValue("is_owner", familyModel.isOwner);
    writer.writeCollectionOfObjectValues<FamilyMemberModel>("members", familyModel.members, serializeFamilyMemberModel);
    writer.writeStringValue("name", familyModel.name);
    writer.writeStringValue("updated_at", familyModel.updatedAt);
    writer.writeAdditionalData(familyModel.additionalData);
}
/**
 * Serializes information the current object
 * @param HttpError The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeHttpError(writer: SerializationWriter, httpError: Partial<HttpError> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!httpError || isSerializingDerivedType) { return; }
    writer.writeStringValue("message", httpError.messageEscaped);
    writer.writeAdditionalData(httpError.additionalData);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param LabelModel The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeLabelModel(writer: SerializationWriter, labelModel: Partial<LabelModel> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!labelModel || isSerializingDerivedType) { return; }
    writer.writeStringValue("color", labelModel.color);
    writer.writeStringValue("created_at", labelModel.createdAt);
    writer.writeStringValue("etag", labelModel.etag);
    writer.writeStringValue("id", labelModel.id);
    writer.writeBooleanValue("is_default", labelModel.isDefault);
    writer.writeStringValue("name", labelModel.name);
    writer.writeStringValue("updated_at", labelModel.updatedAt);
    writer.writeAdditionalData(labelModel.additionalData);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param PaginatedResponseModelEndpoints_familyModel The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializePaginatedResponseModelEndpoints_familyModel(writer: SerializationWriter, paginatedResponseModelEndpoints_familyModel: Partial<PaginatedResponseModelEndpoints_familyModel> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!paginatedResponseModelEndpoints_familyModel || isSerializingDerivedType) { return; }
    writer.writeCollectionOfObjectValues<FamilyModel>("data", paginatedResponseModelEndpoints_familyModel.data, serializeFamilyModel);
    writer.writeNumberValue("length", paginatedResponseModelEndpoints_familyModel.length);
    writer.writeNumberValue("total", paginatedResponseModelEndpoints_familyModel.total);
    writer.writeAdditionalData(paginatedResponseModelEndpoints_familyModel.additionalData);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param PaginatedResponseModelEndpoints_labelModel The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializePaginatedResponseModelEndpoints_labelModel(writer: SerializationWriter, paginatedResponseModelEndpoints_labelModel: Partial<PaginatedResponseModelEndpoints_labelModel> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!paginatedResponseModelEndpoints_labelModel || isSerializingDerivedType) { return; }
    writer.writeCollectionOfObjectValues<LabelModel>("data", paginatedResponseModelEndpoints_labelModel.data, serializeLabelModel);
    writer.writeNumberValue("length", paginatedResponseModelEndpoints_labelModel.length);
    writer.writeNumberValue("total", paginatedResponseModelEndpoints_labelModel.total);
    writer.writeAdditionalData(paginatedResponseModelEndpoints_labelModel.additionalData);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param PaginatedResponseModelEndpoints_subscriptionModel The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializePaginatedResponseModelEndpoints_subscriptionModel(writer: SerializationWriter, paginatedResponseModelEndpoints_subscriptionModel: Partial<PaginatedResponseModelEndpoints_subscriptionModel> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!paginatedResponseModelEndpoints_subscriptionModel || isSerializingDerivedType) { return; }
    writer.writeCollectionOfObjectValues<SubscriptionModel>("data", paginatedResponseModelEndpoints_subscriptionModel.data, serializeSubscriptionModel);
    writer.writeNumberValue("length", paginatedResponseModelEndpoints_subscriptionModel.length);
    writer.writeNumberValue("total", paginatedResponseModelEndpoints_subscriptionModel.total);
    writer.writeAdditionalData(paginatedResponseModelEndpoints_subscriptionModel.additionalData);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param PatchFamilyMemberModel The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializePatchFamilyMemberModel(writer: SerializationWriter, patchFamilyMemberModel: Partial<PatchFamilyMemberModel> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!patchFamilyMemberModel || isSerializingDerivedType) { return; }
    writer.writeStringValue("email", patchFamilyMemberModel.email);
    writer.writeStringValue("id", patchFamilyMemberModel.id);
    writer.writeBooleanValue("is_kid", patchFamilyMemberModel.isKid);
    writer.writeStringValue("name", patchFamilyMemberModel.name);
    writer.writeStringValue("updated_at", patchFamilyMemberModel.updatedAt);
    writer.writeAdditionalData(patchFamilyMemberModel.additionalData);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param PatchFamilyModel The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializePatchFamilyModel(writer: SerializationWriter, patchFamilyModel: Partial<PatchFamilyModel> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!patchFamilyModel || isSerializingDerivedType) { return; }
    writer.writeBooleanValue("have_joint_account", patchFamilyModel.haveJointAccount);
    writer.writeStringValue("id", patchFamilyModel.id);
    writer.writeCollectionOfObjectValues<PatchFamilyMemberModel>("members", patchFamilyModel.members, serializePatchFamilyMemberModel);
    writer.writeStringValue("name", patchFamilyModel.name);
    writer.writeStringValue("updated_at", patchFamilyModel.updatedAt);
    writer.writeAdditionalData(patchFamilyModel.additionalData);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param PatchPaymentModel The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializePatchPaymentModel(writer: SerializationWriter, patchPaymentModel: Partial<PatchPaymentModel> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!patchPaymentModel || isSerializingDerivedType) { return; }
    writer.writeStringValue("currency", patchPaymentModel.currency);
    writer.writeStringValue("end_date", patchPaymentModel.endDate);
    writer.writeStringValue("id", patchPaymentModel.id);
    writer.writeNumberValue("months", patchPaymentModel.months);
    writer.writeNumberValue("price", patchPaymentModel.price);
    writer.writeStringValue("start_date", patchPaymentModel.startDate);
    writer.writeStringValue("updated_at", patchPaymentModel.updatedAt);
    writer.writeAdditionalData(patchPaymentModel.additionalData);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param PatchSubscriptionModel The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializePatchSubscriptionModel(writer: SerializationWriter, patchSubscriptionModel: Partial<PatchSubscriptionModel> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!patchSubscriptionModel || isSerializingDerivedType) { return; }
    writer.writeStringValue("family_id", patchSubscriptionModel.familyId);
    writer.writeCollectionOfPrimitiveValues<string>("family_members", patchSubscriptionModel.familyMembers);
    writer.writeStringValue("id", patchSubscriptionModel.id);
    writer.writeCollectionOfPrimitiveValues<string>("labels", patchSubscriptionModel.labels);
    writer.writeStringValue("name", patchSubscriptionModel.name);
    writer.writeBooleanValue("payed_by_joint_account", patchSubscriptionModel.payedByJointAccount);
    writer.writeStringValue("payer_id", patchSubscriptionModel.payerId);
    writer.writeCollectionOfObjectValues<PatchPaymentModel>("payments", patchSubscriptionModel.payments, serializePatchPaymentModel);
    writer.writeStringValue("updated_at", patchSubscriptionModel.updatedAt);
    writer.writeAdditionalData(patchSubscriptionModel.additionalData);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param PaymentModel The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializePaymentModel(writer: SerializationWriter, paymentModel: Partial<PaymentModel> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!paymentModel || isSerializingDerivedType) { return; }
    writer.writeStringValue("created_at", paymentModel.createdAt);
    writer.writeStringValue("currency", paymentModel.currency);
    writer.writeStringValue("end_date", paymentModel.endDate);
    writer.writeStringValue("etag", paymentModel.etag);
    writer.writeStringValue("id", paymentModel.id);
    writer.writeNumberValue("months", paymentModel.months);
    writer.writeNumberValue("price", paymentModel.price);
    writer.writeStringValue("start_date", paymentModel.startDate);
    writer.writeStringValue("updated_at", paymentModel.updatedAt);
    writer.writeAdditionalData(paymentModel.additionalData);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param SubscriptionModel The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeSubscriptionModel(writer: SerializationWriter, subscriptionModel: Partial<SubscriptionModel> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!subscriptionModel || isSerializingDerivedType) { return; }
    writer.writeStringValue("created_at", subscriptionModel.createdAt);
    writer.writeStringValue("etag", subscriptionModel.etag);
    writer.writeStringValue("family_id", subscriptionModel.familyId);
    writer.writeCollectionOfPrimitiveValues<string>("family_members", subscriptionModel.familyMembers);
    writer.writeStringValue("id", subscriptionModel.id);
    writer.writeCollectionOfPrimitiveValues<string>("labels", subscriptionModel.labels);
    writer.writeStringValue("name", subscriptionModel.name);
    writer.writeStringValue("payer_id_id", subscriptionModel.payerIdId);
    writer.writeCollectionOfObjectValues<PaymentModel>("payments", subscriptionModel.payments, serializePaymentModel);
    writer.writeStringValue("updated_at", subscriptionModel.updatedAt);
    writer.writeAdditionalData(subscriptionModel.additionalData);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param UpdateFamilyMemberModel The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeUpdateFamilyMemberModel(writer: SerializationWriter, updateFamilyMemberModel: Partial<UpdateFamilyMemberModel> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!updateFamilyMemberModel || isSerializingDerivedType) { return; }
    writer.writeStringValue("email", updateFamilyMemberModel.email);
    writer.writeBooleanValue("id_kid", updateFamilyMemberModel.idKid);
    writer.writeStringValue("name", updateFamilyMemberModel.name);
    writer.writeStringValue("updated_at", updateFamilyMemberModel.updatedAt);
    writer.writeAdditionalData(updateFamilyMemberModel.additionalData);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param UpdateFamilyModel The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeUpdateFamilyModel(writer: SerializationWriter, updateFamilyModel: Partial<UpdateFamilyModel> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!updateFamilyModel || isSerializingDerivedType) { return; }
    writer.writeBooleanValue("have_joint_account", updateFamilyModel.haveJointAccount);
    writer.writeStringValue("name", updateFamilyModel.name);
    writer.writeStringValue("updated_at", updateFamilyModel.updatedAt);
    writer.writeAdditionalData(updateFamilyModel.additionalData);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param UpdateLabelModel The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeUpdateLabelModel(writer: SerializationWriter, updateLabelModel: Partial<UpdateLabelModel> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!updateLabelModel || isSerializingDerivedType) { return; }
    writer.writeStringValue("color", updateLabelModel.color);
    writer.writeStringValue("name", updateLabelModel.name);
    writer.writeStringValue("updated_at", updateLabelModel.updatedAt);
    writer.writeAdditionalData(updateLabelModel.additionalData);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param UpdatePaymentModel The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeUpdatePaymentModel(writer: SerializationWriter, updatePaymentModel: Partial<UpdatePaymentModel> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!updatePaymentModel || isSerializingDerivedType) { return; }
    writer.writeStringValue("currency", updatePaymentModel.currency);
    writer.writeStringValue("end_date", updatePaymentModel.endDate);
    writer.writeNumberValue("months", updatePaymentModel.months);
    writer.writeNumberValue("price", updatePaymentModel.price);
    writer.writeStringValue("start_date", updatePaymentModel.startDate);
    writer.writeStringValue("updated_at", updatePaymentModel.updatedAt);
    writer.writeAdditionalData(updatePaymentModel.additionalData);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param UpdateSubscriptionModel The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeUpdateSubscriptionModel(writer: SerializationWriter, updateSubscriptionModel: Partial<UpdateSubscriptionModel> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!updateSubscriptionModel || isSerializingDerivedType) { return; }
    writer.writeStringValue("family_id", updateSubscriptionModel.familyId);
    writer.writeCollectionOfPrimitiveValues<string>("family_members", updateSubscriptionModel.familyMembers);
    writer.writeCollectionOfPrimitiveValues<string>("labels", updateSubscriptionModel.labels);
    writer.writeStringValue("name", updateSubscriptionModel.name);
    writer.writeBooleanValue("payed_by_joint_account", updateSubscriptionModel.payedByJointAccount);
    writer.writeStringValue("payer_id", updateSubscriptionModel.payerId);
    writer.writeStringValue("updated_at", updateSubscriptionModel.updatedAt);
    writer.writeAdditionalData(updateSubscriptionModel.additionalData);
}
export interface SubscriptionModel extends AdditionalDataHolder, Parsable {
    /**
     * The created_at property
     */
    createdAt?: string | null;
    /**
     * The etag property
     */
    etag?: string | null;
    /**
     * The family_id property
     */
    familyId?: string | null;
    /**
     * The family_members property
     */
    familyMembers?: string[] | null;
    /**
     * The id property
     */
    id?: string | null;
    /**
     * The labels property
     */
    labels?: string[] | null;
    /**
     * The name property
     */
    name?: string | null;
    /**
     * The payer_id_id property
     */
    payerIdId?: string | null;
    /**
     * The payments property
     */
    payments?: PaymentModel[] | null;
    /**
     * The updated_at property
     */
    updatedAt?: string | null;
}
export interface UpdateFamilyMemberModel extends AdditionalDataHolder, Parsable {
    /**
     * The email property
     */
    email?: string | null;
    /**
     * The id_kid property
     */
    idKid?: boolean | null;
    /**
     * The name property
     */
    name?: string | null;
    /**
     * The updated_at property
     */
    updatedAt?: string | null;
}
export interface UpdateFamilyModel extends AdditionalDataHolder, Parsable {
    /**
     * The have_joint_account property
     */
    haveJointAccount?: boolean | null;
    /**
     * The name property
     */
    name?: string | null;
    /**
     * The updated_at property
     */
    updatedAt?: string | null;
}
export interface UpdateLabelModel extends AdditionalDataHolder, Parsable {
    /**
     * The color property
     */
    color?: string | null;
    /**
     * The name property
     */
    name?: string | null;
    /**
     * The updated_at property
     */
    updatedAt?: string | null;
}
export interface UpdatePaymentModel extends AdditionalDataHolder, Parsable {
    /**
     * The currency property
     */
    currency?: string | null;
    /**
     * The end_date property
     */
    endDate?: string | null;
    /**
     * The months property
     */
    months?: number | null;
    /**
     * The price property
     */
    price?: number | null;
    /**
     * The start_date property
     */
    startDate?: string | null;
    /**
     * The updated_at property
     */
    updatedAt?: string | null;
}
export interface UpdateSubscriptionModel extends AdditionalDataHolder, Parsable {
    /**
     * The family_id property
     */
    familyId?: string | null;
    /**
     * The family_members property
     */
    familyMembers?: string[] | null;
    /**
     * The labels property
     */
    labels?: string[] | null;
    /**
     * The name property
     */
    name?: string | null;
    /**
     * The payed_by_joint_account property
     */
    payedByJointAccount?: boolean | null;
    /**
     * The payer_id property
     */
    payerId?: string | null;
    /**
     * The updated_at property
     */
    updatedAt?: string | null;
}
/* tslint:enable */
/* eslint-enable */
