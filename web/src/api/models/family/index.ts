/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {CreateFamilyMemberModel}
 */
// @ts-ignore
export function createCreateFamilyMemberModelFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoCreateFamilyMemberModel;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {CreateFamilyModel}
 */
// @ts-ignore
export function createCreateFamilyModelFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoCreateFamilyModel;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {FamilyAcceptInvitationRequest}
 */
// @ts-ignore
export function createFamilyAcceptInvitationRequestFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoFamilyAcceptInvitationRequest;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {FamilyDeclineInvitationRequest}
 */
// @ts-ignore
export function createFamilyDeclineInvitationRequestFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoFamilyDeclineInvitationRequest;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {FamilyInviteRequest}
 */
// @ts-ignore
export function createFamilyInviteRequestFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoFamilyInviteRequest;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {FamilyInviteResponse}
 */
// @ts-ignore
export function createFamilyInviteResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoFamilyInviteResponse;
}
export interface CreateFamilyMemberModel extends AdditionalDataHolder, Parsable {
    /**
     * The created_at property
     */
    createdAt?: Date | null;
    /**
     * The id property
     */
    id?: string | null;
    /**
     * The name property
     */
    name?: string | null;
    /**
     * The type property
     */
    type?: CreateFamilyMemberModel_type | null;
}
export type CreateFamilyMemberModel_type = (typeof CreateFamilyMemberModel_typeObject)[keyof typeof CreateFamilyMemberModel_typeObject];
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {FamilyMemberModel}
 */
// @ts-ignore
export function createFamilyMemberModelFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoFamilyMemberModel;
}
export interface CreateFamilyModel extends AdditionalDataHolder, Parsable {
    /**
     * The created_at property
     */
    createdAt?: Date | null;
    /**
     * The creator_name property
     */
    creatorName?: string | null;
    /**
     * The id property
     */
    id?: string | null;
    /**
     * The name property
     */
    name?: string | null;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {FamilyModel}
 */
// @ts-ignore
export function createFamilyModelFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoFamilyModel;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {FamilySeeInvitationResponse}
 */
// @ts-ignore
export function createFamilySeeInvitationResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoFamilySeeInvitationResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {PatchFamilyMemberModel}
 */
// @ts-ignore
export function createPatchFamilyMemberModelFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoPatchFamilyMemberModel;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {PatchFamilyModel}
 */
// @ts-ignore
export function createPatchFamilyModelFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoPatchFamilyModel;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {UpdateFamilyMemberModel}
 */
// @ts-ignore
export function createUpdateFamilyMemberModelFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoUpdateFamilyMemberModel;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {UpdateFamilyModel}
 */
// @ts-ignore
export function createUpdateFamilyModelFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoUpdateFamilyModel;
}
/**
 * The deserialization information for the current model
 * @param CreateFamilyMemberModel The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoCreateFamilyMemberModel(createFamilyMemberModel: Partial<CreateFamilyMemberModel> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "created_at": n => { createFamilyMemberModel.createdAt = n.getDateValue(); },
        "id": n => { createFamilyMemberModel.id = n.getStringValue(); },
        "name": n => { createFamilyMemberModel.name = n.getStringValue(); },
        "type": n => { createFamilyMemberModel.type = n.getEnumValue<CreateFamilyMemberModel_type>(CreateFamilyMemberModel_typeObject); },
    }
}
/**
 * The deserialization information for the current model
 * @param CreateFamilyModel The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoCreateFamilyModel(createFamilyModel: Partial<CreateFamilyModel> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "created_at": n => { createFamilyModel.createdAt = n.getDateValue(); },
        "creator_name": n => { createFamilyModel.creatorName = n.getStringValue(); },
        "id": n => { createFamilyModel.id = n.getStringValue(); },
        "name": n => { createFamilyModel.name = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param FamilyAcceptInvitationRequest The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoFamilyAcceptInvitationRequest(familyAcceptInvitationRequest: Partial<FamilyAcceptInvitationRequest> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "family_member_id": n => { familyAcceptInvitationRequest.familyMemberId = n.getStringValue(); },
        "invitation_code": n => { familyAcceptInvitationRequest.invitationCode = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param FamilyDeclineInvitationRequest The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoFamilyDeclineInvitationRequest(familyDeclineInvitationRequest: Partial<FamilyDeclineInvitationRequest> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "family_member_id": n => { familyDeclineInvitationRequest.familyMemberId = n.getStringValue(); },
        "invitation_code": n => { familyDeclineInvitationRequest.invitationCode = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param FamilyInviteRequest The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoFamilyInviteRequest(familyInviteRequest: Partial<FamilyInviteRequest> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "email": n => { familyInviteRequest.email = n.getStringValue(); },
        "family_member_id": n => { familyInviteRequest.familyMemberId = n.getStringValue(); },
        "name": n => { familyInviteRequest.name = n.getStringValue(); },
        "type": n => { familyInviteRequest.type = n.getEnumValue<FamilyInviteRequest_type>(FamilyInviteRequest_typeObject); },
    }
}
/**
 * The deserialization information for the current model
 * @param FamilyInviteResponse The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoFamilyInviteResponse(familyInviteResponse: Partial<FamilyInviteResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "code": n => { familyInviteResponse.code = n.getStringValue(); },
        "family_id": n => { familyInviteResponse.familyId = n.getStringValue(); },
        "family_member_id": n => { familyInviteResponse.familyMemberId = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param FamilyMemberModel The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoFamilyMemberModel(familyMemberModel: Partial<FamilyMemberModel> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "created_at": n => { familyMemberModel.createdAt = n.getDateValue(); },
        "etag": n => { familyMemberModel.etag = n.getStringValue(); },
        "family_id": n => { familyMemberModel.familyId = n.getStringValue(); },
        "has_account": n => { familyMemberModel.hasAccount = n.getBooleanValue(); },
        "id": n => { familyMemberModel.id = n.getStringValue(); },
        "is_you": n => { familyMemberModel.isYou = n.getBooleanValue(); },
        "name": n => { familyMemberModel.name = n.getStringValue(); },
        "type": n => { familyMemberModel.type = n.getEnumValue<FamilyMemberModel_type>(FamilyMemberModel_typeObject); },
        "updated_at": n => { familyMemberModel.updatedAt = n.getDateValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param FamilyModel The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoFamilyModel(familyModel: Partial<FamilyModel> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "created_at": n => { familyModel.createdAt = n.getDateValue(); },
        "etag": n => { familyModel.etag = n.getStringValue(); },
        "id": n => { familyModel.id = n.getStringValue(); },
        "is_owner": n => { familyModel.isOwner = n.getBooleanValue(); },
        "members": n => { familyModel.members = n.getCollectionOfObjectValues<FamilyMemberModel>(createFamilyMemberModelFromDiscriminatorValue); },
        "name": n => { familyModel.name = n.getStringValue(); },
        "updated_at": n => { familyModel.updatedAt = n.getDateValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param FamilySeeInvitationResponse The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoFamilySeeInvitationResponse(familySeeInvitationResponse: Partial<FamilySeeInvitationResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "family": n => { familySeeInvitationResponse.family = n.getObjectValue<FamilyModel>(createFamilyModelFromDiscriminatorValue); },
        "invited_inasmuch_as": n => { familySeeInvitationResponse.invitedInasmuchAs = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param PatchFamilyMemberModel The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoPatchFamilyMemberModel(patchFamilyMemberModel: Partial<PatchFamilyMemberModel> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "id": n => { patchFamilyMemberModel.id = n.getStringValue(); },
        "name": n => { patchFamilyMemberModel.name = n.getStringValue(); },
        "type": n => { patchFamilyMemberModel.type = n.getEnumValue<PatchFamilyMemberModel_type>(PatchFamilyMemberModel_typeObject); },
        "updated_at": n => { patchFamilyMemberModel.updatedAt = n.getDateValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param PatchFamilyModel The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoPatchFamilyModel(patchFamilyModel: Partial<PatchFamilyModel> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "id": n => { patchFamilyModel.id = n.getStringValue(); },
        "members": n => { patchFamilyModel.members = n.getCollectionOfObjectValues<PatchFamilyMemberModel>(createPatchFamilyMemberModelFromDiscriminatorValue); },
        "name": n => { patchFamilyModel.name = n.getStringValue(); },
        "updated_at": n => { patchFamilyModel.updatedAt = n.getDateValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param UpdateFamilyMemberModel The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoUpdateFamilyMemberModel(updateFamilyMemberModel: Partial<UpdateFamilyMemberModel> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "name": n => { updateFamilyMemberModel.name = n.getStringValue(); },
        "type": n => { updateFamilyMemberModel.type = n.getEnumValue<UpdateFamilyMemberModel_type>(UpdateFamilyMemberModel_typeObject); },
        "updated_at": n => { updateFamilyMemberModel.updatedAt = n.getDateValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param UpdateFamilyModel The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoUpdateFamilyModel(updateFamilyModel: Partial<UpdateFamilyModel> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "name": n => { updateFamilyModel.name = n.getStringValue(); },
        "updated_at": n => { updateFamilyModel.updatedAt = n.getDateValue(); },
    }
}
export interface FamilyAcceptInvitationRequest extends AdditionalDataHolder, Parsable {
    /**
     * ID of the family member accepting the invitation
     */
    familyMemberId?: string | null;
    /**
     * Code received in the invitation
     */
    invitationCode?: string | null;
}
export interface FamilyDeclineInvitationRequest extends AdditionalDataHolder, Parsable {
    /**
     * ID of the family member accepting the invitation
     */
    familyMemberId?: string | null;
    /**
     * Code received in the invitation
     */
    invitationCode?: string | null;
}
export interface FamilyInviteRequest extends AdditionalDataHolder, Parsable {
    /**
     * Email of the invited member
     */
    email?: string | null;
    /**
     * ID of the family member to be invited
     */
    familyMemberId?: string | null;
    /**
     * Name of the invited member
     */
    name?: string | null;
    /**
     * Type of the member (adult or kid)
     */
    type?: FamilyInviteRequest_type | null;
}
export type FamilyInviteRequest_type = (typeof FamilyInviteRequest_typeObject)[keyof typeof FamilyInviteRequest_typeObject];
export interface FamilyInviteResponse extends AdditionalDataHolder, Parsable {
    /**
     * The code property
     */
    code?: string | null;
    /**
     * The family_id property
     */
    familyId?: string | null;
    /**
     * The family_member_id property
     */
    familyMemberId?: string | null;
}
/**
 * Family member object containing member information
 */
export interface FamilyMemberModel extends AdditionalDataHolder, Parsable {
    /**
     * @Description Timestamp when the member was created
     */
    createdAt?: Date | null;
    /**
     * @Description Entity tag for optimistic concurrency control
     */
    etag?: string | null;
    /**
     * @Description ID of the family this member belongs to
     */
    familyId?: string | null;
    /**
     * @Description Indicates whether this member has an account with the service provider
     */
    hasAccount?: boolean | null;
    /**
     * @Description Unique identifier for the family member
     */
    id?: string | null;
    /**
     * @Description Indicates whether this member is the current authenticated user
     */
    isYou?: boolean | null;
    /**
     * @Description Name of the family member
     */
    name?: string | null;
    /**
     * @Description Whether this member is a child (affects permissions and features)
     */
    type?: FamilyMemberModel_type | null;
    /**
     * @Description Timestamp when the member was last updated
     */
    updatedAt?: Date | null;
}
export type FamilyMemberModel_type = (typeof FamilyMemberModel_typeObject)[keyof typeof FamilyMemberModel_typeObject];
/**
 * Family details
 */
export interface FamilyModel extends AdditionalDataHolder, Parsable {
    /**
     * @Description ISO 8601 timestamp indicating when the family was originally created
     */
    createdAt?: Date | null;
    /**
     * @Description Entity tag used for optimistic concurrency control to prevent conflicting updates
     */
    etag?: string | null;
    /**
     * @Description Unique identifier for the family (UUID format)
     */
    id?: string | null;
    /**
     * @Description Indicates whether the current authenticated user is the owner of this family
     */
    isOwner?: boolean | null;
    /**
     * @Description Complete list of all members belonging to this family
     */
    members?: FamilyMemberModel[] | null;
    /**
     * @Description Display name of the family
     */
    name?: string | null;
    /**
     * @Description ISO 8601 timestamp indicating when the family information was last modified
     */
    updatedAt?: Date | null;
}
export interface FamilySeeInvitationResponse extends AdditionalDataHolder, Parsable {
    /**
     * Family details
     */
    family?: FamilyModel | null;
    /**
     * Role of the invited member
     */
    invitedInasmuchAs?: string | null;
}
/**
 * Model for updating family member details
 */
export interface PatchFamilyMemberModel extends AdditionalDataHolder, Parsable {
    /**
     * Optional member ID. If not provided, new member will be created
     */
    id?: string | null;
    /**
     * member's name
     */
    name?: string | null;
    /**
     * Indicates if the member is a kid
     */
    type?: PatchFamilyMemberModel_type | null;
    /**
     * Optional timestamp of the last update
     */
    updatedAt?: Date | null;
}
export type PatchFamilyMemberModel_type = (typeof PatchFamilyMemberModel_typeObject)[keyof typeof PatchFamilyMemberModel_typeObject];
/**
 * Model for updating family details
 */
export interface PatchFamilyModel extends AdditionalDataHolder, Parsable {
    /**
     * Family ID
     */
    id?: string | null;
    /**
     * List of family members
     */
    members?: PatchFamilyMemberModel[] | null;
    /**
     * Family name
     */
    name?: string | null;
    /**
     * Optional timestamp of the last update
     */
    updatedAt?: Date | null;
}
/**
 * Serializes information the current object
 * @param CreateFamilyMemberModel The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeCreateFamilyMemberModel(writer: SerializationWriter, createFamilyMemberModel: Partial<CreateFamilyMemberModel> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!createFamilyMemberModel || isSerializingDerivedType) { return; }
    writer.writeDateValue("created_at", createFamilyMemberModel.createdAt);
    writer.writeStringValue("id", createFamilyMemberModel.id);
    writer.writeStringValue("name", createFamilyMemberModel.name);
    writer.writeEnumValue<CreateFamilyMemberModel_type>("type", createFamilyMemberModel.type);
    writer.writeAdditionalData(createFamilyMemberModel.additionalData);
}
/**
 * Serializes information the current object
 * @param CreateFamilyModel The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeCreateFamilyModel(writer: SerializationWriter, createFamilyModel: Partial<CreateFamilyModel> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!createFamilyModel || isSerializingDerivedType) { return; }
    writer.writeDateValue("created_at", createFamilyModel.createdAt);
    writer.writeStringValue("creator_name", createFamilyModel.creatorName);
    writer.writeStringValue("id", createFamilyModel.id);
    writer.writeStringValue("name", createFamilyModel.name);
    writer.writeAdditionalData(createFamilyModel.additionalData);
}
/**
 * Serializes information the current object
 * @param FamilyAcceptInvitationRequest The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeFamilyAcceptInvitationRequest(writer: SerializationWriter, familyAcceptInvitationRequest: Partial<FamilyAcceptInvitationRequest> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!familyAcceptInvitationRequest || isSerializingDerivedType) { return; }
    writer.writeStringValue("family_member_id", familyAcceptInvitationRequest.familyMemberId);
    writer.writeStringValue("invitation_code", familyAcceptInvitationRequest.invitationCode);
    writer.writeAdditionalData(familyAcceptInvitationRequest.additionalData);
}
/**
 * Serializes information the current object
 * @param FamilyDeclineInvitationRequest The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeFamilyDeclineInvitationRequest(writer: SerializationWriter, familyDeclineInvitationRequest: Partial<FamilyDeclineInvitationRequest> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!familyDeclineInvitationRequest || isSerializingDerivedType) { return; }
    writer.writeStringValue("family_member_id", familyDeclineInvitationRequest.familyMemberId);
    writer.writeStringValue("invitation_code", familyDeclineInvitationRequest.invitationCode);
    writer.writeAdditionalData(familyDeclineInvitationRequest.additionalData);
}
/**
 * Serializes information the current object
 * @param FamilyInviteRequest The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeFamilyInviteRequest(writer: SerializationWriter, familyInviteRequest: Partial<FamilyInviteRequest> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!familyInviteRequest || isSerializingDerivedType) { return; }
    writer.writeStringValue("email", familyInviteRequest.email);
    writer.writeStringValue("family_member_id", familyInviteRequest.familyMemberId);
    writer.writeStringValue("name", familyInviteRequest.name);
    writer.writeEnumValue<FamilyInviteRequest_type>("type", familyInviteRequest.type);
    writer.writeAdditionalData(familyInviteRequest.additionalData);
}
/**
 * Serializes information the current object
 * @param FamilyInviteResponse The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeFamilyInviteResponse(writer: SerializationWriter, familyInviteResponse: Partial<FamilyInviteResponse> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!familyInviteResponse || isSerializingDerivedType) { return; }
    writer.writeStringValue("code", familyInviteResponse.code);
    writer.writeStringValue("family_id", familyInviteResponse.familyId);
    writer.writeStringValue("family_member_id", familyInviteResponse.familyMemberId);
    writer.writeAdditionalData(familyInviteResponse.additionalData);
}
/**
 * Serializes information the current object
 * @param FamilyMemberModel The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeFamilyMemberModel(writer: SerializationWriter, familyMemberModel: Partial<FamilyMemberModel> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!familyMemberModel || isSerializingDerivedType) { return; }
    writer.writeDateValue("created_at", familyMemberModel.createdAt);
    writer.writeStringValue("etag", familyMemberModel.etag);
    writer.writeStringValue("family_id", familyMemberModel.familyId);
    writer.writeBooleanValue("has_account", familyMemberModel.hasAccount);
    writer.writeStringValue("id", familyMemberModel.id);
    writer.writeBooleanValue("is_you", familyMemberModel.isYou);
    writer.writeStringValue("name", familyMemberModel.name);
    writer.writeEnumValue<FamilyMemberModel_type>("type", familyMemberModel.type);
    writer.writeDateValue("updated_at", familyMemberModel.updatedAt);
    writer.writeAdditionalData(familyMemberModel.additionalData);
}
/**
 * Serializes information the current object
 * @param FamilyModel The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeFamilyModel(writer: SerializationWriter, familyModel: Partial<FamilyModel> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!familyModel || isSerializingDerivedType) { return; }
    writer.writeDateValue("created_at", familyModel.createdAt);
    writer.writeStringValue("etag", familyModel.etag);
    writer.writeStringValue("id", familyModel.id);
    writer.writeBooleanValue("is_owner", familyModel.isOwner);
    writer.writeCollectionOfObjectValues<FamilyMemberModel>("members", familyModel.members, serializeFamilyMemberModel);
    writer.writeStringValue("name", familyModel.name);
    writer.writeDateValue("updated_at", familyModel.updatedAt);
    writer.writeAdditionalData(familyModel.additionalData);
}
/**
 * Serializes information the current object
 * @param FamilySeeInvitationResponse The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeFamilySeeInvitationResponse(writer: SerializationWriter, familySeeInvitationResponse: Partial<FamilySeeInvitationResponse> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!familySeeInvitationResponse || isSerializingDerivedType) { return; }
    writer.writeObjectValue<FamilyModel>("family", familySeeInvitationResponse.family, serializeFamilyModel);
    writer.writeStringValue("invited_inasmuch_as", familySeeInvitationResponse.invitedInasmuchAs);
    writer.writeAdditionalData(familySeeInvitationResponse.additionalData);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param PatchFamilyMemberModel The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializePatchFamilyMemberModel(writer: SerializationWriter, patchFamilyMemberModel: Partial<PatchFamilyMemberModel> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!patchFamilyMemberModel || isSerializingDerivedType) { return; }
    writer.writeStringValue("id", patchFamilyMemberModel.id);
    writer.writeStringValue("name", patchFamilyMemberModel.name);
    writer.writeEnumValue<PatchFamilyMemberModel_type>("type", patchFamilyMemberModel.type);
    writer.writeDateValue("updated_at", patchFamilyMemberModel.updatedAt);
    writer.writeAdditionalData(patchFamilyMemberModel.additionalData);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param PatchFamilyModel The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializePatchFamilyModel(writer: SerializationWriter, patchFamilyModel: Partial<PatchFamilyModel> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!patchFamilyModel || isSerializingDerivedType) { return; }
    writer.writeStringValue("id", patchFamilyModel.id);
    writer.writeCollectionOfObjectValues<PatchFamilyMemberModel>("members", patchFamilyModel.members, serializePatchFamilyMemberModel);
    writer.writeStringValue("name", patchFamilyModel.name);
    writer.writeDateValue("updated_at", patchFamilyModel.updatedAt);
    writer.writeAdditionalData(patchFamilyModel.additionalData);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param UpdateFamilyMemberModel The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeUpdateFamilyMemberModel(writer: SerializationWriter, updateFamilyMemberModel: Partial<UpdateFamilyMemberModel> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!updateFamilyMemberModel || isSerializingDerivedType) { return; }
    writer.writeStringValue("name", updateFamilyMemberModel.name);
    writer.writeEnumValue<UpdateFamilyMemberModel_type>("type", updateFamilyMemberModel.type);
    writer.writeDateValue("updated_at", updateFamilyMemberModel.updatedAt);
    writer.writeAdditionalData(updateFamilyMemberModel.additionalData);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param UpdateFamilyModel The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeUpdateFamilyModel(writer: SerializationWriter, updateFamilyModel: Partial<UpdateFamilyModel> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!updateFamilyModel || isSerializingDerivedType) { return; }
    writer.writeStringValue("name", updateFamilyModel.name);
    writer.writeDateValue("updated_at", updateFamilyModel.updatedAt);
    writer.writeAdditionalData(updateFamilyModel.additionalData);
}
export interface UpdateFamilyMemberModel extends AdditionalDataHolder, Parsable {
    /**
     * The name property
     */
    name?: string | null;
    /**
     * The type property
     */
    type?: UpdateFamilyMemberModel_type | null;
    /**
     * The updated_at property
     */
    updatedAt?: Date | null;
}
export type UpdateFamilyMemberModel_type = (typeof UpdateFamilyMemberModel_typeObject)[keyof typeof UpdateFamilyMemberModel_typeObject];
export interface UpdateFamilyModel extends AdditionalDataHolder, Parsable {
    /**
     * The name property
     */
    name?: string | null;
    /**
     * The updated_at property
     */
    updatedAt?: Date | null;
}
export const CreateFamilyMemberModel_typeObject = {
    Owner: "owner",
    Adult: "adult",
    Kid: "kid",
} as const;
/**
 * Type of the member (adult or kid)
 */
export const FamilyInviteRequest_typeObject = {
    Adult: "adult",
    Kid: "kid",
} as const;
/**
 * @Description Whether this member is a child (affects permissions and features)
 */
export const FamilyMemberModel_typeObject = {
    Owner: "owner",
    Adult: "adult",
    Kid: "kid",
} as const;
/**
 * Indicates if the member is a kid
 */
export const PatchFamilyMemberModel_typeObject = {
    Owner: "owner",
    Adult: "adult",
    Kid: "kid",
} as const;
export const UpdateFamilyMemberModel_typeObject = {
    Owner: "owner",
    Adult: "adult",
    Kid: "kid",
} as const;
/* tslint:enable */
/* eslint-enable */
