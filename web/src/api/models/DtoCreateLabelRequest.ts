/* tslint:disable */
/* eslint-disable */
/**
 * SubTracker API
 * This api provide HTTPRest endpoints for the application SubTracker.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@mistribe.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { DtoEditableOwnerModel } from './DtoEditableOwnerModel';
import {
    DtoEditableOwnerModelFromJSON,
    DtoEditableOwnerModelFromJSONTyped,
    DtoEditableOwnerModelToJSON,
    DtoEditableOwnerModelToJSONTyped,
} from './DtoEditableOwnerModel';

/**
 * 
 * @export
 * @interface DtoCreateLabelRequest
 */
export interface DtoCreateLabelRequest {
    /**
     * 
     * @type {string}
     * @memberof DtoCreateLabelRequest
     */
    color: string;
    /**
     * 
     * @type {Date}
     * @memberof DtoCreateLabelRequest
     */
    createdAt?: Date;
    /**
     * 
     * @type {string}
     * @memberof DtoCreateLabelRequest
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof DtoCreateLabelRequest
     */
    name: string;
    /**
     * 
     * @type {DtoEditableOwnerModel}
     * @memberof DtoCreateLabelRequest
     */
    owner: DtoEditableOwnerModel;
}

/**
 * Check if a given object implements the DtoCreateLabelRequest interface.
 */
export function instanceOfDtoCreateLabelRequest(value: object): value is DtoCreateLabelRequest {
    if (!('color' in value) || value['color'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('owner' in value) || value['owner'] === undefined) return false;
    return true;
}

export function DtoCreateLabelRequestFromJSON(json: any): DtoCreateLabelRequest {
    return DtoCreateLabelRequestFromJSONTyped(json, false);
}

export function DtoCreateLabelRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): DtoCreateLabelRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'color': json['color'],
        'createdAt': json['created_at'] == null ? undefined : (new Date(json['created_at'])),
        'id': json['id'] == null ? undefined : json['id'],
        'name': json['name'],
        'owner': DtoEditableOwnerModelFromJSON(json['owner']),
    };
}

export function DtoCreateLabelRequestToJSON(json: any): DtoCreateLabelRequest {
    return DtoCreateLabelRequestToJSONTyped(json, false);
}

export function DtoCreateLabelRequestToJSONTyped(value?: DtoCreateLabelRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'color': value['color'],
        'created_at': value['createdAt'] == null ? value['createdAt'] : value['createdAt'].toISOString(),
        'id': value['id'],
        'name': value['name'],
        'owner': DtoEditableOwnerModelToJSON(value['owner']),
    };
}

