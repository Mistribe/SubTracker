/* tslint:disable */
/* eslint-disable */
/**
 * SubTracker API
 * This api provide HTTPRest endpoints for the application SubTracker.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@mistribe.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { DtoFamilyModel } from './DtoFamilyModel';
import {
    DtoFamilyModelFromJSON,
    DtoFamilyModelFromJSONTyped,
    DtoFamilyModelToJSON,
    DtoFamilyModelToJSONTyped,
} from './DtoFamilyModel';
import type { DtoLimit } from './DtoLimit';
import {
    DtoLimitFromJSON,
    DtoLimitFromJSONTyped,
    DtoLimitToJSON,
    DtoLimitToJSONTyped,
} from './DtoLimit';

/**
 * 
 * @export
 * @interface DtoUserFamilyResponse
 */
export interface DtoUserFamilyResponse {
    /**
     * 
     * @type {DtoFamilyModel}
     * @memberof DtoUserFamilyResponse
     */
    family?: DtoFamilyModel;
    /**
     * 
     * @type {Array<DtoLimit>}
     * @memberof DtoUserFamilyResponse
     */
    limits?: Array<DtoLimit>;
}

/**
 * Check if a given object implements the DtoUserFamilyResponse interface.
 */
export function instanceOfDtoUserFamilyResponse(value: object): value is DtoUserFamilyResponse {
    return true;
}

export function DtoUserFamilyResponseFromJSON(json: any): DtoUserFamilyResponse {
    return DtoUserFamilyResponseFromJSONTyped(json, false);
}

export function DtoUserFamilyResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): DtoUserFamilyResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'family': json['family'] == null ? undefined : DtoFamilyModelFromJSON(json['family']),
        'limits': json['limits'] == null ? undefined : ((json['limits'] as Array<any>).map(DtoLimitFromJSON)),
    };
}

export function DtoUserFamilyResponseToJSON(json: any): DtoUserFamilyResponse {
    return DtoUserFamilyResponseToJSONTyped(json, false);
}

export function DtoUserFamilyResponseToJSONTyped(value?: DtoUserFamilyResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'family': DtoFamilyModelToJSON(value['family']),
        'limits': value['limits'] == null ? undefined : ((value['limits'] as Array<any>).map(DtoLimitToJSON)),
    };
}

