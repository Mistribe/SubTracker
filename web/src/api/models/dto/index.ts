/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createLabelModelFromDiscriminatorValue, serializeLabelModel, type LabelModel } from '../label/index.js';
// @ts-ignore
import { createProviderModelFromDiscriminatorValue, serializeProviderModel, type ProviderModel } from '../provider/index.js';
// @ts-ignore
import { createSubscriptionModelFromDiscriminatorValue, serializeSubscriptionModel, type SubscriptionModel } from '../subscription/index.js';
// @ts-ignore
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

/**
 * @Description Custom price for this subscription
 */
export interface AmountModel extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The currency property
     */
    currency?: string | null;
    /**
     * @Description Custom price for this subscription
     */
    source?: AmountModel | null;
    /**
     * The value property
     */
    value?: number | null;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {AmountModel}
 */
// @ts-ignore
export function createAmountModelFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoAmountModel;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {EditableOwnerModel}
 */
// @ts-ignore
export function createEditableOwnerModelFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoEditableOwnerModel;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {OwnerModel}
 */
// @ts-ignore
export function createOwnerModelFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoOwnerModel;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {PaginatedResponseModelLabel_labelModel}
 */
// @ts-ignore
export function createPaginatedResponseModelLabel_labelModelFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoPaginatedResponseModelLabel_labelModel;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {PaginatedResponseModelProvider_ProviderModel}
 */
// @ts-ignore
export function createPaginatedResponseModelProvider_ProviderModelFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoPaginatedResponseModelProvider_ProviderModel;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {PaginatedResponseModelSubscription_SubscriptionModel}
 */
// @ts-ignore
export function createPaginatedResponseModelSubscription_SubscriptionModelFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoPaginatedResponseModelSubscription_SubscriptionModel;
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoAmountModel(amountModel: Partial<AmountModel> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "currency": n => { amountModel.currency = n.getStringValue(); },
        "source": n => { amountModel.source = n.getObjectValue<AmountModel>(createAmountModelFromDiscriminatorValue); },
        "value": n => { amountModel.value = n.getNumberValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoEditableOwnerModel(editableOwnerModel: Partial<EditableOwnerModel> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "family_id": n => { editableOwnerModel.familyId = n.getStringValue(); },
        "type": n => { editableOwnerModel.type = n.getEnumValue<EditableOwnerModel_type>(EditableOwnerModel_typeObject); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoOwnerModel(ownerModel: Partial<OwnerModel> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "etag": n => { ownerModel.etag = n.getStringValue(); },
        "family_id": n => { ownerModel.familyId = n.getStringValue(); },
        "type": n => { ownerModel.type = n.getEnumValue<OwnerModel_type>(OwnerModel_typeObject); },
        "userId": n => { ownerModel.userId = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoPaginatedResponseModelLabel_labelModel(paginatedResponseModelLabel_labelModel: Partial<PaginatedResponseModelLabel_labelModel> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "data": n => { paginatedResponseModelLabel_labelModel.data = n.getCollectionOfObjectValues<LabelModel>(createLabelModelFromDiscriminatorValue); },
        "length": n => { paginatedResponseModelLabel_labelModel.length = n.getNumberValue(); },
        "total": n => { paginatedResponseModelLabel_labelModel.total = n.getNumberValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoPaginatedResponseModelProvider_ProviderModel(paginatedResponseModelProvider_ProviderModel: Partial<PaginatedResponseModelProvider_ProviderModel> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "data": n => { paginatedResponseModelProvider_ProviderModel.data = n.getCollectionOfObjectValues<ProviderModel>(createProviderModelFromDiscriminatorValue); },
        "length": n => { paginatedResponseModelProvider_ProviderModel.length = n.getNumberValue(); },
        "total": n => { paginatedResponseModelProvider_ProviderModel.total = n.getNumberValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoPaginatedResponseModelSubscription_SubscriptionModel(paginatedResponseModelSubscription_SubscriptionModel: Partial<PaginatedResponseModelSubscription_SubscriptionModel> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "data": n => { paginatedResponseModelSubscription_SubscriptionModel.data = n.getCollectionOfObjectValues<SubscriptionModel>(createSubscriptionModelFromDiscriminatorValue); },
        "length": n => { paginatedResponseModelSubscription_SubscriptionModel.length = n.getNumberValue(); },
        "total": n => { paginatedResponseModelSubscription_SubscriptionModel.total = n.getNumberValue(); },
    }
}
export interface EditableOwnerModel extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * @Description Family ID when an ownership type is family (required for family ownership)
     */
    familyId?: string | null;
    /**
     * @Description Type of ownership (personal, family or system)
     */
    type?: EditableOwnerModel_type | null;
}
export type EditableOwnerModel_type = (typeof EditableOwnerModel_typeObject)[keyof typeof EditableOwnerModel_typeObject];
/**
 * @Description Ownership information specifying whether this subscription belongs to a user or family
 */
export interface OwnerModel extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * @Description Entity tag for optimistic concurrency control
     */
    etag?: string | null;
    /**
     * @Description Family ID when an ownership type is family (required for family ownership)
     */
    familyId?: string | null;
    /**
     * @Description Type of ownership (personal, family or system)
     */
    type?: OwnerModel_type | null;
    /**
     * @Description UserProfile ID when an ownership type is personal (required for personal ownership)
     */
    userId?: string | null;
}
export type OwnerModel_type = (typeof OwnerModel_typeObject)[keyof typeof OwnerModel_typeObject];
export interface PaginatedResponseModelLabel_labelModel extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Data contains the list of items for the current page
     */
    data?: LabelModel[] | null;
    /**
     * Length represents the number of items in the current page
     */
    length?: number | null;
    /**
     * Total represents the total number of items available
     */
    total?: number | null;
}
export interface PaginatedResponseModelProvider_ProviderModel extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Data contains the list of items for the current page
     */
    data?: ProviderModel[] | null;
    /**
     * Length represents the number of items in the current page
     */
    length?: number | null;
    /**
     * Total represents the total number of items available
     */
    total?: number | null;
}
export interface PaginatedResponseModelSubscription_SubscriptionModel extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Data contains the list of items for the current page
     */
    data?: SubscriptionModel[] | null;
    /**
     * Length represents the number of items in the current page
     */
    length?: number | null;
    /**
     * Total represents the total number of items available
     */
    total?: number | null;
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeAmountModel(writer: SerializationWriter, amountModel: Partial<AmountModel> | undefined | null = {}) : void {
    if (amountModel) {
        writer.writeStringValue("currency", amountModel.currency);
        writer.writeObjectValue<AmountModel>("source", amountModel.source, serializeAmountModel);
        writer.writeNumberValue("value", amountModel.value);
        writer.writeAdditionalData(amountModel.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeEditableOwnerModel(writer: SerializationWriter, editableOwnerModel: Partial<EditableOwnerModel> | undefined | null = {}) : void {
    if (editableOwnerModel) {
        writer.writeStringValue("family_id", editableOwnerModel.familyId);
        writer.writeEnumValue<EditableOwnerModel_type>("type", editableOwnerModel.type);
        writer.writeAdditionalData(editableOwnerModel.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeOwnerModel(writer: SerializationWriter, ownerModel: Partial<OwnerModel> | undefined | null = {}) : void {
    if (ownerModel) {
        writer.writeStringValue("etag", ownerModel.etag);
        writer.writeStringValue("family_id", ownerModel.familyId);
        writer.writeEnumValue<OwnerModel_type>("type", ownerModel.type);
        writer.writeStringValue("userId", ownerModel.userId);
        writer.writeAdditionalData(ownerModel.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializePaginatedResponseModelLabel_labelModel(writer: SerializationWriter, paginatedResponseModelLabel_labelModel: Partial<PaginatedResponseModelLabel_labelModel> | undefined | null = {}) : void {
    if (paginatedResponseModelLabel_labelModel) {
        writer.writeCollectionOfObjectValues<LabelModel>("data", paginatedResponseModelLabel_labelModel.data, serializeLabelModel);
        writer.writeNumberValue("length", paginatedResponseModelLabel_labelModel.length);
        writer.writeNumberValue("total", paginatedResponseModelLabel_labelModel.total);
        writer.writeAdditionalData(paginatedResponseModelLabel_labelModel.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializePaginatedResponseModelProvider_ProviderModel(writer: SerializationWriter, paginatedResponseModelProvider_ProviderModel: Partial<PaginatedResponseModelProvider_ProviderModel> | undefined | null = {}) : void {
    if (paginatedResponseModelProvider_ProviderModel) {
        writer.writeCollectionOfObjectValues<ProviderModel>("data", paginatedResponseModelProvider_ProviderModel.data, serializeProviderModel);
        writer.writeNumberValue("length", paginatedResponseModelProvider_ProviderModel.length);
        writer.writeNumberValue("total", paginatedResponseModelProvider_ProviderModel.total);
        writer.writeAdditionalData(paginatedResponseModelProvider_ProviderModel.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializePaginatedResponseModelSubscription_SubscriptionModel(writer: SerializationWriter, paginatedResponseModelSubscription_SubscriptionModel: Partial<PaginatedResponseModelSubscription_SubscriptionModel> | undefined | null = {}) : void {
    if (paginatedResponseModelSubscription_SubscriptionModel) {
        writer.writeCollectionOfObjectValues<SubscriptionModel>("data", paginatedResponseModelSubscription_SubscriptionModel.data, serializeSubscriptionModel);
        writer.writeNumberValue("length", paginatedResponseModelSubscription_SubscriptionModel.length);
        writer.writeNumberValue("total", paginatedResponseModelSubscription_SubscriptionModel.total);
        writer.writeAdditionalData(paginatedResponseModelSubscription_SubscriptionModel.additionalData);
    }
}
/**
 * @Description Type of ownership (personal, family or system)
 */
export const EditableOwnerModel_typeObject = {
    Personal: "personal",
    Family: "family",
    System: "system",
} as const;
/**
 * @Description Type of ownership (personal, family or system)
 */
export const OwnerModel_typeObject = {
    Personal: "personal",
    Family: "family",
    System: "system",
} as const;
/* tslint:enable */
/* eslint-enable */
