/* tslint:disable */
/* eslint-disable */
/**
 * SubTracker API
 * This api provide HTTPRest endpoints for the application SubTracker.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@mistribe.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface DtoUpdateProviderRequest
 */
export interface DtoUpdateProviderRequest {
    /**
     * 
     * @type {string}
     * @memberof DtoUpdateProviderRequest
     */
    description?: string;
    /**
     * 
     * @type {string}
     * @memberof DtoUpdateProviderRequest
     */
    iconUrl?: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof DtoUpdateProviderRequest
     */
    labels: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof DtoUpdateProviderRequest
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof DtoUpdateProviderRequest
     */
    pricingPageUrl?: string;
    /**
     * 
     * @type {Date}
     * @memberof DtoUpdateProviderRequest
     */
    updatedAt?: Date;
    /**
     * 
     * @type {string}
     * @memberof DtoUpdateProviderRequest
     */
    url?: string;
}

/**
 * Check if a given object implements the DtoUpdateProviderRequest interface.
 */
export function instanceOfDtoUpdateProviderRequest(value: object): value is DtoUpdateProviderRequest {
    if (!('labels' in value) || value['labels'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    return true;
}

export function DtoUpdateProviderRequestFromJSON(json: any): DtoUpdateProviderRequest {
    return DtoUpdateProviderRequestFromJSONTyped(json, false);
}

export function DtoUpdateProviderRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): DtoUpdateProviderRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'description': json['description'] == null ? undefined : json['description'],
        'iconUrl': json['icon_url'] == null ? undefined : json['icon_url'],
        'labels': json['labels'],
        'name': json['name'],
        'pricingPageUrl': json['pricing_page_url'] == null ? undefined : json['pricing_page_url'],
        'updatedAt': json['updated_at'] == null ? undefined : (new Date(json['updated_at'])),
        'url': json['url'] == null ? undefined : json['url'],
    };
}

export function DtoUpdateProviderRequestToJSON(json: any): DtoUpdateProviderRequest {
    return DtoUpdateProviderRequestToJSONTyped(json, false);
}

export function DtoUpdateProviderRequestToJSONTyped(value?: DtoUpdateProviderRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'description': value['description'],
        'icon_url': value['iconUrl'],
        'labels': value['labels'],
        'name': value['name'],
        'pricing_page_url': value['pricingPageUrl'],
        'updated_at': value['updatedAt'] == null ? value['updatedAt'] : value['updatedAt'].toISOString(),
        'url': value['url'],
    };
}

