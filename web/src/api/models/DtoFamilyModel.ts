/* tslint:disable */
/* eslint-disable */
/**
 * SubTracker API
 * This api provide HTTPRest endpoints for the application SubTracker.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@mistribe.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { DtoFamilyMemberModel } from './DtoFamilyMemberModel';
import {
    DtoFamilyMemberModelFromJSON,
    DtoFamilyMemberModelFromJSONTyped,
    DtoFamilyMemberModelToJSON,
    DtoFamilyMemberModelToJSONTyped,
} from './DtoFamilyMemberModel';

/**
 * Family details
 * @export
 * @interface DtoFamilyModel
 */
export interface DtoFamilyModel {
    /**
     * @Description ISO 8601 timestamp indicating when the family was originally created
     * @type {Date}
     * @memberof DtoFamilyModel
     */
    createdAt: Date;
    /**
     * @Description Entity tag used for optimistic concurrency control to prevent conflicting updates
     * @type {string}
     * @memberof DtoFamilyModel
     */
    etag: string;
    /**
     * @Description Unique identifier for the family (UUID format)
     * @type {string}
     * @memberof DtoFamilyModel
     */
    id: string;
    /**
     * @Description Indicates whether the current authenticated user is the owner of this family
     * @type {boolean}
     * @memberof DtoFamilyModel
     */
    isOwner: boolean;
    /**
     * @Description Complete list of all members belonging to this family
     * @type {Array<DtoFamilyMemberModel>}
     * @memberof DtoFamilyModel
     */
    members: Array<DtoFamilyMemberModel>;
    /**
     * @Description Display name of the family
     * @type {string}
     * @memberof DtoFamilyModel
     */
    name: string;
    /**
     * @Description ISO 8601 timestamp indicating when the family information was last modified
     * @type {Date}
     * @memberof DtoFamilyModel
     */
    updatedAt: Date;
}

/**
 * Check if a given object implements the DtoFamilyModel interface.
 */
export function instanceOfDtoFamilyModel(value: object): value is DtoFamilyModel {
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    if (!('etag' in value) || value['etag'] === undefined) return false;
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('isOwner' in value) || value['isOwner'] === undefined) return false;
    if (!('members' in value) || value['members'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('updatedAt' in value) || value['updatedAt'] === undefined) return false;
    return true;
}

export function DtoFamilyModelFromJSON(json: any): DtoFamilyModel {
    return DtoFamilyModelFromJSONTyped(json, false);
}

export function DtoFamilyModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): DtoFamilyModel {
    if (json == null) {
        return json;
    }
    return {
        
        'createdAt': (new Date(json['created_at'])),
        'etag': json['etag'],
        'id': json['id'],
        'isOwner': json['is_owner'],
        'members': ((json['members'] as Array<any>).map(DtoFamilyMemberModelFromJSON)),
        'name': json['name'],
        'updatedAt': (new Date(json['updated_at'])),
    };
}

export function DtoFamilyModelToJSON(json: any): DtoFamilyModel {
    return DtoFamilyModelToJSONTyped(json, false);
}

export function DtoFamilyModelToJSONTyped(value?: DtoFamilyModel | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'created_at': value['createdAt'].toISOString(),
        'etag': value['etag'],
        'id': value['id'],
        'is_owner': value['isOwner'],
        'members': ((value['members'] as Array<any>).map(DtoFamilyMemberModelToJSON)),
        'name': value['name'],
        'updated_at': value['updatedAt'].toISOString(),
    };
}

