/* tslint:disable */
/* eslint-disable */
/**
 * SubTracker API
 * This api provide HTTPRest endpoints for the application SubTracker.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@mistribe.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { DtoCurrencyRateModel } from './DtoCurrencyRateModel';
import {
    DtoCurrencyRateModelFromJSON,
    DtoCurrencyRateModelFromJSONTyped,
    DtoCurrencyRateModelToJSON,
    DtoCurrencyRateModelToJSONTyped,
} from './DtoCurrencyRateModel';

/**
 * 
 * @export
 * @interface DtoCurrencyRatesModel
 */
export interface DtoCurrencyRatesModel {
    /**
     * 
     * @type {Array<DtoCurrencyRateModel>}
     * @memberof DtoCurrencyRatesModel
     */
    rates: Array<DtoCurrencyRateModel>;
    /**
     * 
     * @type {Date}
     * @memberof DtoCurrencyRatesModel
     */
    timestamp: Date;
}

/**
 * Check if a given object implements the DtoCurrencyRatesModel interface.
 */
export function instanceOfDtoCurrencyRatesModel(value: object): value is DtoCurrencyRatesModel {
    if (!('rates' in value) || value['rates'] === undefined) return false;
    if (!('timestamp' in value) || value['timestamp'] === undefined) return false;
    return true;
}

export function DtoCurrencyRatesModelFromJSON(json: any): DtoCurrencyRatesModel {
    return DtoCurrencyRatesModelFromJSONTyped(json, false);
}

export function DtoCurrencyRatesModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): DtoCurrencyRatesModel {
    if (json == null) {
        return json;
    }
    return {
        
        'rates': ((json['rates'] as Array<any>).map(DtoCurrencyRateModelFromJSON)),
        'timestamp': (new Date(json['timestamp'])),
    };
}

export function DtoCurrencyRatesModelToJSON(json: any): DtoCurrencyRatesModel {
    return DtoCurrencyRatesModelToJSONTyped(json, false);
}

export function DtoCurrencyRatesModelToJSONTyped(value?: DtoCurrencyRatesModel | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'rates': ((value['rates'] as Array<any>).map(DtoCurrencyRateModelToJSON)),
        'timestamp': value['timestamp'].toISOString(),
    };
}

