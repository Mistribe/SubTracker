/* tslint:disable */
/* eslint-disable */
/**
 * SubTracker API
 * This api provide HTTPRest endpoints for the application SubTracker.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@mistribe.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { DtoPriceModel } from './DtoPriceModel';
import {
    DtoPriceModelFromJSON,
    DtoPriceModelFromJSONTyped,
    DtoPriceModelToJSON,
    DtoPriceModelToJSONTyped,
} from './DtoPriceModel';

/**
 * Plan object defining a specific subscription tier with associated pricing options
 * @export
 * @interface DtoPlanModel
 */
export interface DtoPlanModel {
    /**
     * @Description ISO 8601 timestamp when the plan was originally created
     * @type {Date}
     * @memberof DtoPlanModel
     */
    createdAt: Date;
    /**
     * @Description Optional detailed description of the plan features and benefits
     * @type {string}
     * @memberof DtoPlanModel
     */
    description?: string;
    /**
     * @Description Entity tag used for optimistic concurrency control to prevent conflicting updates
     * @type {string}
     * @memberof DtoPlanModel
     */
    etag: string;
    /**
     * @Description Unique identifier for the plan (UUID format)
     * @type {string}
     * @memberof DtoPlanModel
     */
    id: string;
    /**
     * @Description Display name of the subscription plan
     * @type {string}
     * @memberof DtoPlanModel
     */
    name: string;
    /**
     * @Description List of pricing options available for this plan (different currencies, time periods, etc.)
     * @type {Array<DtoPriceModel>}
     * @memberof DtoPlanModel
     */
    prices: Array<DtoPriceModel>;
    /**
     * @Description ISO 8601 timestamp when the plan was last modified
     * @type {Date}
     * @memberof DtoPlanModel
     */
    updatedAt: Date;
}

/**
 * Check if a given object implements the DtoPlanModel interface.
 */
export function instanceOfDtoPlanModel(value: object): value is DtoPlanModel {
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    if (!('etag' in value) || value['etag'] === undefined) return false;
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('prices' in value) || value['prices'] === undefined) return false;
    if (!('updatedAt' in value) || value['updatedAt'] === undefined) return false;
    return true;
}

export function DtoPlanModelFromJSON(json: any): DtoPlanModel {
    return DtoPlanModelFromJSONTyped(json, false);
}

export function DtoPlanModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): DtoPlanModel {
    if (json == null) {
        return json;
    }
    return {
        
        'createdAt': (new Date(json['created_at'])),
        'description': json['description'] == null ? undefined : json['description'],
        'etag': json['etag'],
        'id': json['id'],
        'name': json['name'],
        'prices': ((json['prices'] as Array<any>).map(DtoPriceModelFromJSON)),
        'updatedAt': (new Date(json['updated_at'])),
    };
}

export function DtoPlanModelToJSON(json: any): DtoPlanModel {
    return DtoPlanModelToJSONTyped(json, false);
}

export function DtoPlanModelToJSONTyped(value?: DtoPlanModel | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'created_at': value['createdAt'].toISOString(),
        'description': value['description'],
        'etag': value['etag'],
        'id': value['id'],
        'name': value['name'],
        'prices': ((value['prices'] as Array<any>).map(DtoPriceModelToJSON)),
        'updated_at': value['updatedAt'].toISOString(),
    };
}

