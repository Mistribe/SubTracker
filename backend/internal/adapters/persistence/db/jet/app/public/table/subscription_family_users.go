//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/postgres"
)

var SubscriptionFamilyUsers = newSubscriptionFamilyUsersTable("public", "subscription_family_users", "")

type subscriptionFamilyUsersTable struct {
	postgres.Table

	// Columns
	FamilyMemberID postgres.ColumnString
	SubscriptionID postgres.ColumnString

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
	DefaultColumns postgres.ColumnList
}

type SubscriptionFamilyUsersTable struct {
	subscriptionFamilyUsersTable

	EXCLUDED subscriptionFamilyUsersTable
}

// AS creates new SubscriptionFamilyUsersTable with assigned alias
func (a SubscriptionFamilyUsersTable) AS(alias string) *SubscriptionFamilyUsersTable {
	return newSubscriptionFamilyUsersTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new SubscriptionFamilyUsersTable with assigned schema name
func (a SubscriptionFamilyUsersTable) FromSchema(schemaName string) *SubscriptionFamilyUsersTable {
	return newSubscriptionFamilyUsersTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new SubscriptionFamilyUsersTable with assigned table prefix
func (a SubscriptionFamilyUsersTable) WithPrefix(prefix string) *SubscriptionFamilyUsersTable {
	return newSubscriptionFamilyUsersTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new SubscriptionFamilyUsersTable with assigned table suffix
func (a SubscriptionFamilyUsersTable) WithSuffix(suffix string) *SubscriptionFamilyUsersTable {
	return newSubscriptionFamilyUsersTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newSubscriptionFamilyUsersTable(schemaName, tableName, alias string) *SubscriptionFamilyUsersTable {
	return &SubscriptionFamilyUsersTable{
		subscriptionFamilyUsersTable: newSubscriptionFamilyUsersTableImpl(schemaName, tableName, alias),
		EXCLUDED:                     newSubscriptionFamilyUsersTableImpl("", "excluded", ""),
	}
}

func newSubscriptionFamilyUsersTableImpl(schemaName, tableName, alias string) subscriptionFamilyUsersTable {
	var (
		FamilyMemberIDColumn = postgres.StringColumn("family_member_id")
		SubscriptionIDColumn = postgres.StringColumn("subscription_id")
		allColumns           = postgres.ColumnList{FamilyMemberIDColumn, SubscriptionIDColumn}
		mutableColumns       = postgres.ColumnList{}
		defaultColumns       = postgres.ColumnList{}
	)

	return subscriptionFamilyUsersTable{
		Table: postgres.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		FamilyMemberID: FamilyMemberIDColumn,
		SubscriptionID: SubscriptionIDColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
		DefaultColumns: defaultColumns,
	}
}
