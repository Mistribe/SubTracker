/*
Kinde Management API

 Provides endpoints to manage your Kinde Businesses.  ## Intro  ## How to use  1. [Set up and authorize a machine-to-machine (M2M) application](https://docs.kinde.com/developer-tools/kinde-api/connect-to-kinde-api/).  2. [Generate a test access token](https://docs.kinde.com/developer-tools/kinde-api/access-token-for-api/)  3. Test request any endpoint using the test token

API version: 1
Contact: support@kinde.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the GetUserMfaResponseMfa type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetUserMfaResponseMfa{}

// GetUserMfaResponseMfa struct for GetUserMfaResponseMfa
type GetUserMfaResponseMfa struct {
	// The MFA's identifier.
	Id *string `json:"id,omitempty"`
	// The type of MFA (e.g. email, SMS, authenticator app).
	Type *string `json:"type,omitempty"`
	// The timestamp when the MFA was created.
	CreatedOn *time.Time `json:"created_on,omitempty"`
	// The identifier used for MFA (e.g. email address, phone number).
	Name *string `json:"name,omitempty"`
	// Whether the MFA is verified or not.
	IsVerified *bool `json:"is_verified,omitempty"`
	// The number of times MFA has been used.
	UsageCount *int32 `json:"usage_count,omitempty"`
	// The timestamp when the MFA was last used.
	LastUsedOn *time.Time `json:"last_used_on,omitempty"`
}

// NewGetUserMfaResponseMfa instantiates a new GetUserMfaResponseMfa object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetUserMfaResponseMfa() *GetUserMfaResponseMfa {
	this := GetUserMfaResponseMfa{}
	return &this
}

// NewGetUserMfaResponseMfaWithDefaults instantiates a new GetUserMfaResponseMfa object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetUserMfaResponseMfaWithDefaults() *GetUserMfaResponseMfa {
	this := GetUserMfaResponseMfa{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *GetUserMfaResponseMfa) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetUserMfaResponseMfa) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *GetUserMfaResponseMfa) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *GetUserMfaResponseMfa) SetId(v string) {
	o.Id = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *GetUserMfaResponseMfa) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetUserMfaResponseMfa) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *GetUserMfaResponseMfa) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *GetUserMfaResponseMfa) SetType(v string) {
	o.Type = &v
}

// GetCreatedOn returns the CreatedOn field value if set, zero value otherwise.
func (o *GetUserMfaResponseMfa) GetCreatedOn() time.Time {
	if o == nil || IsNil(o.CreatedOn) {
		var ret time.Time
		return ret
	}
	return *o.CreatedOn
}

// GetCreatedOnOk returns a tuple with the CreatedOn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetUserMfaResponseMfa) GetCreatedOnOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedOn) {
		return nil, false
	}
	return o.CreatedOn, true
}

// HasCreatedOn returns a boolean if a field has been set.
func (o *GetUserMfaResponseMfa) HasCreatedOn() bool {
	if o != nil && !IsNil(o.CreatedOn) {
		return true
	}

	return false
}

// SetCreatedOn gets a reference to the given time.Time and assigns it to the CreatedOn field.
func (o *GetUserMfaResponseMfa) SetCreatedOn(v time.Time) {
	o.CreatedOn = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *GetUserMfaResponseMfa) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetUserMfaResponseMfa) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *GetUserMfaResponseMfa) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *GetUserMfaResponseMfa) SetName(v string) {
	o.Name = &v
}

// GetIsVerified returns the IsVerified field value if set, zero value otherwise.
func (o *GetUserMfaResponseMfa) GetIsVerified() bool {
	if o == nil || IsNil(o.IsVerified) {
		var ret bool
		return ret
	}
	return *o.IsVerified
}

// GetIsVerifiedOk returns a tuple with the IsVerified field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetUserMfaResponseMfa) GetIsVerifiedOk() (*bool, bool) {
	if o == nil || IsNil(o.IsVerified) {
		return nil, false
	}
	return o.IsVerified, true
}

// HasIsVerified returns a boolean if a field has been set.
func (o *GetUserMfaResponseMfa) HasIsVerified() bool {
	if o != nil && !IsNil(o.IsVerified) {
		return true
	}

	return false
}

// SetIsVerified gets a reference to the given bool and assigns it to the IsVerified field.
func (o *GetUserMfaResponseMfa) SetIsVerified(v bool) {
	o.IsVerified = &v
}

// GetUsageCount returns the UsageCount field value if set, zero value otherwise.
func (o *GetUserMfaResponseMfa) GetUsageCount() int32 {
	if o == nil || IsNil(o.UsageCount) {
		var ret int32
		return ret
	}
	return *o.UsageCount
}

// GetUsageCountOk returns a tuple with the UsageCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetUserMfaResponseMfa) GetUsageCountOk() (*int32, bool) {
	if o == nil || IsNil(o.UsageCount) {
		return nil, false
	}
	return o.UsageCount, true
}

// HasUsageCount returns a boolean if a field has been set.
func (o *GetUserMfaResponseMfa) HasUsageCount() bool {
	if o != nil && !IsNil(o.UsageCount) {
		return true
	}

	return false
}

// SetUsageCount gets a reference to the given int32 and assigns it to the UsageCount field.
func (o *GetUserMfaResponseMfa) SetUsageCount(v int32) {
	o.UsageCount = &v
}

// GetLastUsedOn returns the LastUsedOn field value if set, zero value otherwise.
func (o *GetUserMfaResponseMfa) GetLastUsedOn() time.Time {
	if o == nil || IsNil(o.LastUsedOn) {
		var ret time.Time
		return ret
	}
	return *o.LastUsedOn
}

// GetLastUsedOnOk returns a tuple with the LastUsedOn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetUserMfaResponseMfa) GetLastUsedOnOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LastUsedOn) {
		return nil, false
	}
	return o.LastUsedOn, true
}

// HasLastUsedOn returns a boolean if a field has been set.
func (o *GetUserMfaResponseMfa) HasLastUsedOn() bool {
	if o != nil && !IsNil(o.LastUsedOn) {
		return true
	}

	return false
}

// SetLastUsedOn gets a reference to the given time.Time and assigns it to the LastUsedOn field.
func (o *GetUserMfaResponseMfa) SetLastUsedOn(v time.Time) {
	o.LastUsedOn = &v
}

func (o GetUserMfaResponseMfa) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetUserMfaResponseMfa) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.CreatedOn) {
		toSerialize["created_on"] = o.CreatedOn
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.IsVerified) {
		toSerialize["is_verified"] = o.IsVerified
	}
	if !IsNil(o.UsageCount) {
		toSerialize["usage_count"] = o.UsageCount
	}
	if !IsNil(o.LastUsedOn) {
		toSerialize["last_used_on"] = o.LastUsedOn
	}
	return toSerialize, nil
}

type NullableGetUserMfaResponseMfa struct {
	value *GetUserMfaResponseMfa
	isSet bool
}

func (v NullableGetUserMfaResponseMfa) Get() *GetUserMfaResponseMfa {
	return v.value
}

func (v *NullableGetUserMfaResponseMfa) Set(val *GetUserMfaResponseMfa) {
	v.value = val
	v.isSet = true
}

func (v NullableGetUserMfaResponseMfa) IsSet() bool {
	return v.isSet
}

func (v *NullableGetUserMfaResponseMfa) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetUserMfaResponseMfa(val *GetUserMfaResponseMfa) *NullableGetUserMfaResponseMfa {
	return &NullableGetUserMfaResponseMfa{value: val, isSet: true}
}

func (v NullableGetUserMfaResponseMfa) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetUserMfaResponseMfa) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
