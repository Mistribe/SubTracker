/*
Kinde Management API

 Provides endpoints to manage your Kinde Businesses.  ## Intro  ## How to use  1. [Set up and authorize a machine-to-machine (M2M) application](https://docs.kinde.com/developer-tools/kinde-api/connect-to-kinde-api/).  2. [Generate a test access token](https://docs.kinde.com/developer-tools/kinde-api/access-token-for-api/)  3. Test request any endpoint using the test token

API version: 1
Contact: support@kinde.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CreateConnectionResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateConnectionResponse{}

// CreateConnectionResponse struct for CreateConnectionResponse
type CreateConnectionResponse struct {
	Message    *string                             `json:"message,omitempty"`
	Code       *string                             `json:"code,omitempty"`
	Connection *CreateConnectionResponseConnection `json:"connection,omitempty"`
}

// NewCreateConnectionResponse instantiates a new CreateConnectionResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateConnectionResponse() *CreateConnectionResponse {
	this := CreateConnectionResponse{}
	return &this
}

// NewCreateConnectionResponseWithDefaults instantiates a new CreateConnectionResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateConnectionResponseWithDefaults() *CreateConnectionResponse {
	this := CreateConnectionResponse{}
	return &this
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *CreateConnectionResponse) GetMessage() string {
	if o == nil || IsNil(o.Message) {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateConnectionResponse) GetMessageOk() (*string, bool) {
	if o == nil || IsNil(o.Message) {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *CreateConnectionResponse) HasMessage() bool {
	if o != nil && !IsNil(o.Message) {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *CreateConnectionResponse) SetMessage(v string) {
	o.Message = &v
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *CreateConnectionResponse) GetCode() string {
	if o == nil || IsNil(o.Code) {
		var ret string
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateConnectionResponse) GetCodeOk() (*string, bool) {
	if o == nil || IsNil(o.Code) {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *CreateConnectionResponse) HasCode() bool {
	if o != nil && !IsNil(o.Code) {
		return true
	}

	return false
}

// SetCode gets a reference to the given string and assigns it to the Code field.
func (o *CreateConnectionResponse) SetCode(v string) {
	o.Code = &v
}

// GetConnection returns the Connection field value if set, zero value otherwise.
func (o *CreateConnectionResponse) GetConnection() CreateConnectionResponseConnection {
	if o == nil || IsNil(o.Connection) {
		var ret CreateConnectionResponseConnection
		return ret
	}
	return *o.Connection
}

// GetConnectionOk returns a tuple with the Connection field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateConnectionResponse) GetConnectionOk() (*CreateConnectionResponseConnection, bool) {
	if o == nil || IsNil(o.Connection) {
		return nil, false
	}
	return o.Connection, true
}

// HasConnection returns a boolean if a field has been set.
func (o *CreateConnectionResponse) HasConnection() bool {
	if o != nil && !IsNil(o.Connection) {
		return true
	}

	return false
}

// SetConnection gets a reference to the given CreateConnectionResponseConnection and assigns it to the Connection field.
func (o *CreateConnectionResponse) SetConnection(v CreateConnectionResponseConnection) {
	o.Connection = &v
}

func (o CreateConnectionResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateConnectionResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Message) {
		toSerialize["message"] = o.Message
	}
	if !IsNil(o.Code) {
		toSerialize["code"] = o.Code
	}
	if !IsNil(o.Connection) {
		toSerialize["connection"] = o.Connection
	}
	return toSerialize, nil
}

type NullableCreateConnectionResponse struct {
	value *CreateConnectionResponse
	isSet bool
}

func (v NullableCreateConnectionResponse) Get() *CreateConnectionResponse {
	return v.value
}

func (v *NullableCreateConnectionResponse) Set(val *CreateConnectionResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateConnectionResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateConnectionResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateConnectionResponse(val *CreateConnectionResponse) *NullableCreateConnectionResponse {
	return &NullableCreateConnectionResponse{value: val, isSet: true}
}

func (v NullableCreateConnectionResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateConnectionResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
