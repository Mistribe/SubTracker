/*
Kinde Management API

 Provides endpoints to manage your Kinde Businesses.  ## Intro  ## How to use  1. [Set up and authorize a machine-to-machine (M2M) application](https://docs.kinde.com/developer-tools/kinde-api/connect-to-kinde-api/).  2. [Generate a test access token](https://docs.kinde.com/developer-tools/kinde-api/access-token-for-api/)  3. Test request any endpoint using the test token

API version: 1
Contact: support@kinde.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the GetApplicationResponseApplication type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetApplicationResponseApplication{}

// GetApplicationResponseApplication struct for GetApplicationResponseApplication
type GetApplicationResponseApplication struct {
	// The application's identifier.
	Id *string `json:"id,omitempty"`
	// The application's name.
	Name *string `json:"name,omitempty"`
	// The application's type.
	Type *string `json:"type,omitempty"`
	// The application's client ID.
	ClientId *string `json:"client_id,omitempty"`
	// The application's client secret.
	ClientSecret *string `json:"client_secret,omitempty"`
	// The default login route for resolving session issues.
	LoginUri *string `json:"login_uri,omitempty"`
	// The homepage link to your application.
	HomepageUri *string `json:"homepage_uri,omitempty"`
	// Whether the application has a cancel button to allow users to exit the auth flow [Beta].
	HasCancelButton *bool `json:"has_cancel_button,omitempty"`
}

// NewGetApplicationResponseApplication instantiates a new GetApplicationResponseApplication object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetApplicationResponseApplication() *GetApplicationResponseApplication {
	this := GetApplicationResponseApplication{}
	return &this
}

// NewGetApplicationResponseApplicationWithDefaults instantiates a new GetApplicationResponseApplication object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetApplicationResponseApplicationWithDefaults() *GetApplicationResponseApplication {
	this := GetApplicationResponseApplication{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *GetApplicationResponseApplication) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetApplicationResponseApplication) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *GetApplicationResponseApplication) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *GetApplicationResponseApplication) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *GetApplicationResponseApplication) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetApplicationResponseApplication) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *GetApplicationResponseApplication) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *GetApplicationResponseApplication) SetName(v string) {
	o.Name = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *GetApplicationResponseApplication) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetApplicationResponseApplication) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *GetApplicationResponseApplication) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *GetApplicationResponseApplication) SetType(v string) {
	o.Type = &v
}

// GetClientId returns the ClientId field value if set, zero value otherwise.
func (o *GetApplicationResponseApplication) GetClientId() string {
	if o == nil || IsNil(o.ClientId) {
		var ret string
		return ret
	}
	return *o.ClientId
}

// GetClientIdOk returns a tuple with the ClientId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetApplicationResponseApplication) GetClientIdOk() (*string, bool) {
	if o == nil || IsNil(o.ClientId) {
		return nil, false
	}
	return o.ClientId, true
}

// HasClientId returns a boolean if a field has been set.
func (o *GetApplicationResponseApplication) HasClientId() bool {
	if o != nil && !IsNil(o.ClientId) {
		return true
	}

	return false
}

// SetClientId gets a reference to the given string and assigns it to the ClientId field.
func (o *GetApplicationResponseApplication) SetClientId(v string) {
	o.ClientId = &v
}

// GetClientSecret returns the ClientSecret field value if set, zero value otherwise.
func (o *GetApplicationResponseApplication) GetClientSecret() string {
	if o == nil || IsNil(o.ClientSecret) {
		var ret string
		return ret
	}
	return *o.ClientSecret
}

// GetClientSecretOk returns a tuple with the ClientSecret field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetApplicationResponseApplication) GetClientSecretOk() (*string, bool) {
	if o == nil || IsNil(o.ClientSecret) {
		return nil, false
	}
	return o.ClientSecret, true
}

// HasClientSecret returns a boolean if a field has been set.
func (o *GetApplicationResponseApplication) HasClientSecret() bool {
	if o != nil && !IsNil(o.ClientSecret) {
		return true
	}

	return false
}

// SetClientSecret gets a reference to the given string and assigns it to the ClientSecret field.
func (o *GetApplicationResponseApplication) SetClientSecret(v string) {
	o.ClientSecret = &v
}

// GetLoginUri returns the LoginUri field value if set, zero value otherwise.
func (o *GetApplicationResponseApplication) GetLoginUri() string {
	if o == nil || IsNil(o.LoginUri) {
		var ret string
		return ret
	}
	return *o.LoginUri
}

// GetLoginUriOk returns a tuple with the LoginUri field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetApplicationResponseApplication) GetLoginUriOk() (*string, bool) {
	if o == nil || IsNil(o.LoginUri) {
		return nil, false
	}
	return o.LoginUri, true
}

// HasLoginUri returns a boolean if a field has been set.
func (o *GetApplicationResponseApplication) HasLoginUri() bool {
	if o != nil && !IsNil(o.LoginUri) {
		return true
	}

	return false
}

// SetLoginUri gets a reference to the given string and assigns it to the LoginUri field.
func (o *GetApplicationResponseApplication) SetLoginUri(v string) {
	o.LoginUri = &v
}

// GetHomepageUri returns the HomepageUri field value if set, zero value otherwise.
func (o *GetApplicationResponseApplication) GetHomepageUri() string {
	if o == nil || IsNil(o.HomepageUri) {
		var ret string
		return ret
	}
	return *o.HomepageUri
}

// GetHomepageUriOk returns a tuple with the HomepageUri field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetApplicationResponseApplication) GetHomepageUriOk() (*string, bool) {
	if o == nil || IsNil(o.HomepageUri) {
		return nil, false
	}
	return o.HomepageUri, true
}

// HasHomepageUri returns a boolean if a field has been set.
func (o *GetApplicationResponseApplication) HasHomepageUri() bool {
	if o != nil && !IsNil(o.HomepageUri) {
		return true
	}

	return false
}

// SetHomepageUri gets a reference to the given string and assigns it to the HomepageUri field.
func (o *GetApplicationResponseApplication) SetHomepageUri(v string) {
	o.HomepageUri = &v
}

// GetHasCancelButton returns the HasCancelButton field value if set, zero value otherwise.
func (o *GetApplicationResponseApplication) GetHasCancelButton() bool {
	if o == nil || IsNil(o.HasCancelButton) {
		var ret bool
		return ret
	}
	return *o.HasCancelButton
}

// GetHasCancelButtonOk returns a tuple with the HasCancelButton field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetApplicationResponseApplication) GetHasCancelButtonOk() (*bool, bool) {
	if o == nil || IsNil(o.HasCancelButton) {
		return nil, false
	}
	return o.HasCancelButton, true
}

// HasHasCancelButton returns a boolean if a field has been set.
func (o *GetApplicationResponseApplication) HasHasCancelButton() bool {
	if o != nil && !IsNil(o.HasCancelButton) {
		return true
	}

	return false
}

// SetHasCancelButton gets a reference to the given bool and assigns it to the HasCancelButton field.
func (o *GetApplicationResponseApplication) SetHasCancelButton(v bool) {
	o.HasCancelButton = &v
}

func (o GetApplicationResponseApplication) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetApplicationResponseApplication) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.ClientId) {
		toSerialize["client_id"] = o.ClientId
	}
	if !IsNil(o.ClientSecret) {
		toSerialize["client_secret"] = o.ClientSecret
	}
	if !IsNil(o.LoginUri) {
		toSerialize["login_uri"] = o.LoginUri
	}
	if !IsNil(o.HomepageUri) {
		toSerialize["homepage_uri"] = o.HomepageUri
	}
	if !IsNil(o.HasCancelButton) {
		toSerialize["has_cancel_button"] = o.HasCancelButton
	}
	return toSerialize, nil
}

type NullableGetApplicationResponseApplication struct {
	value *GetApplicationResponseApplication
	isSet bool
}

func (v NullableGetApplicationResponseApplication) Get() *GetApplicationResponseApplication {
	return v.value
}

func (v *NullableGetApplicationResponseApplication) Set(val *GetApplicationResponseApplication) {
	v.value = val
	v.isSet = true
}

func (v NullableGetApplicationResponseApplication) IsSet() bool {
	return v.isSet
}

func (v *NullableGetApplicationResponseApplication) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetApplicationResponseApplication(val *GetApplicationResponseApplication) *NullableGetApplicationResponseApplication {
	return &NullableGetApplicationResponseApplication{value: val, isSet: true}
}

func (v NullableGetApplicationResponseApplication) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetApplicationResponseApplication) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
