/*
Kinde Management API

 Provides endpoints to manage your Kinde Businesses.  ## Intro  ## How to use  1. [Set up and authorize a machine-to-machine (M2M) application](https://docs.kinde.com/developer-tools/kinde-api/connect-to-kinde-api/).  2. [Generate a test access token](https://docs.kinde.com/developer-tools/kinde-api/access-token-for-api/)  3. Test request any endpoint using the test token

API version: 1
Contact: support@kinde.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the UpdateOrganizationUsersRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateOrganizationUsersRequest{}

// UpdateOrganizationUsersRequest struct for UpdateOrganizationUsersRequest
type UpdateOrganizationUsersRequest struct {
	// Users to add, update or remove from the organization.
	Users []UpdateOrganizationUsersRequestUsersInner `json:"users,omitempty"`
}

// NewUpdateOrganizationUsersRequest instantiates a new UpdateOrganizationUsersRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateOrganizationUsersRequest() *UpdateOrganizationUsersRequest {
	this := UpdateOrganizationUsersRequest{}
	return &this
}

// NewUpdateOrganizationUsersRequestWithDefaults instantiates a new UpdateOrganizationUsersRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateOrganizationUsersRequestWithDefaults() *UpdateOrganizationUsersRequest {
	this := UpdateOrganizationUsersRequest{}
	return &this
}

// GetUsers returns the Users field value if set, zero value otherwise.
func (o *UpdateOrganizationUsersRequest) GetUsers() []UpdateOrganizationUsersRequestUsersInner {
	if o == nil || IsNil(o.Users) {
		var ret []UpdateOrganizationUsersRequestUsersInner
		return ret
	}
	return o.Users
}

// GetUsersOk returns a tuple with the Users field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateOrganizationUsersRequest) GetUsersOk() ([]UpdateOrganizationUsersRequestUsersInner, bool) {
	if o == nil || IsNil(o.Users) {
		return nil, false
	}
	return o.Users, true
}

// HasUsers returns a boolean if a field has been set.
func (o *UpdateOrganizationUsersRequest) HasUsers() bool {
	if o != nil && !IsNil(o.Users) {
		return true
	}

	return false
}

// SetUsers gets a reference to the given []UpdateOrganizationUsersRequestUsersInner and assigns it to the Users field.
func (o *UpdateOrganizationUsersRequest) SetUsers(v []UpdateOrganizationUsersRequestUsersInner) {
	o.Users = v
}

func (o UpdateOrganizationUsersRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateOrganizationUsersRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Users) {
		toSerialize["users"] = o.Users
	}
	return toSerialize, nil
}

type NullableUpdateOrganizationUsersRequest struct {
	value *UpdateOrganizationUsersRequest
	isSet bool
}

func (v NullableUpdateOrganizationUsersRequest) Get() *UpdateOrganizationUsersRequest {
	return v.value
}

func (v *NullableUpdateOrganizationUsersRequest) Set(val *UpdateOrganizationUsersRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateOrganizationUsersRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateOrganizationUsersRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateOrganizationUsersRequest(val *UpdateOrganizationUsersRequest) *NullableUpdateOrganizationUsersRequest {
	return &NullableUpdateOrganizationUsersRequest{value: val, isSet: true}
}

func (v NullableUpdateOrganizationUsersRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateOrganizationUsersRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
