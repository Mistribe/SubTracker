/*
Kinde Management API

 Provides endpoints to manage your Kinde Businesses.  ## Intro  ## How to use  1. [Set up and authorize a machine-to-machine (M2M) application](https://docs.kinde.com/developer-tools/kinde-api/connect-to-kinde-api/).  2. [Generate a test access token](https://docs.kinde.com/developer-tools/kinde-api/access-token-for-api/)  3. Test request any endpoint using the test token

API version: 1
Contact: support@kinde.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the GetEnvironmentFeatureFlagsResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetEnvironmentFeatureFlagsResponse{}

// GetEnvironmentFeatureFlagsResponse struct for GetEnvironmentFeatureFlagsResponse
type GetEnvironmentFeatureFlagsResponse struct {
	// Response code.
	Code *string `json:"code,omitempty"`
	// Response message.
	Message *string `json:"message,omitempty"`
	// The environment's feature flag settings.
	FeatureFlags *map[string]GetOrganizationFeatureFlagsResponseFeatureFlagsValue `json:"feature_flags,omitempty"`
	// Pagination token.
	NextToken *string `json:"next_token,omitempty"`
}

// NewGetEnvironmentFeatureFlagsResponse instantiates a new GetEnvironmentFeatureFlagsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetEnvironmentFeatureFlagsResponse() *GetEnvironmentFeatureFlagsResponse {
	this := GetEnvironmentFeatureFlagsResponse{}
	return &this
}

// NewGetEnvironmentFeatureFlagsResponseWithDefaults instantiates a new GetEnvironmentFeatureFlagsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetEnvironmentFeatureFlagsResponseWithDefaults() *GetEnvironmentFeatureFlagsResponse {
	this := GetEnvironmentFeatureFlagsResponse{}
	return &this
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *GetEnvironmentFeatureFlagsResponse) GetCode() string {
	if o == nil || IsNil(o.Code) {
		var ret string
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetEnvironmentFeatureFlagsResponse) GetCodeOk() (*string, bool) {
	if o == nil || IsNil(o.Code) {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *GetEnvironmentFeatureFlagsResponse) HasCode() bool {
	if o != nil && !IsNil(o.Code) {
		return true
	}

	return false
}

// SetCode gets a reference to the given string and assigns it to the Code field.
func (o *GetEnvironmentFeatureFlagsResponse) SetCode(v string) {
	o.Code = &v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *GetEnvironmentFeatureFlagsResponse) GetMessage() string {
	if o == nil || IsNil(o.Message) {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetEnvironmentFeatureFlagsResponse) GetMessageOk() (*string, bool) {
	if o == nil || IsNil(o.Message) {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *GetEnvironmentFeatureFlagsResponse) HasMessage() bool {
	if o != nil && !IsNil(o.Message) {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *GetEnvironmentFeatureFlagsResponse) SetMessage(v string) {
	o.Message = &v
}

// GetFeatureFlags returns the FeatureFlags field value if set, zero value otherwise.
func (o *GetEnvironmentFeatureFlagsResponse) GetFeatureFlags() map[string]GetOrganizationFeatureFlagsResponseFeatureFlagsValue {
	if o == nil || IsNil(o.FeatureFlags) {
		var ret map[string]GetOrganizationFeatureFlagsResponseFeatureFlagsValue
		return ret
	}
	return *o.FeatureFlags
}

// GetFeatureFlagsOk returns a tuple with the FeatureFlags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetEnvironmentFeatureFlagsResponse) GetFeatureFlagsOk() (*map[string]GetOrganizationFeatureFlagsResponseFeatureFlagsValue, bool) {
	if o == nil || IsNil(o.FeatureFlags) {
		return nil, false
	}
	return o.FeatureFlags, true
}

// HasFeatureFlags returns a boolean if a field has been set.
func (o *GetEnvironmentFeatureFlagsResponse) HasFeatureFlags() bool {
	if o != nil && !IsNil(o.FeatureFlags) {
		return true
	}

	return false
}

// SetFeatureFlags gets a reference to the given map[string]GetOrganizationFeatureFlagsResponseFeatureFlagsValue and assigns it to the FeatureFlags field.
func (o *GetEnvironmentFeatureFlagsResponse) SetFeatureFlags(v map[string]GetOrganizationFeatureFlagsResponseFeatureFlagsValue) {
	o.FeatureFlags = &v
}

// GetNextToken returns the NextToken field value if set, zero value otherwise.
func (o *GetEnvironmentFeatureFlagsResponse) GetNextToken() string {
	if o == nil || IsNil(o.NextToken) {
		var ret string
		return ret
	}
	return *o.NextToken
}

// GetNextTokenOk returns a tuple with the NextToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetEnvironmentFeatureFlagsResponse) GetNextTokenOk() (*string, bool) {
	if o == nil || IsNil(o.NextToken) {
		return nil, false
	}
	return o.NextToken, true
}

// HasNextToken returns a boolean if a field has been set.
func (o *GetEnvironmentFeatureFlagsResponse) HasNextToken() bool {
	if o != nil && !IsNil(o.NextToken) {
		return true
	}

	return false
}

// SetNextToken gets a reference to the given string and assigns it to the NextToken field.
func (o *GetEnvironmentFeatureFlagsResponse) SetNextToken(v string) {
	o.NextToken = &v
}

func (o GetEnvironmentFeatureFlagsResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetEnvironmentFeatureFlagsResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Code) {
		toSerialize["code"] = o.Code
	}
	if !IsNil(o.Message) {
		toSerialize["message"] = o.Message
	}
	if !IsNil(o.FeatureFlags) {
		toSerialize["feature_flags"] = o.FeatureFlags
	}
	if !IsNil(o.NextToken) {
		toSerialize["next_token"] = o.NextToken
	}
	return toSerialize, nil
}

type NullableGetEnvironmentFeatureFlagsResponse struct {
	value *GetEnvironmentFeatureFlagsResponse
	isSet bool
}

func (v NullableGetEnvironmentFeatureFlagsResponse) Get() *GetEnvironmentFeatureFlagsResponse {
	return v.value
}

func (v *NullableGetEnvironmentFeatureFlagsResponse) Set(val *GetEnvironmentFeatureFlagsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetEnvironmentFeatureFlagsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetEnvironmentFeatureFlagsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetEnvironmentFeatureFlagsResponse(val *GetEnvironmentFeatureFlagsResponse) *NullableGetEnvironmentFeatureFlagsResponse {
	return &NullableGetEnvironmentFeatureFlagsResponse{value: val, isSet: true}
}

func (v NullableGetEnvironmentFeatureFlagsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetEnvironmentFeatureFlagsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
