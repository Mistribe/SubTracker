/*
Kinde Management API

 Provides endpoints to manage your Kinde Businesses.  ## Intro  ## How to use  1. [Set up and authorize a machine-to-machine (M2M) application](https://docs.kinde.com/developer-tools/kinde-api/connect-to-kinde-api/).  2. [Generate a test access token](https://docs.kinde.com/developer-tools/kinde-api/access-token-for-api/)  3. Test request any endpoint using the test token

API version: 1
Contact: support@kinde.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the GetOrganizationsUserPermissionsResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetOrganizationsUserPermissionsResponse{}

// GetOrganizationsUserPermissionsResponse struct for GetOrganizationsUserPermissionsResponse
type GetOrganizationsUserPermissionsResponse struct {
	// Response code.
	Code *string `json:"code,omitempty"`
	// Response message.
	Message     *string                      `json:"message,omitempty"`
	Permissions []OrganizationUserPermission `json:"permissions,omitempty"`
}

// NewGetOrganizationsUserPermissionsResponse instantiates a new GetOrganizationsUserPermissionsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetOrganizationsUserPermissionsResponse() *GetOrganizationsUserPermissionsResponse {
	this := GetOrganizationsUserPermissionsResponse{}
	return &this
}

// NewGetOrganizationsUserPermissionsResponseWithDefaults instantiates a new GetOrganizationsUserPermissionsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetOrganizationsUserPermissionsResponseWithDefaults() *GetOrganizationsUserPermissionsResponse {
	this := GetOrganizationsUserPermissionsResponse{}
	return &this
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *GetOrganizationsUserPermissionsResponse) GetCode() string {
	if o == nil || IsNil(o.Code) {
		var ret string
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetOrganizationsUserPermissionsResponse) GetCodeOk() (*string, bool) {
	if o == nil || IsNil(o.Code) {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *GetOrganizationsUserPermissionsResponse) HasCode() bool {
	if o != nil && !IsNil(o.Code) {
		return true
	}

	return false
}

// SetCode gets a reference to the given string and assigns it to the Code field.
func (o *GetOrganizationsUserPermissionsResponse) SetCode(v string) {
	o.Code = &v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *GetOrganizationsUserPermissionsResponse) GetMessage() string {
	if o == nil || IsNil(o.Message) {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetOrganizationsUserPermissionsResponse) GetMessageOk() (*string, bool) {
	if o == nil || IsNil(o.Message) {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *GetOrganizationsUserPermissionsResponse) HasMessage() bool {
	if o != nil && !IsNil(o.Message) {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *GetOrganizationsUserPermissionsResponse) SetMessage(v string) {
	o.Message = &v
}

// GetPermissions returns the Permissions field value if set, zero value otherwise.
func (o *GetOrganizationsUserPermissionsResponse) GetPermissions() []OrganizationUserPermission {
	if o == nil || IsNil(o.Permissions) {
		var ret []OrganizationUserPermission
		return ret
	}
	return o.Permissions
}

// GetPermissionsOk returns a tuple with the Permissions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetOrganizationsUserPermissionsResponse) GetPermissionsOk() ([]OrganizationUserPermission, bool) {
	if o == nil || IsNil(o.Permissions) {
		return nil, false
	}
	return o.Permissions, true
}

// HasPermissions returns a boolean if a field has been set.
func (o *GetOrganizationsUserPermissionsResponse) HasPermissions() bool {
	if o != nil && !IsNil(o.Permissions) {
		return true
	}

	return false
}

// SetPermissions gets a reference to the given []OrganizationUserPermission and assigns it to the Permissions field.
func (o *GetOrganizationsUserPermissionsResponse) SetPermissions(v []OrganizationUserPermission) {
	o.Permissions = v
}

func (o GetOrganizationsUserPermissionsResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetOrganizationsUserPermissionsResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Code) {
		toSerialize["code"] = o.Code
	}
	if !IsNil(o.Message) {
		toSerialize["message"] = o.Message
	}
	if !IsNil(o.Permissions) {
		toSerialize["permissions"] = o.Permissions
	}
	return toSerialize, nil
}

type NullableGetOrganizationsUserPermissionsResponse struct {
	value *GetOrganizationsUserPermissionsResponse
	isSet bool
}

func (v NullableGetOrganizationsUserPermissionsResponse) Get() *GetOrganizationsUserPermissionsResponse {
	return v.value
}

func (v *NullableGetOrganizationsUserPermissionsResponse) Set(val *GetOrganizationsUserPermissionsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetOrganizationsUserPermissionsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetOrganizationsUserPermissionsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetOrganizationsUserPermissionsResponse(val *GetOrganizationsUserPermissionsResponse) *NullableGetOrganizationsUserPermissionsResponse {
	return &NullableGetOrganizationsUserPermissionsResponse{value: val, isSet: true}
}

func (v NullableGetOrganizationsUserPermissionsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetOrganizationsUserPermissionsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
