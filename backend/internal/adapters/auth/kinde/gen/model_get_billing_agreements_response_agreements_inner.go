/*
Kinde Management API

 Provides endpoints to manage your Kinde Businesses.  ## Intro  ## How to use  1. [Set up and authorize a machine-to-machine (M2M) application](https://docs.kinde.com/developer-tools/kinde-api/connect-to-kinde-api/).  2. [Generate a test access token](https://docs.kinde.com/developer-tools/kinde-api/access-token-for-api/)  3. Test request any endpoint using the test token

API version: 1
Contact: support@kinde.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the GetBillingAgreementsResponseAgreementsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetBillingAgreementsResponseAgreementsInner{}

// GetBillingAgreementsResponseAgreementsInner struct for GetBillingAgreementsResponseAgreementsInner
type GetBillingAgreementsResponseAgreementsInner struct {
	// The friendly id of an agreement
	Id *string `json:"id,omitempty"`
	// The plan code the billing customer is subscribed to
	PlanCode *string `json:"plan_code,omitempty"`
	// The date the agreement expired (and was no longer active)
	ExpiresOn *time.Time `json:"expires_on,omitempty"`
	// The friendly id of the billing group this agreement's plan is part of
	BillingGroupId *string `json:"billing_group_id,omitempty"`
	// A list of billing entitlements that is part of this agreement
	Entitlements []GetBillingAgreementsResponseAgreementsInnerEntitlementsInner `json:"entitlements,omitempty"`
}

// NewGetBillingAgreementsResponseAgreementsInner instantiates a new GetBillingAgreementsResponseAgreementsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetBillingAgreementsResponseAgreementsInner() *GetBillingAgreementsResponseAgreementsInner {
	this := GetBillingAgreementsResponseAgreementsInner{}
	return &this
}

// NewGetBillingAgreementsResponseAgreementsInnerWithDefaults instantiates a new GetBillingAgreementsResponseAgreementsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetBillingAgreementsResponseAgreementsInnerWithDefaults() *GetBillingAgreementsResponseAgreementsInner {
	this := GetBillingAgreementsResponseAgreementsInner{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *GetBillingAgreementsResponseAgreementsInner) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetBillingAgreementsResponseAgreementsInner) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *GetBillingAgreementsResponseAgreementsInner) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *GetBillingAgreementsResponseAgreementsInner) SetId(v string) {
	o.Id = &v
}

// GetPlanCode returns the PlanCode field value if set, zero value otherwise.
func (o *GetBillingAgreementsResponseAgreementsInner) GetPlanCode() string {
	if o == nil || IsNil(o.PlanCode) {
		var ret string
		return ret
	}
	return *o.PlanCode
}

// GetPlanCodeOk returns a tuple with the PlanCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetBillingAgreementsResponseAgreementsInner) GetPlanCodeOk() (*string, bool) {
	if o == nil || IsNil(o.PlanCode) {
		return nil, false
	}
	return o.PlanCode, true
}

// HasPlanCode returns a boolean if a field has been set.
func (o *GetBillingAgreementsResponseAgreementsInner) HasPlanCode() bool {
	if o != nil && !IsNil(o.PlanCode) {
		return true
	}

	return false
}

// SetPlanCode gets a reference to the given string and assigns it to the PlanCode field.
func (o *GetBillingAgreementsResponseAgreementsInner) SetPlanCode(v string) {
	o.PlanCode = &v
}

// GetExpiresOn returns the ExpiresOn field value if set, zero value otherwise.
func (o *GetBillingAgreementsResponseAgreementsInner) GetExpiresOn() time.Time {
	if o == nil || IsNil(o.ExpiresOn) {
		var ret time.Time
		return ret
	}
	return *o.ExpiresOn
}

// GetExpiresOnOk returns a tuple with the ExpiresOn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetBillingAgreementsResponseAgreementsInner) GetExpiresOnOk() (*time.Time, bool) {
	if o == nil || IsNil(o.ExpiresOn) {
		return nil, false
	}
	return o.ExpiresOn, true
}

// HasExpiresOn returns a boolean if a field has been set.
func (o *GetBillingAgreementsResponseAgreementsInner) HasExpiresOn() bool {
	if o != nil && !IsNil(o.ExpiresOn) {
		return true
	}

	return false
}

// SetExpiresOn gets a reference to the given time.Time and assigns it to the ExpiresOn field.
func (o *GetBillingAgreementsResponseAgreementsInner) SetExpiresOn(v time.Time) {
	o.ExpiresOn = &v
}

// GetBillingGroupId returns the BillingGroupId field value if set, zero value otherwise.
func (o *GetBillingAgreementsResponseAgreementsInner) GetBillingGroupId() string {
	if o == nil || IsNil(o.BillingGroupId) {
		var ret string
		return ret
	}
	return *o.BillingGroupId
}

// GetBillingGroupIdOk returns a tuple with the BillingGroupId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetBillingAgreementsResponseAgreementsInner) GetBillingGroupIdOk() (*string, bool) {
	if o == nil || IsNil(o.BillingGroupId) {
		return nil, false
	}
	return o.BillingGroupId, true
}

// HasBillingGroupId returns a boolean if a field has been set.
func (o *GetBillingAgreementsResponseAgreementsInner) HasBillingGroupId() bool {
	if o != nil && !IsNil(o.BillingGroupId) {
		return true
	}

	return false
}

// SetBillingGroupId gets a reference to the given string and assigns it to the BillingGroupId field.
func (o *GetBillingAgreementsResponseAgreementsInner) SetBillingGroupId(v string) {
	o.BillingGroupId = &v
}

// GetEntitlements returns the Entitlements field value if set, zero value otherwise.
func (o *GetBillingAgreementsResponseAgreementsInner) GetEntitlements() []GetBillingAgreementsResponseAgreementsInnerEntitlementsInner {
	if o == nil || IsNil(o.Entitlements) {
		var ret []GetBillingAgreementsResponseAgreementsInnerEntitlementsInner
		return ret
	}
	return o.Entitlements
}

// GetEntitlementsOk returns a tuple with the Entitlements field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetBillingAgreementsResponseAgreementsInner) GetEntitlementsOk() ([]GetBillingAgreementsResponseAgreementsInnerEntitlementsInner, bool) {
	if o == nil || IsNil(o.Entitlements) {
		return nil, false
	}
	return o.Entitlements, true
}

// HasEntitlements returns a boolean if a field has been set.
func (o *GetBillingAgreementsResponseAgreementsInner) HasEntitlements() bool {
	if o != nil && !IsNil(o.Entitlements) {
		return true
	}

	return false
}

// SetEntitlements gets a reference to the given []GetBillingAgreementsResponseAgreementsInnerEntitlementsInner and assigns it to the Entitlements field.
func (o *GetBillingAgreementsResponseAgreementsInner) SetEntitlements(v []GetBillingAgreementsResponseAgreementsInnerEntitlementsInner) {
	o.Entitlements = v
}

func (o GetBillingAgreementsResponseAgreementsInner) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetBillingAgreementsResponseAgreementsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.PlanCode) {
		toSerialize["plan_code"] = o.PlanCode
	}
	if !IsNil(o.ExpiresOn) {
		toSerialize["expires_on"] = o.ExpiresOn
	}
	if !IsNil(o.BillingGroupId) {
		toSerialize["billing_group_id"] = o.BillingGroupId
	}
	if !IsNil(o.Entitlements) {
		toSerialize["entitlements"] = o.Entitlements
	}
	return toSerialize, nil
}

type NullableGetBillingAgreementsResponseAgreementsInner struct {
	value *GetBillingAgreementsResponseAgreementsInner
	isSet bool
}

func (v NullableGetBillingAgreementsResponseAgreementsInner) Get() *GetBillingAgreementsResponseAgreementsInner {
	return v.value
}

func (v *NullableGetBillingAgreementsResponseAgreementsInner) Set(val *GetBillingAgreementsResponseAgreementsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGetBillingAgreementsResponseAgreementsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGetBillingAgreementsResponseAgreementsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetBillingAgreementsResponseAgreementsInner(val *GetBillingAgreementsResponseAgreementsInner) *NullableGetBillingAgreementsResponseAgreementsInner {
	return &NullableGetBillingAgreementsResponseAgreementsInner{value: val, isSet: true}
}

func (v NullableGetBillingAgreementsResponseAgreementsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetBillingAgreementsResponseAgreementsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
