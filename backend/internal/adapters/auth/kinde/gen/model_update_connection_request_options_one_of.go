/*
Kinde Management API

 Provides endpoints to manage your Kinde Businesses.  ## Intro  ## How to use  1. [Set up and authorize a machine-to-machine (M2M) application](https://docs.kinde.com/developer-tools/kinde-api/connect-to-kinde-api/).  2. [Generate a test access token](https://docs.kinde.com/developer-tools/kinde-api/access-token-for-api/)  3. Test request any endpoint using the test token

API version: 1
Contact: support@kinde.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the UpdateConnectionRequestOptionsOneOf type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateConnectionRequestOptionsOneOf{}

// UpdateConnectionRequestOptionsOneOf Azure AD connection options.
type UpdateConnectionRequestOptionsOneOf struct {
	// Client ID.
	ClientId *string `json:"client_id,omitempty"`
	// Client secret.
	ClientSecret *string `json:"client_secret,omitempty"`
	// List of domains to limit authentication.
	HomeRealmDomains []string `json:"home_realm_domains,omitempty"`
	// Domain for Entra ID.
	EntraIdDomain *string `json:"entra_id_domain,omitempty"`
	// Use https://login.windows.net/common instead of a default endpoint.
	IsUseCommonEndpoint *bool `json:"is_use_common_endpoint,omitempty"`
	// Sync user profile data with IDP.
	IsSyncUserProfileOnLogin *bool `json:"is_sync_user_profile_on_login,omitempty"`
	// Include user group info from MS Entra ID.
	IsRetrieveProviderUserGroups *bool `json:"is_retrieve_provider_user_groups,omitempty"`
	// Include additional user profile information.
	IsExtendedAttributesRequired *bool `json:"is_extended_attributes_required,omitempty"`
	// Create users if they don't exist in the system.
	IsCreateMissingUser *bool `json:"is_create_missing_user,omitempty"`
	// Force showing the SSO button for this connection.
	IsForceShowSsoButton *bool `json:"is_force_show_sso_button,omitempty"`
	// Additional upstream parameters to pass to the identity provider.
	UpstreamParams map[string]interface{} `json:"upstream_params,omitempty"`
}

// NewUpdateConnectionRequestOptionsOneOf instantiates a new UpdateConnectionRequestOptionsOneOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateConnectionRequestOptionsOneOf() *UpdateConnectionRequestOptionsOneOf {
	this := UpdateConnectionRequestOptionsOneOf{}
	return &this
}

// NewUpdateConnectionRequestOptionsOneOfWithDefaults instantiates a new UpdateConnectionRequestOptionsOneOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateConnectionRequestOptionsOneOfWithDefaults() *UpdateConnectionRequestOptionsOneOf {
	this := UpdateConnectionRequestOptionsOneOf{}
	return &this
}

// GetClientId returns the ClientId field value if set, zero value otherwise.
func (o *UpdateConnectionRequestOptionsOneOf) GetClientId() string {
	if o == nil || IsNil(o.ClientId) {
		var ret string
		return ret
	}
	return *o.ClientId
}

// GetClientIdOk returns a tuple with the ClientId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateConnectionRequestOptionsOneOf) GetClientIdOk() (*string, bool) {
	if o == nil || IsNil(o.ClientId) {
		return nil, false
	}
	return o.ClientId, true
}

// HasClientId returns a boolean if a field has been set.
func (o *UpdateConnectionRequestOptionsOneOf) HasClientId() bool {
	if o != nil && !IsNil(o.ClientId) {
		return true
	}

	return false
}

// SetClientId gets a reference to the given string and assigns it to the ClientId field.
func (o *UpdateConnectionRequestOptionsOneOf) SetClientId(v string) {
	o.ClientId = &v
}

// GetClientSecret returns the ClientSecret field value if set, zero value otherwise.
func (o *UpdateConnectionRequestOptionsOneOf) GetClientSecret() string {
	if o == nil || IsNil(o.ClientSecret) {
		var ret string
		return ret
	}
	return *o.ClientSecret
}

// GetClientSecretOk returns a tuple with the ClientSecret field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateConnectionRequestOptionsOneOf) GetClientSecretOk() (*string, bool) {
	if o == nil || IsNil(o.ClientSecret) {
		return nil, false
	}
	return o.ClientSecret, true
}

// HasClientSecret returns a boolean if a field has been set.
func (o *UpdateConnectionRequestOptionsOneOf) HasClientSecret() bool {
	if o != nil && !IsNil(o.ClientSecret) {
		return true
	}

	return false
}

// SetClientSecret gets a reference to the given string and assigns it to the ClientSecret field.
func (o *UpdateConnectionRequestOptionsOneOf) SetClientSecret(v string) {
	o.ClientSecret = &v
}

// GetHomeRealmDomains returns the HomeRealmDomains field value if set, zero value otherwise.
func (o *UpdateConnectionRequestOptionsOneOf) GetHomeRealmDomains() []string {
	if o == nil || IsNil(o.HomeRealmDomains) {
		var ret []string
		return ret
	}
	return o.HomeRealmDomains
}

// GetHomeRealmDomainsOk returns a tuple with the HomeRealmDomains field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateConnectionRequestOptionsOneOf) GetHomeRealmDomainsOk() ([]string, bool) {
	if o == nil || IsNil(o.HomeRealmDomains) {
		return nil, false
	}
	return o.HomeRealmDomains, true
}

// HasHomeRealmDomains returns a boolean if a field has been set.
func (o *UpdateConnectionRequestOptionsOneOf) HasHomeRealmDomains() bool {
	if o != nil && !IsNil(o.HomeRealmDomains) {
		return true
	}

	return false
}

// SetHomeRealmDomains gets a reference to the given []string and assigns it to the HomeRealmDomains field.
func (o *UpdateConnectionRequestOptionsOneOf) SetHomeRealmDomains(v []string) {
	o.HomeRealmDomains = v
}

// GetEntraIdDomain returns the EntraIdDomain field value if set, zero value otherwise.
func (o *UpdateConnectionRequestOptionsOneOf) GetEntraIdDomain() string {
	if o == nil || IsNil(o.EntraIdDomain) {
		var ret string
		return ret
	}
	return *o.EntraIdDomain
}

// GetEntraIdDomainOk returns a tuple with the EntraIdDomain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateConnectionRequestOptionsOneOf) GetEntraIdDomainOk() (*string, bool) {
	if o == nil || IsNil(o.EntraIdDomain) {
		return nil, false
	}
	return o.EntraIdDomain, true
}

// HasEntraIdDomain returns a boolean if a field has been set.
func (o *UpdateConnectionRequestOptionsOneOf) HasEntraIdDomain() bool {
	if o != nil && !IsNil(o.EntraIdDomain) {
		return true
	}

	return false
}

// SetEntraIdDomain gets a reference to the given string and assigns it to the EntraIdDomain field.
func (o *UpdateConnectionRequestOptionsOneOf) SetEntraIdDomain(v string) {
	o.EntraIdDomain = &v
}

// GetIsUseCommonEndpoint returns the IsUseCommonEndpoint field value if set, zero value otherwise.
func (o *UpdateConnectionRequestOptionsOneOf) GetIsUseCommonEndpoint() bool {
	if o == nil || IsNil(o.IsUseCommonEndpoint) {
		var ret bool
		return ret
	}
	return *o.IsUseCommonEndpoint
}

// GetIsUseCommonEndpointOk returns a tuple with the IsUseCommonEndpoint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateConnectionRequestOptionsOneOf) GetIsUseCommonEndpointOk() (*bool, bool) {
	if o == nil || IsNil(o.IsUseCommonEndpoint) {
		return nil, false
	}
	return o.IsUseCommonEndpoint, true
}

// HasIsUseCommonEndpoint returns a boolean if a field has been set.
func (o *UpdateConnectionRequestOptionsOneOf) HasIsUseCommonEndpoint() bool {
	if o != nil && !IsNil(o.IsUseCommonEndpoint) {
		return true
	}

	return false
}

// SetIsUseCommonEndpoint gets a reference to the given bool and assigns it to the IsUseCommonEndpoint field.
func (o *UpdateConnectionRequestOptionsOneOf) SetIsUseCommonEndpoint(v bool) {
	o.IsUseCommonEndpoint = &v
}

// GetIsSyncUserProfileOnLogin returns the IsSyncUserProfileOnLogin field value if set, zero value otherwise.
func (o *UpdateConnectionRequestOptionsOneOf) GetIsSyncUserProfileOnLogin() bool {
	if o == nil || IsNil(o.IsSyncUserProfileOnLogin) {
		var ret bool
		return ret
	}
	return *o.IsSyncUserProfileOnLogin
}

// GetIsSyncUserProfileOnLoginOk returns a tuple with the IsSyncUserProfileOnLogin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateConnectionRequestOptionsOneOf) GetIsSyncUserProfileOnLoginOk() (*bool, bool) {
	if o == nil || IsNil(o.IsSyncUserProfileOnLogin) {
		return nil, false
	}
	return o.IsSyncUserProfileOnLogin, true
}

// HasIsSyncUserProfileOnLogin returns a boolean if a field has been set.
func (o *UpdateConnectionRequestOptionsOneOf) HasIsSyncUserProfileOnLogin() bool {
	if o != nil && !IsNil(o.IsSyncUserProfileOnLogin) {
		return true
	}

	return false
}

// SetIsSyncUserProfileOnLogin gets a reference to the given bool and assigns it to the IsSyncUserProfileOnLogin field.
func (o *UpdateConnectionRequestOptionsOneOf) SetIsSyncUserProfileOnLogin(v bool) {
	o.IsSyncUserProfileOnLogin = &v
}

// GetIsRetrieveProviderUserGroups returns the IsRetrieveProviderUserGroups field value if set, zero value otherwise.
func (o *UpdateConnectionRequestOptionsOneOf) GetIsRetrieveProviderUserGroups() bool {
	if o == nil || IsNil(o.IsRetrieveProviderUserGroups) {
		var ret bool
		return ret
	}
	return *o.IsRetrieveProviderUserGroups
}

// GetIsRetrieveProviderUserGroupsOk returns a tuple with the IsRetrieveProviderUserGroups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateConnectionRequestOptionsOneOf) GetIsRetrieveProviderUserGroupsOk() (*bool, bool) {
	if o == nil || IsNil(o.IsRetrieveProviderUserGroups) {
		return nil, false
	}
	return o.IsRetrieveProviderUserGroups, true
}

// HasIsRetrieveProviderUserGroups returns a boolean if a field has been set.
func (o *UpdateConnectionRequestOptionsOneOf) HasIsRetrieveProviderUserGroups() bool {
	if o != nil && !IsNil(o.IsRetrieveProviderUserGroups) {
		return true
	}

	return false
}

// SetIsRetrieveProviderUserGroups gets a reference to the given bool and assigns it to the IsRetrieveProviderUserGroups field.
func (o *UpdateConnectionRequestOptionsOneOf) SetIsRetrieveProviderUserGroups(v bool) {
	o.IsRetrieveProviderUserGroups = &v
}

// GetIsExtendedAttributesRequired returns the IsExtendedAttributesRequired field value if set, zero value otherwise.
func (o *UpdateConnectionRequestOptionsOneOf) GetIsExtendedAttributesRequired() bool {
	if o == nil || IsNil(o.IsExtendedAttributesRequired) {
		var ret bool
		return ret
	}
	return *o.IsExtendedAttributesRequired
}

// GetIsExtendedAttributesRequiredOk returns a tuple with the IsExtendedAttributesRequired field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateConnectionRequestOptionsOneOf) GetIsExtendedAttributesRequiredOk() (*bool, bool) {
	if o == nil || IsNil(o.IsExtendedAttributesRequired) {
		return nil, false
	}
	return o.IsExtendedAttributesRequired, true
}

// HasIsExtendedAttributesRequired returns a boolean if a field has been set.
func (o *UpdateConnectionRequestOptionsOneOf) HasIsExtendedAttributesRequired() bool {
	if o != nil && !IsNil(o.IsExtendedAttributesRequired) {
		return true
	}

	return false
}

// SetIsExtendedAttributesRequired gets a reference to the given bool and assigns it to the IsExtendedAttributesRequired field.
func (o *UpdateConnectionRequestOptionsOneOf) SetIsExtendedAttributesRequired(v bool) {
	o.IsExtendedAttributesRequired = &v
}

// GetIsCreateMissingUser returns the IsCreateMissingUser field value if set, zero value otherwise.
func (o *UpdateConnectionRequestOptionsOneOf) GetIsCreateMissingUser() bool {
	if o == nil || IsNil(o.IsCreateMissingUser) {
		var ret bool
		return ret
	}
	return *o.IsCreateMissingUser
}

// GetIsCreateMissingUserOk returns a tuple with the IsCreateMissingUser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateConnectionRequestOptionsOneOf) GetIsCreateMissingUserOk() (*bool, bool) {
	if o == nil || IsNil(o.IsCreateMissingUser) {
		return nil, false
	}
	return o.IsCreateMissingUser, true
}

// HasIsCreateMissingUser returns a boolean if a field has been set.
func (o *UpdateConnectionRequestOptionsOneOf) HasIsCreateMissingUser() bool {
	if o != nil && !IsNil(o.IsCreateMissingUser) {
		return true
	}

	return false
}

// SetIsCreateMissingUser gets a reference to the given bool and assigns it to the IsCreateMissingUser field.
func (o *UpdateConnectionRequestOptionsOneOf) SetIsCreateMissingUser(v bool) {
	o.IsCreateMissingUser = &v
}

// GetIsForceShowSsoButton returns the IsForceShowSsoButton field value if set, zero value otherwise.
func (o *UpdateConnectionRequestOptionsOneOf) GetIsForceShowSsoButton() bool {
	if o == nil || IsNil(o.IsForceShowSsoButton) {
		var ret bool
		return ret
	}
	return *o.IsForceShowSsoButton
}

// GetIsForceShowSsoButtonOk returns a tuple with the IsForceShowSsoButton field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateConnectionRequestOptionsOneOf) GetIsForceShowSsoButtonOk() (*bool, bool) {
	if o == nil || IsNil(o.IsForceShowSsoButton) {
		return nil, false
	}
	return o.IsForceShowSsoButton, true
}

// HasIsForceShowSsoButton returns a boolean if a field has been set.
func (o *UpdateConnectionRequestOptionsOneOf) HasIsForceShowSsoButton() bool {
	if o != nil && !IsNil(o.IsForceShowSsoButton) {
		return true
	}

	return false
}

// SetIsForceShowSsoButton gets a reference to the given bool and assigns it to the IsForceShowSsoButton field.
func (o *UpdateConnectionRequestOptionsOneOf) SetIsForceShowSsoButton(v bool) {
	o.IsForceShowSsoButton = &v
}

// GetUpstreamParams returns the UpstreamParams field value if set, zero value otherwise.
func (o *UpdateConnectionRequestOptionsOneOf) GetUpstreamParams() map[string]interface{} {
	if o == nil || IsNil(o.UpstreamParams) {
		var ret map[string]interface{}
		return ret
	}
	return o.UpstreamParams
}

// GetUpstreamParamsOk returns a tuple with the UpstreamParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateConnectionRequestOptionsOneOf) GetUpstreamParamsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.UpstreamParams) {
		return map[string]interface{}{}, false
	}
	return o.UpstreamParams, true
}

// HasUpstreamParams returns a boolean if a field has been set.
func (o *UpdateConnectionRequestOptionsOneOf) HasUpstreamParams() bool {
	if o != nil && !IsNil(o.UpstreamParams) {
		return true
	}

	return false
}

// SetUpstreamParams gets a reference to the given map[string]interface{} and assigns it to the UpstreamParams field.
func (o *UpdateConnectionRequestOptionsOneOf) SetUpstreamParams(v map[string]interface{}) {
	o.UpstreamParams = v
}

func (o UpdateConnectionRequestOptionsOneOf) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateConnectionRequestOptionsOneOf) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ClientId) {
		toSerialize["client_id"] = o.ClientId
	}
	if !IsNil(o.ClientSecret) {
		toSerialize["client_secret"] = o.ClientSecret
	}
	if !IsNil(o.HomeRealmDomains) {
		toSerialize["home_realm_domains"] = o.HomeRealmDomains
	}
	if !IsNil(o.EntraIdDomain) {
		toSerialize["entra_id_domain"] = o.EntraIdDomain
	}
	if !IsNil(o.IsUseCommonEndpoint) {
		toSerialize["is_use_common_endpoint"] = o.IsUseCommonEndpoint
	}
	if !IsNil(o.IsSyncUserProfileOnLogin) {
		toSerialize["is_sync_user_profile_on_login"] = o.IsSyncUserProfileOnLogin
	}
	if !IsNil(o.IsRetrieveProviderUserGroups) {
		toSerialize["is_retrieve_provider_user_groups"] = o.IsRetrieveProviderUserGroups
	}
	if !IsNil(o.IsExtendedAttributesRequired) {
		toSerialize["is_extended_attributes_required"] = o.IsExtendedAttributesRequired
	}
	if !IsNil(o.IsCreateMissingUser) {
		toSerialize["is_create_missing_user"] = o.IsCreateMissingUser
	}
	if !IsNil(o.IsForceShowSsoButton) {
		toSerialize["is_force_show_sso_button"] = o.IsForceShowSsoButton
	}
	if !IsNil(o.UpstreamParams) {
		toSerialize["upstream_params"] = o.UpstreamParams
	}
	return toSerialize, nil
}

type NullableUpdateConnectionRequestOptionsOneOf struct {
	value *UpdateConnectionRequestOptionsOneOf
	isSet bool
}

func (v NullableUpdateConnectionRequestOptionsOneOf) Get() *UpdateConnectionRequestOptionsOneOf {
	return v.value
}

func (v *NullableUpdateConnectionRequestOptionsOneOf) Set(val *UpdateConnectionRequestOptionsOneOf) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateConnectionRequestOptionsOneOf) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateConnectionRequestOptionsOneOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateConnectionRequestOptionsOneOf(val *UpdateConnectionRequestOptionsOneOf) *NullableUpdateConnectionRequestOptionsOneOf {
	return &NullableUpdateConnectionRequestOptionsOneOf{value: val, isSet: true}
}

func (v NullableUpdateConnectionRequestOptionsOneOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateConnectionRequestOptionsOneOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
