/*
Kinde Management API

 Provides endpoints to manage your Kinde Businesses.  ## Intro  ## How to use  1. [Set up and authorize a machine-to-machine (M2M) application](https://docs.kinde.com/developer-tools/kinde-api/connect-to-kinde-api/).  2. [Generate a test access token](https://docs.kinde.com/developer-tools/kinde-api/access-token-for-api/)  3. Test request any endpoint using the test token

API version: 1
Contact: support@kinde.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the UpdateOrganizationRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateOrganizationRequest{}

// UpdateOrganizationRequest struct for UpdateOrganizationRequest
type UpdateOrganizationRequest struct {
	// The organization's name.
	Name *string `json:"name,omitempty"`
	// The organization's ID.
	ExternalId *string `json:"external_id,omitempty"`
	// The organization's brand settings - background color.
	BackgroundColor *string `json:"background_color,omitempty"`
	// The organization's brand settings - button color.
	ButtonColor *string `json:"button_color,omitempty"`
	// The organization's brand settings - button text color.
	ButtonTextColor *string `json:"button_text_color,omitempty"`
	// The organization's brand settings - link color.
	LinkColor *string `json:"link_color,omitempty"`
	// The organization's brand settings - dark mode background color.
	BackgroundColorDark *string `json:"background_color_dark,omitempty"`
	// The organization's brand settings - dark mode button color.
	ButtonColorDark *string `json:"button_color_dark,omitempty"`
	// The organization's brand settings - dark mode button text color.
	ButtonTextColorDark *string `json:"button_text_color_dark,omitempty"`
	// The organization's brand settings - dark mode link color.
	LinkColorDark *string `json:"link_color_dark,omitempty"`
	// The organization's brand settings - theme/mode.
	ThemeCode *string `json:"theme_code,omitempty"`
	// The organization's handle.
	Handle *string `json:"handle,omitempty"`
	// Deprecated - Use 'is_auto_membership_enabled' instead.
	// Deprecated
	IsAllowRegistrations *bool `json:"is_allow_registrations,omitempty"`
	// Users can sign up to this organization.
	IsAutoJoinDomainList *bool `json:"is_auto_join_domain_list,omitempty"`
	// Domains allowed for self-sign up to this environment.
	AllowedDomains []string `json:"allowed_domains,omitempty"`
	// Activate advanced organization features.
	IsEnableAdvancedOrgs *bool `json:"is_enable_advanced_orgs,omitempty"`
	// Enforce MFA for all users in this organization.
	IsEnforceMfa *bool `json:"is_enforce_mfa,omitempty"`
	// The name of the organization that will be used in emails
	SenderName NullableString `json:"sender_name,omitempty"`
	// The email address that will be used in emails. Requires custom SMTP to be set up.
	SenderEmail NullableString `json:"sender_email,omitempty"`
}

// NewUpdateOrganizationRequest instantiates a new UpdateOrganizationRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateOrganizationRequest() *UpdateOrganizationRequest {
	this := UpdateOrganizationRequest{}
	return &this
}

// NewUpdateOrganizationRequestWithDefaults instantiates a new UpdateOrganizationRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateOrganizationRequestWithDefaults() *UpdateOrganizationRequest {
	this := UpdateOrganizationRequest{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *UpdateOrganizationRequest) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateOrganizationRequest) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *UpdateOrganizationRequest) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *UpdateOrganizationRequest) SetName(v string) {
	o.Name = &v
}

// GetExternalId returns the ExternalId field value if set, zero value otherwise.
func (o *UpdateOrganizationRequest) GetExternalId() string {
	if o == nil || IsNil(o.ExternalId) {
		var ret string
		return ret
	}
	return *o.ExternalId
}

// GetExternalIdOk returns a tuple with the ExternalId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateOrganizationRequest) GetExternalIdOk() (*string, bool) {
	if o == nil || IsNil(o.ExternalId) {
		return nil, false
	}
	return o.ExternalId, true
}

// HasExternalId returns a boolean if a field has been set.
func (o *UpdateOrganizationRequest) HasExternalId() bool {
	if o != nil && !IsNil(o.ExternalId) {
		return true
	}

	return false
}

// SetExternalId gets a reference to the given string and assigns it to the ExternalId field.
func (o *UpdateOrganizationRequest) SetExternalId(v string) {
	o.ExternalId = &v
}

// GetBackgroundColor returns the BackgroundColor field value if set, zero value otherwise.
func (o *UpdateOrganizationRequest) GetBackgroundColor() string {
	if o == nil || IsNil(o.BackgroundColor) {
		var ret string
		return ret
	}
	return *o.BackgroundColor
}

// GetBackgroundColorOk returns a tuple with the BackgroundColor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateOrganizationRequest) GetBackgroundColorOk() (*string, bool) {
	if o == nil || IsNil(o.BackgroundColor) {
		return nil, false
	}
	return o.BackgroundColor, true
}

// HasBackgroundColor returns a boolean if a field has been set.
func (o *UpdateOrganizationRequest) HasBackgroundColor() bool {
	if o != nil && !IsNil(o.BackgroundColor) {
		return true
	}

	return false
}

// SetBackgroundColor gets a reference to the given string and assigns it to the BackgroundColor field.
func (o *UpdateOrganizationRequest) SetBackgroundColor(v string) {
	o.BackgroundColor = &v
}

// GetButtonColor returns the ButtonColor field value if set, zero value otherwise.
func (o *UpdateOrganizationRequest) GetButtonColor() string {
	if o == nil || IsNil(o.ButtonColor) {
		var ret string
		return ret
	}
	return *o.ButtonColor
}

// GetButtonColorOk returns a tuple with the ButtonColor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateOrganizationRequest) GetButtonColorOk() (*string, bool) {
	if o == nil || IsNil(o.ButtonColor) {
		return nil, false
	}
	return o.ButtonColor, true
}

// HasButtonColor returns a boolean if a field has been set.
func (o *UpdateOrganizationRequest) HasButtonColor() bool {
	if o != nil && !IsNil(o.ButtonColor) {
		return true
	}

	return false
}

// SetButtonColor gets a reference to the given string and assigns it to the ButtonColor field.
func (o *UpdateOrganizationRequest) SetButtonColor(v string) {
	o.ButtonColor = &v
}

// GetButtonTextColor returns the ButtonTextColor field value if set, zero value otherwise.
func (o *UpdateOrganizationRequest) GetButtonTextColor() string {
	if o == nil || IsNil(o.ButtonTextColor) {
		var ret string
		return ret
	}
	return *o.ButtonTextColor
}

// GetButtonTextColorOk returns a tuple with the ButtonTextColor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateOrganizationRequest) GetButtonTextColorOk() (*string, bool) {
	if o == nil || IsNil(o.ButtonTextColor) {
		return nil, false
	}
	return o.ButtonTextColor, true
}

// HasButtonTextColor returns a boolean if a field has been set.
func (o *UpdateOrganizationRequest) HasButtonTextColor() bool {
	if o != nil && !IsNil(o.ButtonTextColor) {
		return true
	}

	return false
}

// SetButtonTextColor gets a reference to the given string and assigns it to the ButtonTextColor field.
func (o *UpdateOrganizationRequest) SetButtonTextColor(v string) {
	o.ButtonTextColor = &v
}

// GetLinkColor returns the LinkColor field value if set, zero value otherwise.
func (o *UpdateOrganizationRequest) GetLinkColor() string {
	if o == nil || IsNil(o.LinkColor) {
		var ret string
		return ret
	}
	return *o.LinkColor
}

// GetLinkColorOk returns a tuple with the LinkColor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateOrganizationRequest) GetLinkColorOk() (*string, bool) {
	if o == nil || IsNil(o.LinkColor) {
		return nil, false
	}
	return o.LinkColor, true
}

// HasLinkColor returns a boolean if a field has been set.
func (o *UpdateOrganizationRequest) HasLinkColor() bool {
	if o != nil && !IsNil(o.LinkColor) {
		return true
	}

	return false
}

// SetLinkColor gets a reference to the given string and assigns it to the LinkColor field.
func (o *UpdateOrganizationRequest) SetLinkColor(v string) {
	o.LinkColor = &v
}

// GetBackgroundColorDark returns the BackgroundColorDark field value if set, zero value otherwise.
func (o *UpdateOrganizationRequest) GetBackgroundColorDark() string {
	if o == nil || IsNil(o.BackgroundColorDark) {
		var ret string
		return ret
	}
	return *o.BackgroundColorDark
}

// GetBackgroundColorDarkOk returns a tuple with the BackgroundColorDark field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateOrganizationRequest) GetBackgroundColorDarkOk() (*string, bool) {
	if o == nil || IsNil(o.BackgroundColorDark) {
		return nil, false
	}
	return o.BackgroundColorDark, true
}

// HasBackgroundColorDark returns a boolean if a field has been set.
func (o *UpdateOrganizationRequest) HasBackgroundColorDark() bool {
	if o != nil && !IsNil(o.BackgroundColorDark) {
		return true
	}

	return false
}

// SetBackgroundColorDark gets a reference to the given string and assigns it to the BackgroundColorDark field.
func (o *UpdateOrganizationRequest) SetBackgroundColorDark(v string) {
	o.BackgroundColorDark = &v
}

// GetButtonColorDark returns the ButtonColorDark field value if set, zero value otherwise.
func (o *UpdateOrganizationRequest) GetButtonColorDark() string {
	if o == nil || IsNil(o.ButtonColorDark) {
		var ret string
		return ret
	}
	return *o.ButtonColorDark
}

// GetButtonColorDarkOk returns a tuple with the ButtonColorDark field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateOrganizationRequest) GetButtonColorDarkOk() (*string, bool) {
	if o == nil || IsNil(o.ButtonColorDark) {
		return nil, false
	}
	return o.ButtonColorDark, true
}

// HasButtonColorDark returns a boolean if a field has been set.
func (o *UpdateOrganizationRequest) HasButtonColorDark() bool {
	if o != nil && !IsNil(o.ButtonColorDark) {
		return true
	}

	return false
}

// SetButtonColorDark gets a reference to the given string and assigns it to the ButtonColorDark field.
func (o *UpdateOrganizationRequest) SetButtonColorDark(v string) {
	o.ButtonColorDark = &v
}

// GetButtonTextColorDark returns the ButtonTextColorDark field value if set, zero value otherwise.
func (o *UpdateOrganizationRequest) GetButtonTextColorDark() string {
	if o == nil || IsNil(o.ButtonTextColorDark) {
		var ret string
		return ret
	}
	return *o.ButtonTextColorDark
}

// GetButtonTextColorDarkOk returns a tuple with the ButtonTextColorDark field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateOrganizationRequest) GetButtonTextColorDarkOk() (*string, bool) {
	if o == nil || IsNil(o.ButtonTextColorDark) {
		return nil, false
	}
	return o.ButtonTextColorDark, true
}

// HasButtonTextColorDark returns a boolean if a field has been set.
func (o *UpdateOrganizationRequest) HasButtonTextColorDark() bool {
	if o != nil && !IsNil(o.ButtonTextColorDark) {
		return true
	}

	return false
}

// SetButtonTextColorDark gets a reference to the given string and assigns it to the ButtonTextColorDark field.
func (o *UpdateOrganizationRequest) SetButtonTextColorDark(v string) {
	o.ButtonTextColorDark = &v
}

// GetLinkColorDark returns the LinkColorDark field value if set, zero value otherwise.
func (o *UpdateOrganizationRequest) GetLinkColorDark() string {
	if o == nil || IsNil(o.LinkColorDark) {
		var ret string
		return ret
	}
	return *o.LinkColorDark
}

// GetLinkColorDarkOk returns a tuple with the LinkColorDark field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateOrganizationRequest) GetLinkColorDarkOk() (*string, bool) {
	if o == nil || IsNil(o.LinkColorDark) {
		return nil, false
	}
	return o.LinkColorDark, true
}

// HasLinkColorDark returns a boolean if a field has been set.
func (o *UpdateOrganizationRequest) HasLinkColorDark() bool {
	if o != nil && !IsNil(o.LinkColorDark) {
		return true
	}

	return false
}

// SetLinkColorDark gets a reference to the given string and assigns it to the LinkColorDark field.
func (o *UpdateOrganizationRequest) SetLinkColorDark(v string) {
	o.LinkColorDark = &v
}

// GetThemeCode returns the ThemeCode field value if set, zero value otherwise.
func (o *UpdateOrganizationRequest) GetThemeCode() string {
	if o == nil || IsNil(o.ThemeCode) {
		var ret string
		return ret
	}
	return *o.ThemeCode
}

// GetThemeCodeOk returns a tuple with the ThemeCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateOrganizationRequest) GetThemeCodeOk() (*string, bool) {
	if o == nil || IsNil(o.ThemeCode) {
		return nil, false
	}
	return o.ThemeCode, true
}

// HasThemeCode returns a boolean if a field has been set.
func (o *UpdateOrganizationRequest) HasThemeCode() bool {
	if o != nil && !IsNil(o.ThemeCode) {
		return true
	}

	return false
}

// SetThemeCode gets a reference to the given string and assigns it to the ThemeCode field.
func (o *UpdateOrganizationRequest) SetThemeCode(v string) {
	o.ThemeCode = &v
}

// GetHandle returns the Handle field value if set, zero value otherwise.
func (o *UpdateOrganizationRequest) GetHandle() string {
	if o == nil || IsNil(o.Handle) {
		var ret string
		return ret
	}
	return *o.Handle
}

// GetHandleOk returns a tuple with the Handle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateOrganizationRequest) GetHandleOk() (*string, bool) {
	if o == nil || IsNil(o.Handle) {
		return nil, false
	}
	return o.Handle, true
}

// HasHandle returns a boolean if a field has been set.
func (o *UpdateOrganizationRequest) HasHandle() bool {
	if o != nil && !IsNil(o.Handle) {
		return true
	}

	return false
}

// SetHandle gets a reference to the given string and assigns it to the Handle field.
func (o *UpdateOrganizationRequest) SetHandle(v string) {
	o.Handle = &v
}

// GetIsAllowRegistrations returns the IsAllowRegistrations field value if set, zero value otherwise.
// Deprecated
func (o *UpdateOrganizationRequest) GetIsAllowRegistrations() bool {
	if o == nil || IsNil(o.IsAllowRegistrations) {
		var ret bool
		return ret
	}
	return *o.IsAllowRegistrations
}

// GetIsAllowRegistrationsOk returns a tuple with the IsAllowRegistrations field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *UpdateOrganizationRequest) GetIsAllowRegistrationsOk() (*bool, bool) {
	if o == nil || IsNil(o.IsAllowRegistrations) {
		return nil, false
	}
	return o.IsAllowRegistrations, true
}

// HasIsAllowRegistrations returns a boolean if a field has been set.
func (o *UpdateOrganizationRequest) HasIsAllowRegistrations() bool {
	if o != nil && !IsNil(o.IsAllowRegistrations) {
		return true
	}

	return false
}

// SetIsAllowRegistrations gets a reference to the given bool and assigns it to the IsAllowRegistrations field.
// Deprecated
func (o *UpdateOrganizationRequest) SetIsAllowRegistrations(v bool) {
	o.IsAllowRegistrations = &v
}

// GetIsAutoJoinDomainList returns the IsAutoJoinDomainList field value if set, zero value otherwise.
func (o *UpdateOrganizationRequest) GetIsAutoJoinDomainList() bool {
	if o == nil || IsNil(o.IsAutoJoinDomainList) {
		var ret bool
		return ret
	}
	return *o.IsAutoJoinDomainList
}

// GetIsAutoJoinDomainListOk returns a tuple with the IsAutoJoinDomainList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateOrganizationRequest) GetIsAutoJoinDomainListOk() (*bool, bool) {
	if o == nil || IsNil(o.IsAutoJoinDomainList) {
		return nil, false
	}
	return o.IsAutoJoinDomainList, true
}

// HasIsAutoJoinDomainList returns a boolean if a field has been set.
func (o *UpdateOrganizationRequest) HasIsAutoJoinDomainList() bool {
	if o != nil && !IsNil(o.IsAutoJoinDomainList) {
		return true
	}

	return false
}

// SetIsAutoJoinDomainList gets a reference to the given bool and assigns it to the IsAutoJoinDomainList field.
func (o *UpdateOrganizationRequest) SetIsAutoJoinDomainList(v bool) {
	o.IsAutoJoinDomainList = &v
}

// GetAllowedDomains returns the AllowedDomains field value if set, zero value otherwise.
func (o *UpdateOrganizationRequest) GetAllowedDomains() []string {
	if o == nil || IsNil(o.AllowedDomains) {
		var ret []string
		return ret
	}
	return o.AllowedDomains
}

// GetAllowedDomainsOk returns a tuple with the AllowedDomains field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateOrganizationRequest) GetAllowedDomainsOk() ([]string, bool) {
	if o == nil || IsNil(o.AllowedDomains) {
		return nil, false
	}
	return o.AllowedDomains, true
}

// HasAllowedDomains returns a boolean if a field has been set.
func (o *UpdateOrganizationRequest) HasAllowedDomains() bool {
	if o != nil && !IsNil(o.AllowedDomains) {
		return true
	}

	return false
}

// SetAllowedDomains gets a reference to the given []string and assigns it to the AllowedDomains field.
func (o *UpdateOrganizationRequest) SetAllowedDomains(v []string) {
	o.AllowedDomains = v
}

// GetIsEnableAdvancedOrgs returns the IsEnableAdvancedOrgs field value if set, zero value otherwise.
func (o *UpdateOrganizationRequest) GetIsEnableAdvancedOrgs() bool {
	if o == nil || IsNil(o.IsEnableAdvancedOrgs) {
		var ret bool
		return ret
	}
	return *o.IsEnableAdvancedOrgs
}

// GetIsEnableAdvancedOrgsOk returns a tuple with the IsEnableAdvancedOrgs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateOrganizationRequest) GetIsEnableAdvancedOrgsOk() (*bool, bool) {
	if o == nil || IsNil(o.IsEnableAdvancedOrgs) {
		return nil, false
	}
	return o.IsEnableAdvancedOrgs, true
}

// HasIsEnableAdvancedOrgs returns a boolean if a field has been set.
func (o *UpdateOrganizationRequest) HasIsEnableAdvancedOrgs() bool {
	if o != nil && !IsNil(o.IsEnableAdvancedOrgs) {
		return true
	}

	return false
}

// SetIsEnableAdvancedOrgs gets a reference to the given bool and assigns it to the IsEnableAdvancedOrgs field.
func (o *UpdateOrganizationRequest) SetIsEnableAdvancedOrgs(v bool) {
	o.IsEnableAdvancedOrgs = &v
}

// GetIsEnforceMfa returns the IsEnforceMfa field value if set, zero value otherwise.
func (o *UpdateOrganizationRequest) GetIsEnforceMfa() bool {
	if o == nil || IsNil(o.IsEnforceMfa) {
		var ret bool
		return ret
	}
	return *o.IsEnforceMfa
}

// GetIsEnforceMfaOk returns a tuple with the IsEnforceMfa field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateOrganizationRequest) GetIsEnforceMfaOk() (*bool, bool) {
	if o == nil || IsNil(o.IsEnforceMfa) {
		return nil, false
	}
	return o.IsEnforceMfa, true
}

// HasIsEnforceMfa returns a boolean if a field has been set.
func (o *UpdateOrganizationRequest) HasIsEnforceMfa() bool {
	if o != nil && !IsNil(o.IsEnforceMfa) {
		return true
	}

	return false
}

// SetIsEnforceMfa gets a reference to the given bool and assigns it to the IsEnforceMfa field.
func (o *UpdateOrganizationRequest) SetIsEnforceMfa(v bool) {
	o.IsEnforceMfa = &v
}

// GetSenderName returns the SenderName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateOrganizationRequest) GetSenderName() string {
	if o == nil || IsNil(o.SenderName.Get()) {
		var ret string
		return ret
	}
	return *o.SenderName.Get()
}

// GetSenderNameOk returns a tuple with the SenderName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateOrganizationRequest) GetSenderNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SenderName.Get(), o.SenderName.IsSet()
}

// HasSenderName returns a boolean if a field has been set.
func (o *UpdateOrganizationRequest) HasSenderName() bool {
	if o != nil && o.SenderName.IsSet() {
		return true
	}

	return false
}

// SetSenderName gets a reference to the given NullableString and assigns it to the SenderName field.
func (o *UpdateOrganizationRequest) SetSenderName(v string) {
	o.SenderName.Set(&v)
}

// SetSenderNameNil sets the value for SenderName to be an explicit nil
func (o *UpdateOrganizationRequest) SetSenderNameNil() {
	o.SenderName.Set(nil)
}

// UnsetSenderName ensures that no value is present for SenderName, not even an explicit nil
func (o *UpdateOrganizationRequest) UnsetSenderName() {
	o.SenderName.Unset()
}

// GetSenderEmail returns the SenderEmail field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateOrganizationRequest) GetSenderEmail() string {
	if o == nil || IsNil(o.SenderEmail.Get()) {
		var ret string
		return ret
	}
	return *o.SenderEmail.Get()
}

// GetSenderEmailOk returns a tuple with the SenderEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateOrganizationRequest) GetSenderEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SenderEmail.Get(), o.SenderEmail.IsSet()
}

// HasSenderEmail returns a boolean if a field has been set.
func (o *UpdateOrganizationRequest) HasSenderEmail() bool {
	if o != nil && o.SenderEmail.IsSet() {
		return true
	}

	return false
}

// SetSenderEmail gets a reference to the given NullableString and assigns it to the SenderEmail field.
func (o *UpdateOrganizationRequest) SetSenderEmail(v string) {
	o.SenderEmail.Set(&v)
}

// SetSenderEmailNil sets the value for SenderEmail to be an explicit nil
func (o *UpdateOrganizationRequest) SetSenderEmailNil() {
	o.SenderEmail.Set(nil)
}

// UnsetSenderEmail ensures that no value is present for SenderEmail, not even an explicit nil
func (o *UpdateOrganizationRequest) UnsetSenderEmail() {
	o.SenderEmail.Unset()
}

func (o UpdateOrganizationRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateOrganizationRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.ExternalId) {
		toSerialize["external_id"] = o.ExternalId
	}
	if !IsNil(o.BackgroundColor) {
		toSerialize["background_color"] = o.BackgroundColor
	}
	if !IsNil(o.ButtonColor) {
		toSerialize["button_color"] = o.ButtonColor
	}
	if !IsNil(o.ButtonTextColor) {
		toSerialize["button_text_color"] = o.ButtonTextColor
	}
	if !IsNil(o.LinkColor) {
		toSerialize["link_color"] = o.LinkColor
	}
	if !IsNil(o.BackgroundColorDark) {
		toSerialize["background_color_dark"] = o.BackgroundColorDark
	}
	if !IsNil(o.ButtonColorDark) {
		toSerialize["button_color_dark"] = o.ButtonColorDark
	}
	if !IsNil(o.ButtonTextColorDark) {
		toSerialize["button_text_color_dark"] = o.ButtonTextColorDark
	}
	if !IsNil(o.LinkColorDark) {
		toSerialize["link_color_dark"] = o.LinkColorDark
	}
	if !IsNil(o.ThemeCode) {
		toSerialize["theme_code"] = o.ThemeCode
	}
	if !IsNil(o.Handle) {
		toSerialize["handle"] = o.Handle
	}
	if !IsNil(o.IsAllowRegistrations) {
		toSerialize["is_allow_registrations"] = o.IsAllowRegistrations
	}
	if !IsNil(o.IsAutoJoinDomainList) {
		toSerialize["is_auto_join_domain_list"] = o.IsAutoJoinDomainList
	}
	if !IsNil(o.AllowedDomains) {
		toSerialize["allowed_domains"] = o.AllowedDomains
	}
	if !IsNil(o.IsEnableAdvancedOrgs) {
		toSerialize["is_enable_advanced_orgs"] = o.IsEnableAdvancedOrgs
	}
	if !IsNil(o.IsEnforceMfa) {
		toSerialize["is_enforce_mfa"] = o.IsEnforceMfa
	}
	if o.SenderName.IsSet() {
		toSerialize["sender_name"] = o.SenderName.Get()
	}
	if o.SenderEmail.IsSet() {
		toSerialize["sender_email"] = o.SenderEmail.Get()
	}
	return toSerialize, nil
}

type NullableUpdateOrganizationRequest struct {
	value *UpdateOrganizationRequest
	isSet bool
}

func (v NullableUpdateOrganizationRequest) Get() *UpdateOrganizationRequest {
	return v.value
}

func (v *NullableUpdateOrganizationRequest) Set(val *UpdateOrganizationRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateOrganizationRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateOrganizationRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateOrganizationRequest(val *UpdateOrganizationRequest) *NullableUpdateOrganizationRequest {
	return &NullableUpdateOrganizationRequest{value: val, isSet: true}
}

func (v NullableUpdateOrganizationRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateOrganizationRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
