/*
Kinde Management API

 Provides endpoints to manage your Kinde Businesses.  ## Intro  ## How to use  1. [Set up and authorize a machine-to-machine (M2M) application](https://docs.kinde.com/developer-tools/kinde-api/connect-to-kinde-api/).  2. [Generate a test access token](https://docs.kinde.com/developer-tools/kinde-api/access-token-for-api/)  3. Test request any endpoint using the test token

API version: 1
Contact: support@kinde.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ReplaceLogoutRedirectURLsRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ReplaceLogoutRedirectURLsRequest{}

// ReplaceLogoutRedirectURLsRequest struct for ReplaceLogoutRedirectURLsRequest
type ReplaceLogoutRedirectURLsRequest struct {
	// Array of logout urls.
	Urls []string `json:"urls,omitempty"`
}

// NewReplaceLogoutRedirectURLsRequest instantiates a new ReplaceLogoutRedirectURLsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReplaceLogoutRedirectURLsRequest() *ReplaceLogoutRedirectURLsRequest {
	this := ReplaceLogoutRedirectURLsRequest{}
	return &this
}

// NewReplaceLogoutRedirectURLsRequestWithDefaults instantiates a new ReplaceLogoutRedirectURLsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReplaceLogoutRedirectURLsRequestWithDefaults() *ReplaceLogoutRedirectURLsRequest {
	this := ReplaceLogoutRedirectURLsRequest{}
	return &this
}

// GetUrls returns the Urls field value if set, zero value otherwise.
func (o *ReplaceLogoutRedirectURLsRequest) GetUrls() []string {
	if o == nil || IsNil(o.Urls) {
		var ret []string
		return ret
	}
	return o.Urls
}

// GetUrlsOk returns a tuple with the Urls field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReplaceLogoutRedirectURLsRequest) GetUrlsOk() ([]string, bool) {
	if o == nil || IsNil(o.Urls) {
		return nil, false
	}
	return o.Urls, true
}

// HasUrls returns a boolean if a field has been set.
func (o *ReplaceLogoutRedirectURLsRequest) HasUrls() bool {
	if o != nil && !IsNil(o.Urls) {
		return true
	}

	return false
}

// SetUrls gets a reference to the given []string and assigns it to the Urls field.
func (o *ReplaceLogoutRedirectURLsRequest) SetUrls(v []string) {
	o.Urls = v
}

func (o ReplaceLogoutRedirectURLsRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ReplaceLogoutRedirectURLsRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Urls) {
		toSerialize["urls"] = o.Urls
	}
	return toSerialize, nil
}

type NullableReplaceLogoutRedirectURLsRequest struct {
	value *ReplaceLogoutRedirectURLsRequest
	isSet bool
}

func (v NullableReplaceLogoutRedirectURLsRequest) Get() *ReplaceLogoutRedirectURLsRequest {
	return v.value
}

func (v *NullableReplaceLogoutRedirectURLsRequest) Set(val *ReplaceLogoutRedirectURLsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableReplaceLogoutRedirectURLsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableReplaceLogoutRedirectURLsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReplaceLogoutRedirectURLsRequest(val *ReplaceLogoutRedirectURLsRequest) *NullableReplaceLogoutRedirectURLsRequest {
	return &NullableReplaceLogoutRedirectURLsRequest{value: val, isSet: true}
}

func (v NullableReplaceLogoutRedirectURLsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReplaceLogoutRedirectURLsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
