/*
Kinde Management API

 Provides endpoints to manage your Kinde Businesses.  ## Intro  ## How to use  1. [Set up and authorize a machine-to-machine (M2M) application](https://docs.kinde.com/developer-tools/kinde-api/connect-to-kinde-api/).  2. [Generate a test access token](https://docs.kinde.com/developer-tools/kinde-api/access-token-for-api/)  3. Test request any endpoint using the test token

API version: 1
Contact: support@kinde.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CreateConnectionRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateConnectionRequest{}

// CreateConnectionRequest struct for CreateConnectionRequest
type CreateConnectionRequest struct {
	// The internal name of the connection.
	Name *string `json:"name,omitempty"`
	// The public facing name of the connection.
	DisplayName *string `json:"display_name,omitempty"`
	// The identity provider identifier for the connection.
	Strategy *string `json:"strategy,omitempty"`
	// Client IDs of applications in which this connection is to be enabled.
	EnabledApplications []string `json:"enabled_applications,omitempty"`
	// Enterprise connections only - the code for organization that manages this connection.
	OrganizationCode NullableString                  `json:"organization_code,omitempty"`
	Options          *CreateConnectionRequestOptions `json:"options,omitempty"`
}

// NewCreateConnectionRequest instantiates a new CreateConnectionRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateConnectionRequest() *CreateConnectionRequest {
	this := CreateConnectionRequest{}
	return &this
}

// NewCreateConnectionRequestWithDefaults instantiates a new CreateConnectionRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateConnectionRequestWithDefaults() *CreateConnectionRequest {
	this := CreateConnectionRequest{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CreateConnectionRequest) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateConnectionRequest) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CreateConnectionRequest) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CreateConnectionRequest) SetName(v string) {
	o.Name = &v
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *CreateConnectionRequest) GetDisplayName() string {
	if o == nil || IsNil(o.DisplayName) {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateConnectionRequest) GetDisplayNameOk() (*string, bool) {
	if o == nil || IsNil(o.DisplayName) {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *CreateConnectionRequest) HasDisplayName() bool {
	if o != nil && !IsNil(o.DisplayName) {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *CreateConnectionRequest) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetStrategy returns the Strategy field value if set, zero value otherwise.
func (o *CreateConnectionRequest) GetStrategy() string {
	if o == nil || IsNil(o.Strategy) {
		var ret string
		return ret
	}
	return *o.Strategy
}

// GetStrategyOk returns a tuple with the Strategy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateConnectionRequest) GetStrategyOk() (*string, bool) {
	if o == nil || IsNil(o.Strategy) {
		return nil, false
	}
	return o.Strategy, true
}

// HasStrategy returns a boolean if a field has been set.
func (o *CreateConnectionRequest) HasStrategy() bool {
	if o != nil && !IsNil(o.Strategy) {
		return true
	}

	return false
}

// SetStrategy gets a reference to the given string and assigns it to the Strategy field.
func (o *CreateConnectionRequest) SetStrategy(v string) {
	o.Strategy = &v
}

// GetEnabledApplications returns the EnabledApplications field value if set, zero value otherwise.
func (o *CreateConnectionRequest) GetEnabledApplications() []string {
	if o == nil || IsNil(o.EnabledApplications) {
		var ret []string
		return ret
	}
	return o.EnabledApplications
}

// GetEnabledApplicationsOk returns a tuple with the EnabledApplications field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateConnectionRequest) GetEnabledApplicationsOk() ([]string, bool) {
	if o == nil || IsNil(o.EnabledApplications) {
		return nil, false
	}
	return o.EnabledApplications, true
}

// HasEnabledApplications returns a boolean if a field has been set.
func (o *CreateConnectionRequest) HasEnabledApplications() bool {
	if o != nil && !IsNil(o.EnabledApplications) {
		return true
	}

	return false
}

// SetEnabledApplications gets a reference to the given []string and assigns it to the EnabledApplications field.
func (o *CreateConnectionRequest) SetEnabledApplications(v []string) {
	o.EnabledApplications = v
}

// GetOrganizationCode returns the OrganizationCode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateConnectionRequest) GetOrganizationCode() string {
	if o == nil || IsNil(o.OrganizationCode.Get()) {
		var ret string
		return ret
	}
	return *o.OrganizationCode.Get()
}

// GetOrganizationCodeOk returns a tuple with the OrganizationCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateConnectionRequest) GetOrganizationCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.OrganizationCode.Get(), o.OrganizationCode.IsSet()
}

// HasOrganizationCode returns a boolean if a field has been set.
func (o *CreateConnectionRequest) HasOrganizationCode() bool {
	if o != nil && o.OrganizationCode.IsSet() {
		return true
	}

	return false
}

// SetOrganizationCode gets a reference to the given NullableString and assigns it to the OrganizationCode field.
func (o *CreateConnectionRequest) SetOrganizationCode(v string) {
	o.OrganizationCode.Set(&v)
}

// SetOrganizationCodeNil sets the value for OrganizationCode to be an explicit nil
func (o *CreateConnectionRequest) SetOrganizationCodeNil() {
	o.OrganizationCode.Set(nil)
}

// UnsetOrganizationCode ensures that no value is present for OrganizationCode, not even an explicit nil
func (o *CreateConnectionRequest) UnsetOrganizationCode() {
	o.OrganizationCode.Unset()
}

// GetOptions returns the Options field value if set, zero value otherwise.
func (o *CreateConnectionRequest) GetOptions() CreateConnectionRequestOptions {
	if o == nil || IsNil(o.Options) {
		var ret CreateConnectionRequestOptions
		return ret
	}
	return *o.Options
}

// GetOptionsOk returns a tuple with the Options field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateConnectionRequest) GetOptionsOk() (*CreateConnectionRequestOptions, bool) {
	if o == nil || IsNil(o.Options) {
		return nil, false
	}
	return o.Options, true
}

// HasOptions returns a boolean if a field has been set.
func (o *CreateConnectionRequest) HasOptions() bool {
	if o != nil && !IsNil(o.Options) {
		return true
	}

	return false
}

// SetOptions gets a reference to the given CreateConnectionRequestOptions and assigns it to the Options field.
func (o *CreateConnectionRequest) SetOptions(v CreateConnectionRequestOptions) {
	o.Options = &v
}

func (o CreateConnectionRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateConnectionRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.DisplayName) {
		toSerialize["display_name"] = o.DisplayName
	}
	if !IsNil(o.Strategy) {
		toSerialize["strategy"] = o.Strategy
	}
	if !IsNil(o.EnabledApplications) {
		toSerialize["enabled_applications"] = o.EnabledApplications
	}
	if o.OrganizationCode.IsSet() {
		toSerialize["organization_code"] = o.OrganizationCode.Get()
	}
	if !IsNil(o.Options) {
		toSerialize["options"] = o.Options
	}
	return toSerialize, nil
}

type NullableCreateConnectionRequest struct {
	value *CreateConnectionRequest
	isSet bool
}

func (v NullableCreateConnectionRequest) Get() *CreateConnectionRequest {
	return v.value
}

func (v *NullableCreateConnectionRequest) Set(val *CreateConnectionRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateConnectionRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateConnectionRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateConnectionRequest(val *CreateConnectionRequest) *NullableCreateConnectionRequest {
	return &NullableCreateConnectionRequest{value: val, isSet: true}
}

func (v NullableCreateConnectionRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateConnectionRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
