/*
Kinde Management API

 Provides endpoints to manage your Kinde Businesses.  ## Intro  ## How to use  1. [Set up and authorize a machine-to-machine (M2M) application](https://docs.kinde.com/developer-tools/kinde-api/connect-to-kinde-api/).  2. [Generate a test access token](https://docs.kinde.com/developer-tools/kinde-api/access-token-for-api/)  3. Test request any endpoint using the test token

API version: 1
Contact: support@kinde.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CreateOrganizationUserPermissionRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateOrganizationUserPermissionRequest{}

// CreateOrganizationUserPermissionRequest struct for CreateOrganizationUserPermissionRequest
type CreateOrganizationUserPermissionRequest struct {
	// The permission id.
	PermissionId *string `json:"permission_id,omitempty"`
}

// NewCreateOrganizationUserPermissionRequest instantiates a new CreateOrganizationUserPermissionRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateOrganizationUserPermissionRequest() *CreateOrganizationUserPermissionRequest {
	this := CreateOrganizationUserPermissionRequest{}
	return &this
}

// NewCreateOrganizationUserPermissionRequestWithDefaults instantiates a new CreateOrganizationUserPermissionRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateOrganizationUserPermissionRequestWithDefaults() *CreateOrganizationUserPermissionRequest {
	this := CreateOrganizationUserPermissionRequest{}
	return &this
}

// GetPermissionId returns the PermissionId field value if set, zero value otherwise.
func (o *CreateOrganizationUserPermissionRequest) GetPermissionId() string {
	if o == nil || IsNil(o.PermissionId) {
		var ret string
		return ret
	}
	return *o.PermissionId
}

// GetPermissionIdOk returns a tuple with the PermissionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrganizationUserPermissionRequest) GetPermissionIdOk() (*string, bool) {
	if o == nil || IsNil(o.PermissionId) {
		return nil, false
	}
	return o.PermissionId, true
}

// HasPermissionId returns a boolean if a field has been set.
func (o *CreateOrganizationUserPermissionRequest) HasPermissionId() bool {
	if o != nil && !IsNil(o.PermissionId) {
		return true
	}

	return false
}

// SetPermissionId gets a reference to the given string and assigns it to the PermissionId field.
func (o *CreateOrganizationUserPermissionRequest) SetPermissionId(v string) {
	o.PermissionId = &v
}

func (o CreateOrganizationUserPermissionRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateOrganizationUserPermissionRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.PermissionId) {
		toSerialize["permission_id"] = o.PermissionId
	}
	return toSerialize, nil
}

type NullableCreateOrganizationUserPermissionRequest struct {
	value *CreateOrganizationUserPermissionRequest
	isSet bool
}

func (v NullableCreateOrganizationUserPermissionRequest) Get() *CreateOrganizationUserPermissionRequest {
	return v.value
}

func (v *NullableCreateOrganizationUserPermissionRequest) Set(val *CreateOrganizationUserPermissionRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateOrganizationUserPermissionRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateOrganizationUserPermissionRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateOrganizationUserPermissionRequest(val *CreateOrganizationUserPermissionRequest) *NullableCreateOrganizationUserPermissionRequest {
	return &NullableCreateOrganizationUserPermissionRequest{value: val, isSet: true}
}

func (v NullableCreateOrganizationUserPermissionRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateOrganizationUserPermissionRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
