/*
Kinde Management API

 Provides endpoints to manage your Kinde Businesses.  ## Intro  ## How to use  1. [Set up and authorize a machine-to-machine (M2M) application](https://docs.kinde.com/developer-tools/kinde-api/connect-to-kinde-api/).  2. [Generate a test access token](https://docs.kinde.com/developer-tools/kinde-api/access-token-for-api/)  3. Test request any endpoint using the test token

API version: 1
Contact: support@kinde.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CreateUserRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateUserRequest{}

// CreateUserRequest struct for CreateUserRequest
type CreateUserRequest struct {
	Profile *CreateUserRequestProfile `json:"profile,omitempty"`
	// The unique code associated with the organization you want the user to join.
	OrganizationCode *string `json:"organization_code,omitempty"`
	// An external id to reference the user.
	ProvidedId *string `json:"provided_id,omitempty"`
	// Array of identities to assign to the created user
	Identities []CreateUserRequestIdentitiesInner `json:"identities,omitempty"`
}

// NewCreateUserRequest instantiates a new CreateUserRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateUserRequest() *CreateUserRequest {
	this := CreateUserRequest{}
	return &this
}

// NewCreateUserRequestWithDefaults instantiates a new CreateUserRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateUserRequestWithDefaults() *CreateUserRequest {
	this := CreateUserRequest{}
	return &this
}

// GetProfile returns the Profile field value if set, zero value otherwise.
func (o *CreateUserRequest) GetProfile() CreateUserRequestProfile {
	if o == nil || IsNil(o.Profile) {
		var ret CreateUserRequestProfile
		return ret
	}
	return *o.Profile
}

// GetProfileOk returns a tuple with the Profile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateUserRequest) GetProfileOk() (*CreateUserRequestProfile, bool) {
	if o == nil || IsNil(o.Profile) {
		return nil, false
	}
	return o.Profile, true
}

// HasProfile returns a boolean if a field has been set.
func (o *CreateUserRequest) HasProfile() bool {
	if o != nil && !IsNil(o.Profile) {
		return true
	}

	return false
}

// SetProfile gets a reference to the given CreateUserRequestProfile and assigns it to the Profile field.
func (o *CreateUserRequest) SetProfile(v CreateUserRequestProfile) {
	o.Profile = &v
}

// GetOrganizationCode returns the OrganizationCode field value if set, zero value otherwise.
func (o *CreateUserRequest) GetOrganizationCode() string {
	if o == nil || IsNil(o.OrganizationCode) {
		var ret string
		return ret
	}
	return *o.OrganizationCode
}

// GetOrganizationCodeOk returns a tuple with the OrganizationCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateUserRequest) GetOrganizationCodeOk() (*string, bool) {
	if o == nil || IsNil(o.OrganizationCode) {
		return nil, false
	}
	return o.OrganizationCode, true
}

// HasOrganizationCode returns a boolean if a field has been set.
func (o *CreateUserRequest) HasOrganizationCode() bool {
	if o != nil && !IsNil(o.OrganizationCode) {
		return true
	}

	return false
}

// SetOrganizationCode gets a reference to the given string and assigns it to the OrganizationCode field.
func (o *CreateUserRequest) SetOrganizationCode(v string) {
	o.OrganizationCode = &v
}

// GetProvidedId returns the ProvidedId field value if set, zero value otherwise.
func (o *CreateUserRequest) GetProvidedId() string {
	if o == nil || IsNil(o.ProvidedId) {
		var ret string
		return ret
	}
	return *o.ProvidedId
}

// GetProvidedIdOk returns a tuple with the ProvidedId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateUserRequest) GetProvidedIdOk() (*string, bool) {
	if o == nil || IsNil(o.ProvidedId) {
		return nil, false
	}
	return o.ProvidedId, true
}

// HasProvidedId returns a boolean if a field has been set.
func (o *CreateUserRequest) HasProvidedId() bool {
	if o != nil && !IsNil(o.ProvidedId) {
		return true
	}

	return false
}

// SetProvidedId gets a reference to the given string and assigns it to the ProvidedId field.
func (o *CreateUserRequest) SetProvidedId(v string) {
	o.ProvidedId = &v
}

// GetIdentities returns the Identities field value if set, zero value otherwise.
func (o *CreateUserRequest) GetIdentities() []CreateUserRequestIdentitiesInner {
	if o == nil || IsNil(o.Identities) {
		var ret []CreateUserRequestIdentitiesInner
		return ret
	}
	return o.Identities
}

// GetIdentitiesOk returns a tuple with the Identities field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateUserRequest) GetIdentitiesOk() ([]CreateUserRequestIdentitiesInner, bool) {
	if o == nil || IsNil(o.Identities) {
		return nil, false
	}
	return o.Identities, true
}

// HasIdentities returns a boolean if a field has been set.
func (o *CreateUserRequest) HasIdentities() bool {
	if o != nil && !IsNil(o.Identities) {
		return true
	}

	return false
}

// SetIdentities gets a reference to the given []CreateUserRequestIdentitiesInner and assigns it to the Identities field.
func (o *CreateUserRequest) SetIdentities(v []CreateUserRequestIdentitiesInner) {
	o.Identities = v
}

func (o CreateUserRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateUserRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Profile) {
		toSerialize["profile"] = o.Profile
	}
	if !IsNil(o.OrganizationCode) {
		toSerialize["organization_code"] = o.OrganizationCode
	}
	if !IsNil(o.ProvidedId) {
		toSerialize["provided_id"] = o.ProvidedId
	}
	if !IsNil(o.Identities) {
		toSerialize["identities"] = o.Identities
	}
	return toSerialize, nil
}

type NullableCreateUserRequest struct {
	value *CreateUserRequest
	isSet bool
}

func (v NullableCreateUserRequest) Get() *CreateUserRequest {
	return v.value
}

func (v *NullableCreateUserRequest) Set(val *CreateUserRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateUserRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateUserRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateUserRequest(val *CreateUserRequest) *NullableCreateUserRequest {
	return &NullableCreateUserRequest{value: val, isSet: true}
}

func (v NullableCreateUserRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateUserRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
