/*
Kinde Management API

 Provides endpoints to manage your Kinde Businesses.  ## Intro  ## How to use  1. [Set up and authorize a machine-to-machine (M2M) application](https://docs.kinde.com/developer-tools/kinde-api/connect-to-kinde-api/).  2. [Generate a test access token](https://docs.kinde.com/developer-tools/kinde-api/access-token-for-api/)  3. Test request any endpoint using the test token

API version: 1
Contact: support@kinde.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the UpdateAPIApplicationsRequestApplicationsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateAPIApplicationsRequestApplicationsInner{}

// UpdateAPIApplicationsRequestApplicationsInner struct for UpdateAPIApplicationsRequestApplicationsInner
type UpdateAPIApplicationsRequestApplicationsInner struct {
	// The application's Client ID.
	Id string `json:"id"`
	// Optional operation, set to 'delete' to revoke authorization for the application. If not set, the application will be authorized.
	Operation *string `json:"operation,omitempty"`
}

type _UpdateAPIApplicationsRequestApplicationsInner UpdateAPIApplicationsRequestApplicationsInner

// NewUpdateAPIApplicationsRequestApplicationsInner instantiates a new UpdateAPIApplicationsRequestApplicationsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateAPIApplicationsRequestApplicationsInner(id string) *UpdateAPIApplicationsRequestApplicationsInner {
	this := UpdateAPIApplicationsRequestApplicationsInner{}
	this.Id = id
	return &this
}

// NewUpdateAPIApplicationsRequestApplicationsInnerWithDefaults instantiates a new UpdateAPIApplicationsRequestApplicationsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateAPIApplicationsRequestApplicationsInnerWithDefaults() *UpdateAPIApplicationsRequestApplicationsInner {
	this := UpdateAPIApplicationsRequestApplicationsInner{}
	return &this
}

// GetId returns the Id field value
func (o *UpdateAPIApplicationsRequestApplicationsInner) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *UpdateAPIApplicationsRequestApplicationsInner) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *UpdateAPIApplicationsRequestApplicationsInner) SetId(v string) {
	o.Id = v
}

// GetOperation returns the Operation field value if set, zero value otherwise.
func (o *UpdateAPIApplicationsRequestApplicationsInner) GetOperation() string {
	if o == nil || IsNil(o.Operation) {
		var ret string
		return ret
	}
	return *o.Operation
}

// GetOperationOk returns a tuple with the Operation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateAPIApplicationsRequestApplicationsInner) GetOperationOk() (*string, bool) {
	if o == nil || IsNil(o.Operation) {
		return nil, false
	}
	return o.Operation, true
}

// HasOperation returns a boolean if a field has been set.
func (o *UpdateAPIApplicationsRequestApplicationsInner) HasOperation() bool {
	if o != nil && !IsNil(o.Operation) {
		return true
	}

	return false
}

// SetOperation gets a reference to the given string and assigns it to the Operation field.
func (o *UpdateAPIApplicationsRequestApplicationsInner) SetOperation(v string) {
	o.Operation = &v
}

func (o UpdateAPIApplicationsRequestApplicationsInner) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateAPIApplicationsRequestApplicationsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	if !IsNil(o.Operation) {
		toSerialize["operation"] = o.Operation
	}
	return toSerialize, nil
}

func (o *UpdateAPIApplicationsRequestApplicationsInner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varUpdateAPIApplicationsRequestApplicationsInner := _UpdateAPIApplicationsRequestApplicationsInner{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varUpdateAPIApplicationsRequestApplicationsInner)

	if err != nil {
		return err
	}

	*o = UpdateAPIApplicationsRequestApplicationsInner(varUpdateAPIApplicationsRequestApplicationsInner)

	return err
}

type NullableUpdateAPIApplicationsRequestApplicationsInner struct {
	value *UpdateAPIApplicationsRequestApplicationsInner
	isSet bool
}

func (v NullableUpdateAPIApplicationsRequestApplicationsInner) Get() *UpdateAPIApplicationsRequestApplicationsInner {
	return v.value
}

func (v *NullableUpdateAPIApplicationsRequestApplicationsInner) Set(val *UpdateAPIApplicationsRequestApplicationsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateAPIApplicationsRequestApplicationsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateAPIApplicationsRequestApplicationsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateAPIApplicationsRequestApplicationsInner(val *UpdateAPIApplicationsRequestApplicationsInner) *NullableUpdateAPIApplicationsRequestApplicationsInner {
	return &NullableUpdateAPIApplicationsRequestApplicationsInner{value: val, isSet: true}
}

func (v NullableUpdateAPIApplicationsRequestApplicationsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateAPIApplicationsRequestApplicationsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
