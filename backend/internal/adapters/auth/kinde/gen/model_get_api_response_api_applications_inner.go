/*
Kinde Management API

 Provides endpoints to manage your Kinde Businesses.  ## Intro  ## How to use  1. [Set up and authorize a machine-to-machine (M2M) application](https://docs.kinde.com/developer-tools/kinde-api/connect-to-kinde-api/).  2. [Generate a test access token](https://docs.kinde.com/developer-tools/kinde-api/access-token-for-api/)  3. Test request any endpoint using the test token

API version: 1
Contact: support@kinde.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the GetApiResponseApiApplicationsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetApiResponseApiApplicationsInner{}

// GetApiResponseApiApplicationsInner struct for GetApiResponseApiApplicationsInner
type GetApiResponseApiApplicationsInner struct {
	// The Client ID of the application.
	Id *string `json:"id,omitempty"`
	// The application's name.
	Name *string `json:"name,omitempty"`
	// The application's type.
	Type *string `json:"type,omitempty"`
	// Whether or not the application is authorized to access the API
	IsActive NullableBool `json:"is_active,omitempty"`
}

// NewGetApiResponseApiApplicationsInner instantiates a new GetApiResponseApiApplicationsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetApiResponseApiApplicationsInner() *GetApiResponseApiApplicationsInner {
	this := GetApiResponseApiApplicationsInner{}
	return &this
}

// NewGetApiResponseApiApplicationsInnerWithDefaults instantiates a new GetApiResponseApiApplicationsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetApiResponseApiApplicationsInnerWithDefaults() *GetApiResponseApiApplicationsInner {
	this := GetApiResponseApiApplicationsInner{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *GetApiResponseApiApplicationsInner) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetApiResponseApiApplicationsInner) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *GetApiResponseApiApplicationsInner) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *GetApiResponseApiApplicationsInner) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *GetApiResponseApiApplicationsInner) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetApiResponseApiApplicationsInner) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *GetApiResponseApiApplicationsInner) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *GetApiResponseApiApplicationsInner) SetName(v string) {
	o.Name = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *GetApiResponseApiApplicationsInner) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetApiResponseApiApplicationsInner) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *GetApiResponseApiApplicationsInner) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *GetApiResponseApiApplicationsInner) SetType(v string) {
	o.Type = &v
}

// GetIsActive returns the IsActive field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetApiResponseApiApplicationsInner) GetIsActive() bool {
	if o == nil || IsNil(o.IsActive.Get()) {
		var ret bool
		return ret
	}
	return *o.IsActive.Get()
}

// GetIsActiveOk returns a tuple with the IsActive field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetApiResponseApiApplicationsInner) GetIsActiveOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.IsActive.Get(), o.IsActive.IsSet()
}

// HasIsActive returns a boolean if a field has been set.
func (o *GetApiResponseApiApplicationsInner) HasIsActive() bool {
	if o != nil && o.IsActive.IsSet() {
		return true
	}

	return false
}

// SetIsActive gets a reference to the given NullableBool and assigns it to the IsActive field.
func (o *GetApiResponseApiApplicationsInner) SetIsActive(v bool) {
	o.IsActive.Set(&v)
}

// SetIsActiveNil sets the value for IsActive to be an explicit nil
func (o *GetApiResponseApiApplicationsInner) SetIsActiveNil() {
	o.IsActive.Set(nil)
}

// UnsetIsActive ensures that no value is present for IsActive, not even an explicit nil
func (o *GetApiResponseApiApplicationsInner) UnsetIsActive() {
	o.IsActive.Unset()
}

func (o GetApiResponseApiApplicationsInner) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetApiResponseApiApplicationsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if o.IsActive.IsSet() {
		toSerialize["is_active"] = o.IsActive.Get()
	}
	return toSerialize, nil
}

type NullableGetApiResponseApiApplicationsInner struct {
	value *GetApiResponseApiApplicationsInner
	isSet bool
}

func (v NullableGetApiResponseApiApplicationsInner) Get() *GetApiResponseApiApplicationsInner {
	return v.value
}

func (v *NullableGetApiResponseApiApplicationsInner) Set(val *GetApiResponseApiApplicationsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGetApiResponseApiApplicationsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGetApiResponseApiApplicationsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetApiResponseApiApplicationsInner(val *GetApiResponseApiApplicationsInner) *NullableGetApiResponseApiApplicationsInner {
	return &NullableGetApiResponseApiApplicationsInner{value: val, isSet: true}
}

func (v NullableGetApiResponseApiApplicationsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetApiResponseApiApplicationsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
