/*
Kinde Management API

 Provides endpoints to manage your Kinde Businesses.  ## Intro  ## How to use  1. [Set up and authorize a machine-to-machine (M2M) application](https://docs.kinde.com/developer-tools/kinde-api/connect-to-kinde-api/).  2. [Generate a test access token](https://docs.kinde.com/developer-tools/kinde-api/access-token-for-api/)  3. Test request any endpoint using the test token

API version: 1
Contact: support@kinde.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the UpdateApplicationTokensRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateApplicationTokensRequest{}

// UpdateApplicationTokensRequest struct for UpdateApplicationTokensRequest
type UpdateApplicationTokensRequest struct {
	// The lifetime of an access token in seconds.
	AccessTokenLifetime *int32 `json:"access_token_lifetime,omitempty"`
	// The lifetime of a refresh token in seconds.
	RefreshTokenLifetime *int32 `json:"refresh_token_lifetime,omitempty"`
	// The lifetime of an ID token in seconds.
	IdTokenLifetime *int32 `json:"id_token_lifetime,omitempty"`
	// The lifetime of an authenticated session in seconds.
	AuthenticatedSessionLifetime *int32 `json:"authenticated_session_lifetime,omitempty"`
	// Enable or disable Hasura mapping.
	IsHasuraMappingEnabled *bool `json:"is_hasura_mapping_enabled,omitempty"`
}

// NewUpdateApplicationTokensRequest instantiates a new UpdateApplicationTokensRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateApplicationTokensRequest() *UpdateApplicationTokensRequest {
	this := UpdateApplicationTokensRequest{}
	return &this
}

// NewUpdateApplicationTokensRequestWithDefaults instantiates a new UpdateApplicationTokensRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateApplicationTokensRequestWithDefaults() *UpdateApplicationTokensRequest {
	this := UpdateApplicationTokensRequest{}
	return &this
}

// GetAccessTokenLifetime returns the AccessTokenLifetime field value if set, zero value otherwise.
func (o *UpdateApplicationTokensRequest) GetAccessTokenLifetime() int32 {
	if o == nil || IsNil(o.AccessTokenLifetime) {
		var ret int32
		return ret
	}
	return *o.AccessTokenLifetime
}

// GetAccessTokenLifetimeOk returns a tuple with the AccessTokenLifetime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateApplicationTokensRequest) GetAccessTokenLifetimeOk() (*int32, bool) {
	if o == nil || IsNil(o.AccessTokenLifetime) {
		return nil, false
	}
	return o.AccessTokenLifetime, true
}

// HasAccessTokenLifetime returns a boolean if a field has been set.
func (o *UpdateApplicationTokensRequest) HasAccessTokenLifetime() bool {
	if o != nil && !IsNil(o.AccessTokenLifetime) {
		return true
	}

	return false
}

// SetAccessTokenLifetime gets a reference to the given int32 and assigns it to the AccessTokenLifetime field.
func (o *UpdateApplicationTokensRequest) SetAccessTokenLifetime(v int32) {
	o.AccessTokenLifetime = &v
}

// GetRefreshTokenLifetime returns the RefreshTokenLifetime field value if set, zero value otherwise.
func (o *UpdateApplicationTokensRequest) GetRefreshTokenLifetime() int32 {
	if o == nil || IsNil(o.RefreshTokenLifetime) {
		var ret int32
		return ret
	}
	return *o.RefreshTokenLifetime
}

// GetRefreshTokenLifetimeOk returns a tuple with the RefreshTokenLifetime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateApplicationTokensRequest) GetRefreshTokenLifetimeOk() (*int32, bool) {
	if o == nil || IsNil(o.RefreshTokenLifetime) {
		return nil, false
	}
	return o.RefreshTokenLifetime, true
}

// HasRefreshTokenLifetime returns a boolean if a field has been set.
func (o *UpdateApplicationTokensRequest) HasRefreshTokenLifetime() bool {
	if o != nil && !IsNil(o.RefreshTokenLifetime) {
		return true
	}

	return false
}

// SetRefreshTokenLifetime gets a reference to the given int32 and assigns it to the RefreshTokenLifetime field.
func (o *UpdateApplicationTokensRequest) SetRefreshTokenLifetime(v int32) {
	o.RefreshTokenLifetime = &v
}

// GetIdTokenLifetime returns the IdTokenLifetime field value if set, zero value otherwise.
func (o *UpdateApplicationTokensRequest) GetIdTokenLifetime() int32 {
	if o == nil || IsNil(o.IdTokenLifetime) {
		var ret int32
		return ret
	}
	return *o.IdTokenLifetime
}

// GetIdTokenLifetimeOk returns a tuple with the IdTokenLifetime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateApplicationTokensRequest) GetIdTokenLifetimeOk() (*int32, bool) {
	if o == nil || IsNil(o.IdTokenLifetime) {
		return nil, false
	}
	return o.IdTokenLifetime, true
}

// HasIdTokenLifetime returns a boolean if a field has been set.
func (o *UpdateApplicationTokensRequest) HasIdTokenLifetime() bool {
	if o != nil && !IsNil(o.IdTokenLifetime) {
		return true
	}

	return false
}

// SetIdTokenLifetime gets a reference to the given int32 and assigns it to the IdTokenLifetime field.
func (o *UpdateApplicationTokensRequest) SetIdTokenLifetime(v int32) {
	o.IdTokenLifetime = &v
}

// GetAuthenticatedSessionLifetime returns the AuthenticatedSessionLifetime field value if set, zero value otherwise.
func (o *UpdateApplicationTokensRequest) GetAuthenticatedSessionLifetime() int32 {
	if o == nil || IsNil(o.AuthenticatedSessionLifetime) {
		var ret int32
		return ret
	}
	return *o.AuthenticatedSessionLifetime
}

// GetAuthenticatedSessionLifetimeOk returns a tuple with the AuthenticatedSessionLifetime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateApplicationTokensRequest) GetAuthenticatedSessionLifetimeOk() (*int32, bool) {
	if o == nil || IsNil(o.AuthenticatedSessionLifetime) {
		return nil, false
	}
	return o.AuthenticatedSessionLifetime, true
}

// HasAuthenticatedSessionLifetime returns a boolean if a field has been set.
func (o *UpdateApplicationTokensRequest) HasAuthenticatedSessionLifetime() bool {
	if o != nil && !IsNil(o.AuthenticatedSessionLifetime) {
		return true
	}

	return false
}

// SetAuthenticatedSessionLifetime gets a reference to the given int32 and assigns it to the AuthenticatedSessionLifetime field.
func (o *UpdateApplicationTokensRequest) SetAuthenticatedSessionLifetime(v int32) {
	o.AuthenticatedSessionLifetime = &v
}

// GetIsHasuraMappingEnabled returns the IsHasuraMappingEnabled field value if set, zero value otherwise.
func (o *UpdateApplicationTokensRequest) GetIsHasuraMappingEnabled() bool {
	if o == nil || IsNil(o.IsHasuraMappingEnabled) {
		var ret bool
		return ret
	}
	return *o.IsHasuraMappingEnabled
}

// GetIsHasuraMappingEnabledOk returns a tuple with the IsHasuraMappingEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateApplicationTokensRequest) GetIsHasuraMappingEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.IsHasuraMappingEnabled) {
		return nil, false
	}
	return o.IsHasuraMappingEnabled, true
}

// HasIsHasuraMappingEnabled returns a boolean if a field has been set.
func (o *UpdateApplicationTokensRequest) HasIsHasuraMappingEnabled() bool {
	if o != nil && !IsNil(o.IsHasuraMappingEnabled) {
		return true
	}

	return false
}

// SetIsHasuraMappingEnabled gets a reference to the given bool and assigns it to the IsHasuraMappingEnabled field.
func (o *UpdateApplicationTokensRequest) SetIsHasuraMappingEnabled(v bool) {
	o.IsHasuraMappingEnabled = &v
}

func (o UpdateApplicationTokensRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateApplicationTokensRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AccessTokenLifetime) {
		toSerialize["access_token_lifetime"] = o.AccessTokenLifetime
	}
	if !IsNil(o.RefreshTokenLifetime) {
		toSerialize["refresh_token_lifetime"] = o.RefreshTokenLifetime
	}
	if !IsNil(o.IdTokenLifetime) {
		toSerialize["id_token_lifetime"] = o.IdTokenLifetime
	}
	if !IsNil(o.AuthenticatedSessionLifetime) {
		toSerialize["authenticated_session_lifetime"] = o.AuthenticatedSessionLifetime
	}
	if !IsNil(o.IsHasuraMappingEnabled) {
		toSerialize["is_hasura_mapping_enabled"] = o.IsHasuraMappingEnabled
	}
	return toSerialize, nil
}

type NullableUpdateApplicationTokensRequest struct {
	value *UpdateApplicationTokensRequest
	isSet bool
}

func (v NullableUpdateApplicationTokensRequest) Get() *UpdateApplicationTokensRequest {
	return v.value
}

func (v *NullableUpdateApplicationTokensRequest) Set(val *UpdateApplicationTokensRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateApplicationTokensRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateApplicationTokensRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateApplicationTokensRequest(val *UpdateApplicationTokensRequest) *NullableUpdateApplicationTokensRequest {
	return &NullableUpdateApplicationTokensRequest{value: val, isSet: true}
}

func (v NullableUpdateApplicationTokensRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateApplicationTokensRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
