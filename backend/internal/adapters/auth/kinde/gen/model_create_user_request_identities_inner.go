/*
Kinde Management API

 Provides endpoints to manage your Kinde Businesses.  ## Intro  ## How to use  1. [Set up and authorize a machine-to-machine (M2M) application](https://docs.kinde.com/developer-tools/kinde-api/connect-to-kinde-api/).  2. [Generate a test access token](https://docs.kinde.com/developer-tools/kinde-api/access-token-for-api/)  3. Test request any endpoint using the test token

API version: 1
Contact: support@kinde.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CreateUserRequestIdentitiesInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateUserRequestIdentitiesInner{}

// CreateUserRequestIdentitiesInner The result of the user creation operation.
type CreateUserRequestIdentitiesInner struct {
	// The type of identity to create, e.g. email, username, or phone.
	Type *string `json:"type,omitempty"`
	// Set whether an email or phone identity is verified or not.
	IsVerified *bool                                    `json:"is_verified,omitempty"`
	Details    *CreateUserRequestIdentitiesInnerDetails `json:"details,omitempty"`
}

// NewCreateUserRequestIdentitiesInner instantiates a new CreateUserRequestIdentitiesInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateUserRequestIdentitiesInner() *CreateUserRequestIdentitiesInner {
	this := CreateUserRequestIdentitiesInner{}
	return &this
}

// NewCreateUserRequestIdentitiesInnerWithDefaults instantiates a new CreateUserRequestIdentitiesInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateUserRequestIdentitiesInnerWithDefaults() *CreateUserRequestIdentitiesInner {
	this := CreateUserRequestIdentitiesInner{}
	return &this
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *CreateUserRequestIdentitiesInner) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateUserRequestIdentitiesInner) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *CreateUserRequestIdentitiesInner) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *CreateUserRequestIdentitiesInner) SetType(v string) {
	o.Type = &v
}

// GetIsVerified returns the IsVerified field value if set, zero value otherwise.
func (o *CreateUserRequestIdentitiesInner) GetIsVerified() bool {
	if o == nil || IsNil(o.IsVerified) {
		var ret bool
		return ret
	}
	return *o.IsVerified
}

// GetIsVerifiedOk returns a tuple with the IsVerified field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateUserRequestIdentitiesInner) GetIsVerifiedOk() (*bool, bool) {
	if o == nil || IsNil(o.IsVerified) {
		return nil, false
	}
	return o.IsVerified, true
}

// HasIsVerified returns a boolean if a field has been set.
func (o *CreateUserRequestIdentitiesInner) HasIsVerified() bool {
	if o != nil && !IsNil(o.IsVerified) {
		return true
	}

	return false
}

// SetIsVerified gets a reference to the given bool and assigns it to the IsVerified field.
func (o *CreateUserRequestIdentitiesInner) SetIsVerified(v bool) {
	o.IsVerified = &v
}

// GetDetails returns the Details field value if set, zero value otherwise.
func (o *CreateUserRequestIdentitiesInner) GetDetails() CreateUserRequestIdentitiesInnerDetails {
	if o == nil || IsNil(o.Details) {
		var ret CreateUserRequestIdentitiesInnerDetails
		return ret
	}
	return *o.Details
}

// GetDetailsOk returns a tuple with the Details field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateUserRequestIdentitiesInner) GetDetailsOk() (*CreateUserRequestIdentitiesInnerDetails, bool) {
	if o == nil || IsNil(o.Details) {
		return nil, false
	}
	return o.Details, true
}

// HasDetails returns a boolean if a field has been set.
func (o *CreateUserRequestIdentitiesInner) HasDetails() bool {
	if o != nil && !IsNil(o.Details) {
		return true
	}

	return false
}

// SetDetails gets a reference to the given CreateUserRequestIdentitiesInnerDetails and assigns it to the Details field.
func (o *CreateUserRequestIdentitiesInner) SetDetails(v CreateUserRequestIdentitiesInnerDetails) {
	o.Details = &v
}

func (o CreateUserRequestIdentitiesInner) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateUserRequestIdentitiesInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.IsVerified) {
		toSerialize["is_verified"] = o.IsVerified
	}
	if !IsNil(o.Details) {
		toSerialize["details"] = o.Details
	}
	return toSerialize, nil
}

type NullableCreateUserRequestIdentitiesInner struct {
	value *CreateUserRequestIdentitiesInner
	isSet bool
}

func (v NullableCreateUserRequestIdentitiesInner) Get() *CreateUserRequestIdentitiesInner {
	return v.value
}

func (v *NullableCreateUserRequestIdentitiesInner) Set(val *CreateUserRequestIdentitiesInner) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateUserRequestIdentitiesInner) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateUserRequestIdentitiesInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateUserRequestIdentitiesInner(val *CreateUserRequestIdentitiesInner) *NullableCreateUserRequestIdentitiesInner {
	return &NullableCreateUserRequestIdentitiesInner{value: val, isSet: true}
}

func (v NullableCreateUserRequestIdentitiesInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateUserRequestIdentitiesInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
