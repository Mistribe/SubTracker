/*
Kinde Management API

 Provides endpoints to manage your Kinde Businesses.  ## Intro  ## How to use  1. [Set up and authorize a machine-to-machine (M2M) application](https://docs.kinde.com/developer-tools/kinde-api/connect-to-kinde-api/).  2. [Generate a test access token](https://docs.kinde.com/developer-tools/kinde-api/access-token-for-api/)  3. Test request any endpoint using the test token

API version: 1
Contact: support@kinde.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the GetPropertiesResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetPropertiesResponse{}

// GetPropertiesResponse struct for GetPropertiesResponse
type GetPropertiesResponse struct {
	// Response code.
	Code *string `json:"code,omitempty"`
	// Response message.
	Message    *string    `json:"message,omitempty"`
	Properties []Property `json:"properties,omitempty"`
	// Whether more records exist.
	HasMore *bool `json:"has_more,omitempty"`
}

// NewGetPropertiesResponse instantiates a new GetPropertiesResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetPropertiesResponse() *GetPropertiesResponse {
	this := GetPropertiesResponse{}
	return &this
}

// NewGetPropertiesResponseWithDefaults instantiates a new GetPropertiesResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetPropertiesResponseWithDefaults() *GetPropertiesResponse {
	this := GetPropertiesResponse{}
	return &this
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *GetPropertiesResponse) GetCode() string {
	if o == nil || IsNil(o.Code) {
		var ret string
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetPropertiesResponse) GetCodeOk() (*string, bool) {
	if o == nil || IsNil(o.Code) {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *GetPropertiesResponse) HasCode() bool {
	if o != nil && !IsNil(o.Code) {
		return true
	}

	return false
}

// SetCode gets a reference to the given string and assigns it to the Code field.
func (o *GetPropertiesResponse) SetCode(v string) {
	o.Code = &v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *GetPropertiesResponse) GetMessage() string {
	if o == nil || IsNil(o.Message) {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetPropertiesResponse) GetMessageOk() (*string, bool) {
	if o == nil || IsNil(o.Message) {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *GetPropertiesResponse) HasMessage() bool {
	if o != nil && !IsNil(o.Message) {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *GetPropertiesResponse) SetMessage(v string) {
	o.Message = &v
}

// GetProperties returns the Properties field value if set, zero value otherwise.
func (o *GetPropertiesResponse) GetProperties() []Property {
	if o == nil || IsNil(o.Properties) {
		var ret []Property
		return ret
	}
	return o.Properties
}

// GetPropertiesOk returns a tuple with the Properties field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetPropertiesResponse) GetPropertiesOk() ([]Property, bool) {
	if o == nil || IsNil(o.Properties) {
		return nil, false
	}
	return o.Properties, true
}

// HasProperties returns a boolean if a field has been set.
func (o *GetPropertiesResponse) HasProperties() bool {
	if o != nil && !IsNil(o.Properties) {
		return true
	}

	return false
}

// SetProperties gets a reference to the given []Property and assigns it to the Properties field.
func (o *GetPropertiesResponse) SetProperties(v []Property) {
	o.Properties = v
}

// GetHasMore returns the HasMore field value if set, zero value otherwise.
func (o *GetPropertiesResponse) GetHasMore() bool {
	if o == nil || IsNil(o.HasMore) {
		var ret bool
		return ret
	}
	return *o.HasMore
}

// GetHasMoreOk returns a tuple with the HasMore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetPropertiesResponse) GetHasMoreOk() (*bool, bool) {
	if o == nil || IsNil(o.HasMore) {
		return nil, false
	}
	return o.HasMore, true
}

// HasHasMore returns a boolean if a field has been set.
func (o *GetPropertiesResponse) HasHasMore() bool {
	if o != nil && !IsNil(o.HasMore) {
		return true
	}

	return false
}

// SetHasMore gets a reference to the given bool and assigns it to the HasMore field.
func (o *GetPropertiesResponse) SetHasMore(v bool) {
	o.HasMore = &v
}

func (o GetPropertiesResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetPropertiesResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Code) {
		toSerialize["code"] = o.Code
	}
	if !IsNil(o.Message) {
		toSerialize["message"] = o.Message
	}
	if !IsNil(o.Properties) {
		toSerialize["properties"] = o.Properties
	}
	if !IsNil(o.HasMore) {
		toSerialize["has_more"] = o.HasMore
	}
	return toSerialize, nil
}

type NullableGetPropertiesResponse struct {
	value *GetPropertiesResponse
	isSet bool
}

func (v NullableGetPropertiesResponse) Get() *GetPropertiesResponse {
	return v.value
}

func (v *NullableGetPropertiesResponse) Set(val *GetPropertiesResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetPropertiesResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetPropertiesResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetPropertiesResponse(val *GetPropertiesResponse) *NullableGetPropertiesResponse {
	return &NullableGetPropertiesResponse{value: val, isSet: true}
}

func (v NullableGetPropertiesResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetPropertiesResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
