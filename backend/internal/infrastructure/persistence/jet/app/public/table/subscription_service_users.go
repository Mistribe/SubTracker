//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/postgres"
)

var SubscriptionServiceUsers = newSubscriptionServiceUsersTable("public", "subscription_service_users", "")

type subscriptionServiceUsersTable struct {
	postgres.Table

	// Columns
	FamilyMemberID postgres.ColumnString
	SubscriptionID postgres.ColumnString

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
	DefaultColumns postgres.ColumnList
}

type SubscriptionServiceUsersTable struct {
	subscriptionServiceUsersTable

	EXCLUDED subscriptionServiceUsersTable
}

// AS creates new SubscriptionServiceUsersTable with assigned alias
func (a SubscriptionServiceUsersTable) AS(alias string) *SubscriptionServiceUsersTable {
	return newSubscriptionServiceUsersTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new SubscriptionServiceUsersTable with assigned schema name
func (a SubscriptionServiceUsersTable) FromSchema(schemaName string) *SubscriptionServiceUsersTable {
	return newSubscriptionServiceUsersTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new SubscriptionServiceUsersTable with assigned table prefix
func (a SubscriptionServiceUsersTable) WithPrefix(prefix string) *SubscriptionServiceUsersTable {
	return newSubscriptionServiceUsersTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new SubscriptionServiceUsersTable with assigned table suffix
func (a SubscriptionServiceUsersTable) WithSuffix(suffix string) *SubscriptionServiceUsersTable {
	return newSubscriptionServiceUsersTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newSubscriptionServiceUsersTable(schemaName, tableName, alias string) *SubscriptionServiceUsersTable {
	return &SubscriptionServiceUsersTable{
		subscriptionServiceUsersTable: newSubscriptionServiceUsersTableImpl(schemaName, tableName, alias),
		EXCLUDED:                      newSubscriptionServiceUsersTableImpl("", "excluded", ""),
	}
}

func newSubscriptionServiceUsersTableImpl(schemaName, tableName, alias string) subscriptionServiceUsersTable {
	var (
		FamilyMemberIDColumn = postgres.StringColumn("family_member_id")
		SubscriptionIDColumn = postgres.StringColumn("subscription_id")
		allColumns           = postgres.ColumnList{FamilyMemberIDColumn, SubscriptionIDColumn}
		mutableColumns       = postgres.ColumnList{}
		defaultColumns       = postgres.ColumnList{}
	)

	return subscriptionServiceUsersTable{
		Table: postgres.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		FamilyMemberID: FamilyMemberIDColumn,
		SubscriptionID: SubscriptionIDColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
		DefaultColumns: defaultColumns,
	}
}
