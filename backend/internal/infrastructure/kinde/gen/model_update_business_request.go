/*
Kinde Management API

 Provides endpoints to manage your Kinde Businesses.  ## Intro  ## How to use  1. [Set up and authorize a machine-to-machine (M2M) application](https://docs.kinde.com/developer-tools/kinde-api/connect-to-kinde-api/).  2. [Generate a test access token](https://docs.kinde.com/developer-tools/kinde-api/access-token-for-api/)  3. Test request any endpoint using the test token

API version: 1
Contact: support@kinde.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the UpdateBusinessRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateBusinessRequest{}

// UpdateBusinessRequest struct for UpdateBusinessRequest
type UpdateBusinessRequest struct {
	// The name of the business.
	BusinessName NullableString `json:"business_name,omitempty"`
	// The email address of the business.
	Email NullableString `json:"email,omitempty"`
	// The key of the industry of your business. Can be retrieved from the /industries endpoint.
	IndustryKey NullableString `json:"industry_key,omitempty"`
	// Whether the business is using clickwrap agreements.
	IsClickWrap NullableBool `json:"is_click_wrap,omitempty"`
	// Whether the business is showing Kinde branding. Requires a paid plan.
	IsShowKindeBranding NullableBool `json:"is_show_kinde_branding,omitempty"`
	// The Kinde perk code for the business.
	KindePerkCode NullableString `json:"kinde_perk_code,omitempty"`
	// The phone number of the business.
	Phone NullableString `json:"phone,omitempty"`
	// The URL to the business's privacy policy.
	PrivacyUrl NullableString `json:"privacy_url,omitempty"`
	// The URL to the business's terms of service.
	TermsUrl NullableString `json:"terms_url,omitempty"`
	// The key of the timezone of your business. Can be retrieved from the /timezones endpoint.
	TimezoneKey NullableString `json:"timezone_key,omitempty"`
}

// NewUpdateBusinessRequest instantiates a new UpdateBusinessRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateBusinessRequest() *UpdateBusinessRequest {
	this := UpdateBusinessRequest{}
	return &this
}

// NewUpdateBusinessRequestWithDefaults instantiates a new UpdateBusinessRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateBusinessRequestWithDefaults() *UpdateBusinessRequest {
	this := UpdateBusinessRequest{}
	return &this
}

// GetBusinessName returns the BusinessName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateBusinessRequest) GetBusinessName() string {
	if o == nil || IsNil(o.BusinessName.Get()) {
		var ret string
		return ret
	}
	return *o.BusinessName.Get()
}

// GetBusinessNameOk returns a tuple with the BusinessName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateBusinessRequest) GetBusinessNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.BusinessName.Get(), o.BusinessName.IsSet()
}

// HasBusinessName returns a boolean if a field has been set.
func (o *UpdateBusinessRequest) HasBusinessName() bool {
	if o != nil && o.BusinessName.IsSet() {
		return true
	}

	return false
}

// SetBusinessName gets a reference to the given NullableString and assigns it to the BusinessName field.
func (o *UpdateBusinessRequest) SetBusinessName(v string) {
	o.BusinessName.Set(&v)
}

// SetBusinessNameNil sets the value for BusinessName to be an explicit nil
func (o *UpdateBusinessRequest) SetBusinessNameNil() {
	o.BusinessName.Set(nil)
}

// UnsetBusinessName ensures that no value is present for BusinessName, not even an explicit nil
func (o *UpdateBusinessRequest) UnsetBusinessName() {
	o.BusinessName.Unset()
}

// GetEmail returns the Email field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateBusinessRequest) GetEmail() string {
	if o == nil || IsNil(o.Email.Get()) {
		var ret string
		return ret
	}
	return *o.Email.Get()
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateBusinessRequest) GetEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Email.Get(), o.Email.IsSet()
}

// HasEmail returns a boolean if a field has been set.
func (o *UpdateBusinessRequest) HasEmail() bool {
	if o != nil && o.Email.IsSet() {
		return true
	}

	return false
}

// SetEmail gets a reference to the given NullableString and assigns it to the Email field.
func (o *UpdateBusinessRequest) SetEmail(v string) {
	o.Email.Set(&v)
}

// SetEmailNil sets the value for Email to be an explicit nil
func (o *UpdateBusinessRequest) SetEmailNil() {
	o.Email.Set(nil)
}

// UnsetEmail ensures that no value is present for Email, not even an explicit nil
func (o *UpdateBusinessRequest) UnsetEmail() {
	o.Email.Unset()
}

// GetIndustryKey returns the IndustryKey field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateBusinessRequest) GetIndustryKey() string {
	if o == nil || IsNil(o.IndustryKey.Get()) {
		var ret string
		return ret
	}
	return *o.IndustryKey.Get()
}

// GetIndustryKeyOk returns a tuple with the IndustryKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateBusinessRequest) GetIndustryKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.IndustryKey.Get(), o.IndustryKey.IsSet()
}

// HasIndustryKey returns a boolean if a field has been set.
func (o *UpdateBusinessRequest) HasIndustryKey() bool {
	if o != nil && o.IndustryKey.IsSet() {
		return true
	}

	return false
}

// SetIndustryKey gets a reference to the given NullableString and assigns it to the IndustryKey field.
func (o *UpdateBusinessRequest) SetIndustryKey(v string) {
	o.IndustryKey.Set(&v)
}

// SetIndustryKeyNil sets the value for IndustryKey to be an explicit nil
func (o *UpdateBusinessRequest) SetIndustryKeyNil() {
	o.IndustryKey.Set(nil)
}

// UnsetIndustryKey ensures that no value is present for IndustryKey, not even an explicit nil
func (o *UpdateBusinessRequest) UnsetIndustryKey() {
	o.IndustryKey.Unset()
}

// GetIsClickWrap returns the IsClickWrap field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateBusinessRequest) GetIsClickWrap() bool {
	if o == nil || IsNil(o.IsClickWrap.Get()) {
		var ret bool
		return ret
	}
	return *o.IsClickWrap.Get()
}

// GetIsClickWrapOk returns a tuple with the IsClickWrap field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateBusinessRequest) GetIsClickWrapOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.IsClickWrap.Get(), o.IsClickWrap.IsSet()
}

// HasIsClickWrap returns a boolean if a field has been set.
func (o *UpdateBusinessRequest) HasIsClickWrap() bool {
	if o != nil && o.IsClickWrap.IsSet() {
		return true
	}

	return false
}

// SetIsClickWrap gets a reference to the given NullableBool and assigns it to the IsClickWrap field.
func (o *UpdateBusinessRequest) SetIsClickWrap(v bool) {
	o.IsClickWrap.Set(&v)
}

// SetIsClickWrapNil sets the value for IsClickWrap to be an explicit nil
func (o *UpdateBusinessRequest) SetIsClickWrapNil() {
	o.IsClickWrap.Set(nil)
}

// UnsetIsClickWrap ensures that no value is present for IsClickWrap, not even an explicit nil
func (o *UpdateBusinessRequest) UnsetIsClickWrap() {
	o.IsClickWrap.Unset()
}

// GetIsShowKindeBranding returns the IsShowKindeBranding field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateBusinessRequest) GetIsShowKindeBranding() bool {
	if o == nil || IsNil(o.IsShowKindeBranding.Get()) {
		var ret bool
		return ret
	}
	return *o.IsShowKindeBranding.Get()
}

// GetIsShowKindeBrandingOk returns a tuple with the IsShowKindeBranding field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateBusinessRequest) GetIsShowKindeBrandingOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.IsShowKindeBranding.Get(), o.IsShowKindeBranding.IsSet()
}

// HasIsShowKindeBranding returns a boolean if a field has been set.
func (o *UpdateBusinessRequest) HasIsShowKindeBranding() bool {
	if o != nil && o.IsShowKindeBranding.IsSet() {
		return true
	}

	return false
}

// SetIsShowKindeBranding gets a reference to the given NullableBool and assigns it to the IsShowKindeBranding field.
func (o *UpdateBusinessRequest) SetIsShowKindeBranding(v bool) {
	o.IsShowKindeBranding.Set(&v)
}

// SetIsShowKindeBrandingNil sets the value for IsShowKindeBranding to be an explicit nil
func (o *UpdateBusinessRequest) SetIsShowKindeBrandingNil() {
	o.IsShowKindeBranding.Set(nil)
}

// UnsetIsShowKindeBranding ensures that no value is present for IsShowKindeBranding, not even an explicit nil
func (o *UpdateBusinessRequest) UnsetIsShowKindeBranding() {
	o.IsShowKindeBranding.Unset()
}

// GetKindePerkCode returns the KindePerkCode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateBusinessRequest) GetKindePerkCode() string {
	if o == nil || IsNil(o.KindePerkCode.Get()) {
		var ret string
		return ret
	}
	return *o.KindePerkCode.Get()
}

// GetKindePerkCodeOk returns a tuple with the KindePerkCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateBusinessRequest) GetKindePerkCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.KindePerkCode.Get(), o.KindePerkCode.IsSet()
}

// HasKindePerkCode returns a boolean if a field has been set.
func (o *UpdateBusinessRequest) HasKindePerkCode() bool {
	if o != nil && o.KindePerkCode.IsSet() {
		return true
	}

	return false
}

// SetKindePerkCode gets a reference to the given NullableString and assigns it to the KindePerkCode field.
func (o *UpdateBusinessRequest) SetKindePerkCode(v string) {
	o.KindePerkCode.Set(&v)
}

// SetKindePerkCodeNil sets the value for KindePerkCode to be an explicit nil
func (o *UpdateBusinessRequest) SetKindePerkCodeNil() {
	o.KindePerkCode.Set(nil)
}

// UnsetKindePerkCode ensures that no value is present for KindePerkCode, not even an explicit nil
func (o *UpdateBusinessRequest) UnsetKindePerkCode() {
	o.KindePerkCode.Unset()
}

// GetPhone returns the Phone field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateBusinessRequest) GetPhone() string {
	if o == nil || IsNil(o.Phone.Get()) {
		var ret string
		return ret
	}
	return *o.Phone.Get()
}

// GetPhoneOk returns a tuple with the Phone field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateBusinessRequest) GetPhoneOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Phone.Get(), o.Phone.IsSet()
}

// HasPhone returns a boolean if a field has been set.
func (o *UpdateBusinessRequest) HasPhone() bool {
	if o != nil && o.Phone.IsSet() {
		return true
	}

	return false
}

// SetPhone gets a reference to the given NullableString and assigns it to the Phone field.
func (o *UpdateBusinessRequest) SetPhone(v string) {
	o.Phone.Set(&v)
}

// SetPhoneNil sets the value for Phone to be an explicit nil
func (o *UpdateBusinessRequest) SetPhoneNil() {
	o.Phone.Set(nil)
}

// UnsetPhone ensures that no value is present for Phone, not even an explicit nil
func (o *UpdateBusinessRequest) UnsetPhone() {
	o.Phone.Unset()
}

// GetPrivacyUrl returns the PrivacyUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateBusinessRequest) GetPrivacyUrl() string {
	if o == nil || IsNil(o.PrivacyUrl.Get()) {
		var ret string
		return ret
	}
	return *o.PrivacyUrl.Get()
}

// GetPrivacyUrlOk returns a tuple with the PrivacyUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateBusinessRequest) GetPrivacyUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PrivacyUrl.Get(), o.PrivacyUrl.IsSet()
}

// HasPrivacyUrl returns a boolean if a field has been set.
func (o *UpdateBusinessRequest) HasPrivacyUrl() bool {
	if o != nil && o.PrivacyUrl.IsSet() {
		return true
	}

	return false
}

// SetPrivacyUrl gets a reference to the given NullableString and assigns it to the PrivacyUrl field.
func (o *UpdateBusinessRequest) SetPrivacyUrl(v string) {
	o.PrivacyUrl.Set(&v)
}

// SetPrivacyUrlNil sets the value for PrivacyUrl to be an explicit nil
func (o *UpdateBusinessRequest) SetPrivacyUrlNil() {
	o.PrivacyUrl.Set(nil)
}

// UnsetPrivacyUrl ensures that no value is present for PrivacyUrl, not even an explicit nil
func (o *UpdateBusinessRequest) UnsetPrivacyUrl() {
	o.PrivacyUrl.Unset()
}

// GetTermsUrl returns the TermsUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateBusinessRequest) GetTermsUrl() string {
	if o == nil || IsNil(o.TermsUrl.Get()) {
		var ret string
		return ret
	}
	return *o.TermsUrl.Get()
}

// GetTermsUrlOk returns a tuple with the TermsUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateBusinessRequest) GetTermsUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TermsUrl.Get(), o.TermsUrl.IsSet()
}

// HasTermsUrl returns a boolean if a field has been set.
func (o *UpdateBusinessRequest) HasTermsUrl() bool {
	if o != nil && o.TermsUrl.IsSet() {
		return true
	}

	return false
}

// SetTermsUrl gets a reference to the given NullableString and assigns it to the TermsUrl field.
func (o *UpdateBusinessRequest) SetTermsUrl(v string) {
	o.TermsUrl.Set(&v)
}

// SetTermsUrlNil sets the value for TermsUrl to be an explicit nil
func (o *UpdateBusinessRequest) SetTermsUrlNil() {
	o.TermsUrl.Set(nil)
}

// UnsetTermsUrl ensures that no value is present for TermsUrl, not even an explicit nil
func (o *UpdateBusinessRequest) UnsetTermsUrl() {
	o.TermsUrl.Unset()
}

// GetTimezoneKey returns the TimezoneKey field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateBusinessRequest) GetTimezoneKey() string {
	if o == nil || IsNil(o.TimezoneKey.Get()) {
		var ret string
		return ret
	}
	return *o.TimezoneKey.Get()
}

// GetTimezoneKeyOk returns a tuple with the TimezoneKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateBusinessRequest) GetTimezoneKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TimezoneKey.Get(), o.TimezoneKey.IsSet()
}

// HasTimezoneKey returns a boolean if a field has been set.
func (o *UpdateBusinessRequest) HasTimezoneKey() bool {
	if o != nil && o.TimezoneKey.IsSet() {
		return true
	}

	return false
}

// SetTimezoneKey gets a reference to the given NullableString and assigns it to the TimezoneKey field.
func (o *UpdateBusinessRequest) SetTimezoneKey(v string) {
	o.TimezoneKey.Set(&v)
}

// SetTimezoneKeyNil sets the value for TimezoneKey to be an explicit nil
func (o *UpdateBusinessRequest) SetTimezoneKeyNil() {
	o.TimezoneKey.Set(nil)
}

// UnsetTimezoneKey ensures that no value is present for TimezoneKey, not even an explicit nil
func (o *UpdateBusinessRequest) UnsetTimezoneKey() {
	o.TimezoneKey.Unset()
}

func (o UpdateBusinessRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateBusinessRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.BusinessName.IsSet() {
		toSerialize["business_name"] = o.BusinessName.Get()
	}
	if o.Email.IsSet() {
		toSerialize["email"] = o.Email.Get()
	}
	if o.IndustryKey.IsSet() {
		toSerialize["industry_key"] = o.IndustryKey.Get()
	}
	if o.IsClickWrap.IsSet() {
		toSerialize["is_click_wrap"] = o.IsClickWrap.Get()
	}
	if o.IsShowKindeBranding.IsSet() {
		toSerialize["is_show_kinde_branding"] = o.IsShowKindeBranding.Get()
	}
	if o.KindePerkCode.IsSet() {
		toSerialize["kinde_perk_code"] = o.KindePerkCode.Get()
	}
	if o.Phone.IsSet() {
		toSerialize["phone"] = o.Phone.Get()
	}
	if o.PrivacyUrl.IsSet() {
		toSerialize["privacy_url"] = o.PrivacyUrl.Get()
	}
	if o.TermsUrl.IsSet() {
		toSerialize["terms_url"] = o.TermsUrl.Get()
	}
	if o.TimezoneKey.IsSet() {
		toSerialize["timezone_key"] = o.TimezoneKey.Get()
	}
	return toSerialize, nil
}

type NullableUpdateBusinessRequest struct {
	value *UpdateBusinessRequest
	isSet bool
}

func (v NullableUpdateBusinessRequest) Get() *UpdateBusinessRequest {
	return v.value
}

func (v *NullableUpdateBusinessRequest) Set(val *UpdateBusinessRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateBusinessRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateBusinessRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateBusinessRequest(val *UpdateBusinessRequest) *NullableUpdateBusinessRequest {
	return &NullableUpdateBusinessRequest{value: val, isSet: true}
}

func (v NullableUpdateBusinessRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateBusinessRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
