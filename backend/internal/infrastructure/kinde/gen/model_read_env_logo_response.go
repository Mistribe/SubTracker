/*
Kinde Management API

 Provides endpoints to manage your Kinde Businesses.  ## Intro  ## How to use  1. [Set up and authorize a machine-to-machine (M2M) application](https://docs.kinde.com/developer-tools/kinde-api/connect-to-kinde-api/).  2. [Generate a test access token](https://docs.kinde.com/developer-tools/kinde-api/access-token-for-api/)  3. Test request any endpoint using the test token

API version: 1
Contact: support@kinde.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ReadEnvLogoResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ReadEnvLogoResponse{}

// ReadEnvLogoResponse struct for ReadEnvLogoResponse
type ReadEnvLogoResponse struct {
	// Response code.
	Code *string `json:"code,omitempty"`
	// A list of logos.
	Logos []ReadEnvLogoResponseLogosInner `json:"logos,omitempty"`
	// Response message.
	Message *string `json:"message,omitempty"`
}

// NewReadEnvLogoResponse instantiates a new ReadEnvLogoResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReadEnvLogoResponse() *ReadEnvLogoResponse {
	this := ReadEnvLogoResponse{}
	return &this
}

// NewReadEnvLogoResponseWithDefaults instantiates a new ReadEnvLogoResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReadEnvLogoResponseWithDefaults() *ReadEnvLogoResponse {
	this := ReadEnvLogoResponse{}
	return &this
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *ReadEnvLogoResponse) GetCode() string {
	if o == nil || IsNil(o.Code) {
		var ret string
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadEnvLogoResponse) GetCodeOk() (*string, bool) {
	if o == nil || IsNil(o.Code) {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *ReadEnvLogoResponse) HasCode() bool {
	if o != nil && !IsNil(o.Code) {
		return true
	}

	return false
}

// SetCode gets a reference to the given string and assigns it to the Code field.
func (o *ReadEnvLogoResponse) SetCode(v string) {
	o.Code = &v
}

// GetLogos returns the Logos field value if set, zero value otherwise.
func (o *ReadEnvLogoResponse) GetLogos() []ReadEnvLogoResponseLogosInner {
	if o == nil || IsNil(o.Logos) {
		var ret []ReadEnvLogoResponseLogosInner
		return ret
	}
	return o.Logos
}

// GetLogosOk returns a tuple with the Logos field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadEnvLogoResponse) GetLogosOk() ([]ReadEnvLogoResponseLogosInner, bool) {
	if o == nil || IsNil(o.Logos) {
		return nil, false
	}
	return o.Logos, true
}

// HasLogos returns a boolean if a field has been set.
func (o *ReadEnvLogoResponse) HasLogos() bool {
	if o != nil && !IsNil(o.Logos) {
		return true
	}

	return false
}

// SetLogos gets a reference to the given []ReadEnvLogoResponseLogosInner and assigns it to the Logos field.
func (o *ReadEnvLogoResponse) SetLogos(v []ReadEnvLogoResponseLogosInner) {
	o.Logos = v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *ReadEnvLogoResponse) GetMessage() string {
	if o == nil || IsNil(o.Message) {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadEnvLogoResponse) GetMessageOk() (*string, bool) {
	if o == nil || IsNil(o.Message) {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *ReadEnvLogoResponse) HasMessage() bool {
	if o != nil && !IsNil(o.Message) {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *ReadEnvLogoResponse) SetMessage(v string) {
	o.Message = &v
}

func (o ReadEnvLogoResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ReadEnvLogoResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Code) {
		toSerialize["code"] = o.Code
	}
	if !IsNil(o.Logos) {
		toSerialize["logos"] = o.Logos
	}
	if !IsNil(o.Message) {
		toSerialize["message"] = o.Message
	}
	return toSerialize, nil
}

type NullableReadEnvLogoResponse struct {
	value *ReadEnvLogoResponse
	isSet bool
}

func (v NullableReadEnvLogoResponse) Get() *ReadEnvLogoResponse {
	return v.value
}

func (v *NullableReadEnvLogoResponse) Set(val *ReadEnvLogoResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableReadEnvLogoResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableReadEnvLogoResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReadEnvLogoResponse(val *ReadEnvLogoResponse) *NullableReadEnvLogoResponse {
	return &NullableReadEnvLogoResponse{value: val, isSet: true}
}

func (v NullableReadEnvLogoResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReadEnvLogoResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
