/*
Kinde Management API

 Provides endpoints to manage your Kinde Businesses.  ## Intro  ## How to use  1. [Set up and authorize a machine-to-machine (M2M) application](https://docs.kinde.com/developer-tools/kinde-api/connect-to-kinde-api/).  2. [Generate a test access token](https://docs.kinde.com/developer-tools/kinde-api/access-token-for-api/)  3. Test request any endpoint using the test token

API version: 1
Contact: support@kinde.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the UpdateOrganizationUsersResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateOrganizationUsersResponse{}

// UpdateOrganizationUsersResponse struct for UpdateOrganizationUsersResponse
type UpdateOrganizationUsersResponse struct {
	Message      *string  `json:"message,omitempty"`
	Code         *string  `json:"code,omitempty"`
	UsersAdded   []string `json:"users_added,omitempty"`
	UsersUpdated []string `json:"users_updated,omitempty"`
	UsersRemoved []string `json:"users_removed,omitempty"`
}

// NewUpdateOrganizationUsersResponse instantiates a new UpdateOrganizationUsersResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateOrganizationUsersResponse() *UpdateOrganizationUsersResponse {
	this := UpdateOrganizationUsersResponse{}
	return &this
}

// NewUpdateOrganizationUsersResponseWithDefaults instantiates a new UpdateOrganizationUsersResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateOrganizationUsersResponseWithDefaults() *UpdateOrganizationUsersResponse {
	this := UpdateOrganizationUsersResponse{}
	return &this
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *UpdateOrganizationUsersResponse) GetMessage() string {
	if o == nil || IsNil(o.Message) {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateOrganizationUsersResponse) GetMessageOk() (*string, bool) {
	if o == nil || IsNil(o.Message) {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *UpdateOrganizationUsersResponse) HasMessage() bool {
	if o != nil && !IsNil(o.Message) {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *UpdateOrganizationUsersResponse) SetMessage(v string) {
	o.Message = &v
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *UpdateOrganizationUsersResponse) GetCode() string {
	if o == nil || IsNil(o.Code) {
		var ret string
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateOrganizationUsersResponse) GetCodeOk() (*string, bool) {
	if o == nil || IsNil(o.Code) {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *UpdateOrganizationUsersResponse) HasCode() bool {
	if o != nil && !IsNil(o.Code) {
		return true
	}

	return false
}

// SetCode gets a reference to the given string and assigns it to the Code field.
func (o *UpdateOrganizationUsersResponse) SetCode(v string) {
	o.Code = &v
}

// GetUsersAdded returns the UsersAdded field value if set, zero value otherwise.
func (o *UpdateOrganizationUsersResponse) GetUsersAdded() []string {
	if o == nil || IsNil(o.UsersAdded) {
		var ret []string
		return ret
	}
	return o.UsersAdded
}

// GetUsersAddedOk returns a tuple with the UsersAdded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateOrganizationUsersResponse) GetUsersAddedOk() ([]string, bool) {
	if o == nil || IsNil(o.UsersAdded) {
		return nil, false
	}
	return o.UsersAdded, true
}

// HasUsersAdded returns a boolean if a field has been set.
func (o *UpdateOrganizationUsersResponse) HasUsersAdded() bool {
	if o != nil && !IsNil(o.UsersAdded) {
		return true
	}

	return false
}

// SetUsersAdded gets a reference to the given []string and assigns it to the UsersAdded field.
func (o *UpdateOrganizationUsersResponse) SetUsersAdded(v []string) {
	o.UsersAdded = v
}

// GetUsersUpdated returns the UsersUpdated field value if set, zero value otherwise.
func (o *UpdateOrganizationUsersResponse) GetUsersUpdated() []string {
	if o == nil || IsNil(o.UsersUpdated) {
		var ret []string
		return ret
	}
	return o.UsersUpdated
}

// GetUsersUpdatedOk returns a tuple with the UsersUpdated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateOrganizationUsersResponse) GetUsersUpdatedOk() ([]string, bool) {
	if o == nil || IsNil(o.UsersUpdated) {
		return nil, false
	}
	return o.UsersUpdated, true
}

// HasUsersUpdated returns a boolean if a field has been set.
func (o *UpdateOrganizationUsersResponse) HasUsersUpdated() bool {
	if o != nil && !IsNil(o.UsersUpdated) {
		return true
	}

	return false
}

// SetUsersUpdated gets a reference to the given []string and assigns it to the UsersUpdated field.
func (o *UpdateOrganizationUsersResponse) SetUsersUpdated(v []string) {
	o.UsersUpdated = v
}

// GetUsersRemoved returns the UsersRemoved field value if set, zero value otherwise.
func (o *UpdateOrganizationUsersResponse) GetUsersRemoved() []string {
	if o == nil || IsNil(o.UsersRemoved) {
		var ret []string
		return ret
	}
	return o.UsersRemoved
}

// GetUsersRemovedOk returns a tuple with the UsersRemoved field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateOrganizationUsersResponse) GetUsersRemovedOk() ([]string, bool) {
	if o == nil || IsNil(o.UsersRemoved) {
		return nil, false
	}
	return o.UsersRemoved, true
}

// HasUsersRemoved returns a boolean if a field has been set.
func (o *UpdateOrganizationUsersResponse) HasUsersRemoved() bool {
	if o != nil && !IsNil(o.UsersRemoved) {
		return true
	}

	return false
}

// SetUsersRemoved gets a reference to the given []string and assigns it to the UsersRemoved field.
func (o *UpdateOrganizationUsersResponse) SetUsersRemoved(v []string) {
	o.UsersRemoved = v
}

func (o UpdateOrganizationUsersResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateOrganizationUsersResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Message) {
		toSerialize["message"] = o.Message
	}
	if !IsNil(o.Code) {
		toSerialize["code"] = o.Code
	}
	if !IsNil(o.UsersAdded) {
		toSerialize["users_added"] = o.UsersAdded
	}
	if !IsNil(o.UsersUpdated) {
		toSerialize["users_updated"] = o.UsersUpdated
	}
	if !IsNil(o.UsersRemoved) {
		toSerialize["users_removed"] = o.UsersRemoved
	}
	return toSerialize, nil
}

type NullableUpdateOrganizationUsersResponse struct {
	value *UpdateOrganizationUsersResponse
	isSet bool
}

func (v NullableUpdateOrganizationUsersResponse) Get() *UpdateOrganizationUsersResponse {
	return v.value
}

func (v *NullableUpdateOrganizationUsersResponse) Set(val *UpdateOrganizationUsersResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateOrganizationUsersResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateOrganizationUsersResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateOrganizationUsersResponse(val *UpdateOrganizationUsersResponse) *NullableUpdateOrganizationUsersResponse {
	return &NullableUpdateOrganizationUsersResponse{value: val, isSet: true}
}

func (v NullableUpdateOrganizationUsersResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateOrganizationUsersResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
