/*
Kinde Management API

 Provides endpoints to manage your Kinde Businesses.  ## Intro  ## How to use  1. [Set up and authorize a machine-to-machine (M2M) application](https://docs.kinde.com/developer-tools/kinde-api/connect-to-kinde-api/).  2. [Generate a test access token](https://docs.kinde.com/developer-tools/kinde-api/access-token-for-api/)  3. Test request any endpoint using the test token

API version: 1
Contact: support@kinde.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the GetBillingEntitlementsResponseEntitlementsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetBillingEntitlementsResponseEntitlementsInner{}

// GetBillingEntitlementsResponseEntitlementsInner struct for GetBillingEntitlementsResponseEntitlementsInner
type GetBillingEntitlementsResponseEntitlementsInner struct {
	// The friendly id of an entitlement
	Id *string `json:"id,omitempty"`
	// The price charged if this is an entitlement for a fixed charged
	FixedCharge *int32 `json:"fixed_charge,omitempty"`
	// The name of the price associated with the entitlement
	PriceName *string `json:"price_name,omitempty"`
	// The price charged for this entitlement in cents
	UnitAmount *int32 `json:"unit_amount,omitempty"`
	// The feature code of the feature corresponding to this entitlement
	FeatureCode *string `json:"feature_code,omitempty"`
	// The feature name of the feature corresponding to this entitlement
	FeatureName *string `json:"feature_name,omitempty"`
	// The maximum number of units of the feature the customer is entitled to
	EntitlementLimitMax *int32 `json:"entitlement_limit_max,omitempty"`
	// The minimum number of units of the feature the customer is entitled to
	EntitlementLimitMin *int32 `json:"entitlement_limit_min,omitempty"`
}

// NewGetBillingEntitlementsResponseEntitlementsInner instantiates a new GetBillingEntitlementsResponseEntitlementsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetBillingEntitlementsResponseEntitlementsInner() *GetBillingEntitlementsResponseEntitlementsInner {
	this := GetBillingEntitlementsResponseEntitlementsInner{}
	return &this
}

// NewGetBillingEntitlementsResponseEntitlementsInnerWithDefaults instantiates a new GetBillingEntitlementsResponseEntitlementsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetBillingEntitlementsResponseEntitlementsInnerWithDefaults() *GetBillingEntitlementsResponseEntitlementsInner {
	this := GetBillingEntitlementsResponseEntitlementsInner{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *GetBillingEntitlementsResponseEntitlementsInner) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetBillingEntitlementsResponseEntitlementsInner) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *GetBillingEntitlementsResponseEntitlementsInner) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *GetBillingEntitlementsResponseEntitlementsInner) SetId(v string) {
	o.Id = &v
}

// GetFixedCharge returns the FixedCharge field value if set, zero value otherwise.
func (o *GetBillingEntitlementsResponseEntitlementsInner) GetFixedCharge() int32 {
	if o == nil || IsNil(o.FixedCharge) {
		var ret int32
		return ret
	}
	return *o.FixedCharge
}

// GetFixedChargeOk returns a tuple with the FixedCharge field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetBillingEntitlementsResponseEntitlementsInner) GetFixedChargeOk() (*int32, bool) {
	if o == nil || IsNil(o.FixedCharge) {
		return nil, false
	}
	return o.FixedCharge, true
}

// HasFixedCharge returns a boolean if a field has been set.
func (o *GetBillingEntitlementsResponseEntitlementsInner) HasFixedCharge() bool {
	if o != nil && !IsNil(o.FixedCharge) {
		return true
	}

	return false
}

// SetFixedCharge gets a reference to the given int32 and assigns it to the FixedCharge field.
func (o *GetBillingEntitlementsResponseEntitlementsInner) SetFixedCharge(v int32) {
	o.FixedCharge = &v
}

// GetPriceName returns the PriceName field value if set, zero value otherwise.
func (o *GetBillingEntitlementsResponseEntitlementsInner) GetPriceName() string {
	if o == nil || IsNil(o.PriceName) {
		var ret string
		return ret
	}
	return *o.PriceName
}

// GetPriceNameOk returns a tuple with the PriceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetBillingEntitlementsResponseEntitlementsInner) GetPriceNameOk() (*string, bool) {
	if o == nil || IsNil(o.PriceName) {
		return nil, false
	}
	return o.PriceName, true
}

// HasPriceName returns a boolean if a field has been set.
func (o *GetBillingEntitlementsResponseEntitlementsInner) HasPriceName() bool {
	if o != nil && !IsNil(o.PriceName) {
		return true
	}

	return false
}

// SetPriceName gets a reference to the given string and assigns it to the PriceName field.
func (o *GetBillingEntitlementsResponseEntitlementsInner) SetPriceName(v string) {
	o.PriceName = &v
}

// GetUnitAmount returns the UnitAmount field value if set, zero value otherwise.
func (o *GetBillingEntitlementsResponseEntitlementsInner) GetUnitAmount() int32 {
	if o == nil || IsNil(o.UnitAmount) {
		var ret int32
		return ret
	}
	return *o.UnitAmount
}

// GetUnitAmountOk returns a tuple with the UnitAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetBillingEntitlementsResponseEntitlementsInner) GetUnitAmountOk() (*int32, bool) {
	if o == nil || IsNil(o.UnitAmount) {
		return nil, false
	}
	return o.UnitAmount, true
}

// HasUnitAmount returns a boolean if a field has been set.
func (o *GetBillingEntitlementsResponseEntitlementsInner) HasUnitAmount() bool {
	if o != nil && !IsNil(o.UnitAmount) {
		return true
	}

	return false
}

// SetUnitAmount gets a reference to the given int32 and assigns it to the UnitAmount field.
func (o *GetBillingEntitlementsResponseEntitlementsInner) SetUnitAmount(v int32) {
	o.UnitAmount = &v
}

// GetFeatureCode returns the FeatureCode field value if set, zero value otherwise.
func (o *GetBillingEntitlementsResponseEntitlementsInner) GetFeatureCode() string {
	if o == nil || IsNil(o.FeatureCode) {
		var ret string
		return ret
	}
	return *o.FeatureCode
}

// GetFeatureCodeOk returns a tuple with the FeatureCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetBillingEntitlementsResponseEntitlementsInner) GetFeatureCodeOk() (*string, bool) {
	if o == nil || IsNil(o.FeatureCode) {
		return nil, false
	}
	return o.FeatureCode, true
}

// HasFeatureCode returns a boolean if a field has been set.
func (o *GetBillingEntitlementsResponseEntitlementsInner) HasFeatureCode() bool {
	if o != nil && !IsNil(o.FeatureCode) {
		return true
	}

	return false
}

// SetFeatureCode gets a reference to the given string and assigns it to the FeatureCode field.
func (o *GetBillingEntitlementsResponseEntitlementsInner) SetFeatureCode(v string) {
	o.FeatureCode = &v
}

// GetFeatureName returns the FeatureName field value if set, zero value otherwise.
func (o *GetBillingEntitlementsResponseEntitlementsInner) GetFeatureName() string {
	if o == nil || IsNil(o.FeatureName) {
		var ret string
		return ret
	}
	return *o.FeatureName
}

// GetFeatureNameOk returns a tuple with the FeatureName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetBillingEntitlementsResponseEntitlementsInner) GetFeatureNameOk() (*string, bool) {
	if o == nil || IsNil(o.FeatureName) {
		return nil, false
	}
	return o.FeatureName, true
}

// HasFeatureName returns a boolean if a field has been set.
func (o *GetBillingEntitlementsResponseEntitlementsInner) HasFeatureName() bool {
	if o != nil && !IsNil(o.FeatureName) {
		return true
	}

	return false
}

// SetFeatureName gets a reference to the given string and assigns it to the FeatureName field.
func (o *GetBillingEntitlementsResponseEntitlementsInner) SetFeatureName(v string) {
	o.FeatureName = &v
}

// GetEntitlementLimitMax returns the EntitlementLimitMax field value if set, zero value otherwise.
func (o *GetBillingEntitlementsResponseEntitlementsInner) GetEntitlementLimitMax() int32 {
	if o == nil || IsNil(o.EntitlementLimitMax) {
		var ret int32
		return ret
	}
	return *o.EntitlementLimitMax
}

// GetEntitlementLimitMaxOk returns a tuple with the EntitlementLimitMax field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetBillingEntitlementsResponseEntitlementsInner) GetEntitlementLimitMaxOk() (*int32, bool) {
	if o == nil || IsNil(o.EntitlementLimitMax) {
		return nil, false
	}
	return o.EntitlementLimitMax, true
}

// HasEntitlementLimitMax returns a boolean if a field has been set.
func (o *GetBillingEntitlementsResponseEntitlementsInner) HasEntitlementLimitMax() bool {
	if o != nil && !IsNil(o.EntitlementLimitMax) {
		return true
	}

	return false
}

// SetEntitlementLimitMax gets a reference to the given int32 and assigns it to the EntitlementLimitMax field.
func (o *GetBillingEntitlementsResponseEntitlementsInner) SetEntitlementLimitMax(v int32) {
	o.EntitlementLimitMax = &v
}

// GetEntitlementLimitMin returns the EntitlementLimitMin field value if set, zero value otherwise.
func (o *GetBillingEntitlementsResponseEntitlementsInner) GetEntitlementLimitMin() int32 {
	if o == nil || IsNil(o.EntitlementLimitMin) {
		var ret int32
		return ret
	}
	return *o.EntitlementLimitMin
}

// GetEntitlementLimitMinOk returns a tuple with the EntitlementLimitMin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetBillingEntitlementsResponseEntitlementsInner) GetEntitlementLimitMinOk() (*int32, bool) {
	if o == nil || IsNil(o.EntitlementLimitMin) {
		return nil, false
	}
	return o.EntitlementLimitMin, true
}

// HasEntitlementLimitMin returns a boolean if a field has been set.
func (o *GetBillingEntitlementsResponseEntitlementsInner) HasEntitlementLimitMin() bool {
	if o != nil && !IsNil(o.EntitlementLimitMin) {
		return true
	}

	return false
}

// SetEntitlementLimitMin gets a reference to the given int32 and assigns it to the EntitlementLimitMin field.
func (o *GetBillingEntitlementsResponseEntitlementsInner) SetEntitlementLimitMin(v int32) {
	o.EntitlementLimitMin = &v
}

func (o GetBillingEntitlementsResponseEntitlementsInner) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetBillingEntitlementsResponseEntitlementsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.FixedCharge) {
		toSerialize["fixed_charge"] = o.FixedCharge
	}
	if !IsNil(o.PriceName) {
		toSerialize["price_name"] = o.PriceName
	}
	if !IsNil(o.UnitAmount) {
		toSerialize["unit_amount"] = o.UnitAmount
	}
	if !IsNil(o.FeatureCode) {
		toSerialize["feature_code"] = o.FeatureCode
	}
	if !IsNil(o.FeatureName) {
		toSerialize["feature_name"] = o.FeatureName
	}
	if !IsNil(o.EntitlementLimitMax) {
		toSerialize["entitlement_limit_max"] = o.EntitlementLimitMax
	}
	if !IsNil(o.EntitlementLimitMin) {
		toSerialize["entitlement_limit_min"] = o.EntitlementLimitMin
	}
	return toSerialize, nil
}

type NullableGetBillingEntitlementsResponseEntitlementsInner struct {
	value *GetBillingEntitlementsResponseEntitlementsInner
	isSet bool
}

func (v NullableGetBillingEntitlementsResponseEntitlementsInner) Get() *GetBillingEntitlementsResponseEntitlementsInner {
	return v.value
}

func (v *NullableGetBillingEntitlementsResponseEntitlementsInner) Set(val *GetBillingEntitlementsResponseEntitlementsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGetBillingEntitlementsResponseEntitlementsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGetBillingEntitlementsResponseEntitlementsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetBillingEntitlementsResponseEntitlementsInner(val *GetBillingEntitlementsResponseEntitlementsInner) *NullableGetBillingEntitlementsResponseEntitlementsInner {
	return &NullableGetBillingEntitlementsResponseEntitlementsInner{value: val, isSet: true}
}

func (v NullableGetBillingEntitlementsResponseEntitlementsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetBillingEntitlementsResponseEntitlementsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
