/*
Kinde Management API

 Provides endpoints to manage your Kinde Businesses.  ## Intro  ## How to use  1. [Set up and authorize a machine-to-machine (M2M) application](https://docs.kinde.com/developer-tools/kinde-api/connect-to-kinde-api/).  2. [Generate a test access token](https://docs.kinde.com/developer-tools/kinde-api/access-token-for-api/)  3. Test request any endpoint using the test token

API version: 1
Contact: support@kinde.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the CreateOrganizationRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateOrganizationRequest{}

// CreateOrganizationRequest struct for CreateOrganizationRequest
type CreateOrganizationRequest struct {
	// The organization's name.
	Name string `json:"name"`
	// The organization's feature flag settings.
	FeatureFlags *map[string]string `json:"feature_flags,omitempty"`
	// The organization's external identifier - commonly used when migrating from or mapping to other systems.
	ExternalId *string `json:"external_id,omitempty"`
	// The organization's brand settings - background color.
	BackgroundColor *string `json:"background_color,omitempty"`
	// The organization's brand settings - button color.
	ButtonColor *string `json:"button_color,omitempty"`
	// The organization's brand settings - button text color.
	ButtonTextColor *string `json:"button_text_color,omitempty"`
	// The organization's brand settings - link color.
	LinkColor *string `json:"link_color,omitempty"`
	// The organization's brand settings - dark mode background color.
	BackgroundColorDark *string `json:"background_color_dark,omitempty"`
	// The organization's brand settings - dark mode button color.
	ButtonColorDark *string `json:"button_color_dark,omitempty"`
	// The organization's brand settings - dark mode button text color.
	ButtonTextColorDark *string `json:"button_text_color_dark,omitempty"`
	// The organization's brand settings - dark mode link color.
	LinkColorDark *string `json:"link_color_dark,omitempty"`
	// The organization's brand settings - theme/mode 'light' | 'dark' | 'user_preference'.
	ThemeCode *string `json:"theme_code,omitempty"`
	// A unique handle for the organization - can be used for dynamic callback urls.
	Handle *string `json:"handle,omitempty"`
	// If users become members of this organization when the org code is supplied during authentication.
	IsAllowRegistrations *bool `json:"is_allow_registrations,omitempty"`
	// The name of the organization that will be used in emails
	SenderName NullableString `json:"sender_name,omitempty"`
	// The email address that will be used in emails. Requires custom SMTP to be set up.
	SenderEmail NullableString `json:"sender_email,omitempty"`
	// If a billing customer is also created for this organization
	IsCreateBillingCustomer *bool `json:"is_create_billing_customer,omitempty"`
	// The email address used for billing purposes for the organization
	BillingEmail *string `json:"billing_email,omitempty"`
	// The billing plan to put the customer on. If not specified, the default plan is used
	BillingPlanCode *string `json:"billing_plan_code,omitempty"`
}

type _CreateOrganizationRequest CreateOrganizationRequest

// NewCreateOrganizationRequest instantiates a new CreateOrganizationRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateOrganizationRequest(name string) *CreateOrganizationRequest {
	this := CreateOrganizationRequest{}
	this.Name = name
	return &this
}

// NewCreateOrganizationRequestWithDefaults instantiates a new CreateOrganizationRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateOrganizationRequestWithDefaults() *CreateOrganizationRequest {
	this := CreateOrganizationRequest{}
	return &this
}

// GetName returns the Name field value
func (o *CreateOrganizationRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CreateOrganizationRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CreateOrganizationRequest) SetName(v string) {
	o.Name = v
}

// GetFeatureFlags returns the FeatureFlags field value if set, zero value otherwise.
func (o *CreateOrganizationRequest) GetFeatureFlags() map[string]string {
	if o == nil || IsNil(o.FeatureFlags) {
		var ret map[string]string
		return ret
	}
	return *o.FeatureFlags
}

// GetFeatureFlagsOk returns a tuple with the FeatureFlags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrganizationRequest) GetFeatureFlagsOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.FeatureFlags) {
		return nil, false
	}
	return o.FeatureFlags, true
}

// HasFeatureFlags returns a boolean if a field has been set.
func (o *CreateOrganizationRequest) HasFeatureFlags() bool {
	if o != nil && !IsNil(o.FeatureFlags) {
		return true
	}

	return false
}

// SetFeatureFlags gets a reference to the given map[string]string and assigns it to the FeatureFlags field.
func (o *CreateOrganizationRequest) SetFeatureFlags(v map[string]string) {
	o.FeatureFlags = &v
}

// GetExternalId returns the ExternalId field value if set, zero value otherwise.
func (o *CreateOrganizationRequest) GetExternalId() string {
	if o == nil || IsNil(o.ExternalId) {
		var ret string
		return ret
	}
	return *o.ExternalId
}

// GetExternalIdOk returns a tuple with the ExternalId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrganizationRequest) GetExternalIdOk() (*string, bool) {
	if o == nil || IsNil(o.ExternalId) {
		return nil, false
	}
	return o.ExternalId, true
}

// HasExternalId returns a boolean if a field has been set.
func (o *CreateOrganizationRequest) HasExternalId() bool {
	if o != nil && !IsNil(o.ExternalId) {
		return true
	}

	return false
}

// SetExternalId gets a reference to the given string and assigns it to the ExternalId field.
func (o *CreateOrganizationRequest) SetExternalId(v string) {
	o.ExternalId = &v
}

// GetBackgroundColor returns the BackgroundColor field value if set, zero value otherwise.
func (o *CreateOrganizationRequest) GetBackgroundColor() string {
	if o == nil || IsNil(o.BackgroundColor) {
		var ret string
		return ret
	}
	return *o.BackgroundColor
}

// GetBackgroundColorOk returns a tuple with the BackgroundColor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrganizationRequest) GetBackgroundColorOk() (*string, bool) {
	if o == nil || IsNil(o.BackgroundColor) {
		return nil, false
	}
	return o.BackgroundColor, true
}

// HasBackgroundColor returns a boolean if a field has been set.
func (o *CreateOrganizationRequest) HasBackgroundColor() bool {
	if o != nil && !IsNil(o.BackgroundColor) {
		return true
	}

	return false
}

// SetBackgroundColor gets a reference to the given string and assigns it to the BackgroundColor field.
func (o *CreateOrganizationRequest) SetBackgroundColor(v string) {
	o.BackgroundColor = &v
}

// GetButtonColor returns the ButtonColor field value if set, zero value otherwise.
func (o *CreateOrganizationRequest) GetButtonColor() string {
	if o == nil || IsNil(o.ButtonColor) {
		var ret string
		return ret
	}
	return *o.ButtonColor
}

// GetButtonColorOk returns a tuple with the ButtonColor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrganizationRequest) GetButtonColorOk() (*string, bool) {
	if o == nil || IsNil(o.ButtonColor) {
		return nil, false
	}
	return o.ButtonColor, true
}

// HasButtonColor returns a boolean if a field has been set.
func (o *CreateOrganizationRequest) HasButtonColor() bool {
	if o != nil && !IsNil(o.ButtonColor) {
		return true
	}

	return false
}

// SetButtonColor gets a reference to the given string and assigns it to the ButtonColor field.
func (o *CreateOrganizationRequest) SetButtonColor(v string) {
	o.ButtonColor = &v
}

// GetButtonTextColor returns the ButtonTextColor field value if set, zero value otherwise.
func (o *CreateOrganizationRequest) GetButtonTextColor() string {
	if o == nil || IsNil(o.ButtonTextColor) {
		var ret string
		return ret
	}
	return *o.ButtonTextColor
}

// GetButtonTextColorOk returns a tuple with the ButtonTextColor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrganizationRequest) GetButtonTextColorOk() (*string, bool) {
	if o == nil || IsNil(o.ButtonTextColor) {
		return nil, false
	}
	return o.ButtonTextColor, true
}

// HasButtonTextColor returns a boolean if a field has been set.
func (o *CreateOrganizationRequest) HasButtonTextColor() bool {
	if o != nil && !IsNil(o.ButtonTextColor) {
		return true
	}

	return false
}

// SetButtonTextColor gets a reference to the given string and assigns it to the ButtonTextColor field.
func (o *CreateOrganizationRequest) SetButtonTextColor(v string) {
	o.ButtonTextColor = &v
}

// GetLinkColor returns the LinkColor field value if set, zero value otherwise.
func (o *CreateOrganizationRequest) GetLinkColor() string {
	if o == nil || IsNil(o.LinkColor) {
		var ret string
		return ret
	}
	return *o.LinkColor
}

// GetLinkColorOk returns a tuple with the LinkColor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrganizationRequest) GetLinkColorOk() (*string, bool) {
	if o == nil || IsNil(o.LinkColor) {
		return nil, false
	}
	return o.LinkColor, true
}

// HasLinkColor returns a boolean if a field has been set.
func (o *CreateOrganizationRequest) HasLinkColor() bool {
	if o != nil && !IsNil(o.LinkColor) {
		return true
	}

	return false
}

// SetLinkColor gets a reference to the given string and assigns it to the LinkColor field.
func (o *CreateOrganizationRequest) SetLinkColor(v string) {
	o.LinkColor = &v
}

// GetBackgroundColorDark returns the BackgroundColorDark field value if set, zero value otherwise.
func (o *CreateOrganizationRequest) GetBackgroundColorDark() string {
	if o == nil || IsNil(o.BackgroundColorDark) {
		var ret string
		return ret
	}
	return *o.BackgroundColorDark
}

// GetBackgroundColorDarkOk returns a tuple with the BackgroundColorDark field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrganizationRequest) GetBackgroundColorDarkOk() (*string, bool) {
	if o == nil || IsNil(o.BackgroundColorDark) {
		return nil, false
	}
	return o.BackgroundColorDark, true
}

// HasBackgroundColorDark returns a boolean if a field has been set.
func (o *CreateOrganizationRequest) HasBackgroundColorDark() bool {
	if o != nil && !IsNil(o.BackgroundColorDark) {
		return true
	}

	return false
}

// SetBackgroundColorDark gets a reference to the given string and assigns it to the BackgroundColorDark field.
func (o *CreateOrganizationRequest) SetBackgroundColorDark(v string) {
	o.BackgroundColorDark = &v
}

// GetButtonColorDark returns the ButtonColorDark field value if set, zero value otherwise.
func (o *CreateOrganizationRequest) GetButtonColorDark() string {
	if o == nil || IsNil(o.ButtonColorDark) {
		var ret string
		return ret
	}
	return *o.ButtonColorDark
}

// GetButtonColorDarkOk returns a tuple with the ButtonColorDark field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrganizationRequest) GetButtonColorDarkOk() (*string, bool) {
	if o == nil || IsNil(o.ButtonColorDark) {
		return nil, false
	}
	return o.ButtonColorDark, true
}

// HasButtonColorDark returns a boolean if a field has been set.
func (o *CreateOrganizationRequest) HasButtonColorDark() bool {
	if o != nil && !IsNil(o.ButtonColorDark) {
		return true
	}

	return false
}

// SetButtonColorDark gets a reference to the given string and assigns it to the ButtonColorDark field.
func (o *CreateOrganizationRequest) SetButtonColorDark(v string) {
	o.ButtonColorDark = &v
}

// GetButtonTextColorDark returns the ButtonTextColorDark field value if set, zero value otherwise.
func (o *CreateOrganizationRequest) GetButtonTextColorDark() string {
	if o == nil || IsNil(o.ButtonTextColorDark) {
		var ret string
		return ret
	}
	return *o.ButtonTextColorDark
}

// GetButtonTextColorDarkOk returns a tuple with the ButtonTextColorDark field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrganizationRequest) GetButtonTextColorDarkOk() (*string, bool) {
	if o == nil || IsNil(o.ButtonTextColorDark) {
		return nil, false
	}
	return o.ButtonTextColorDark, true
}

// HasButtonTextColorDark returns a boolean if a field has been set.
func (o *CreateOrganizationRequest) HasButtonTextColorDark() bool {
	if o != nil && !IsNil(o.ButtonTextColorDark) {
		return true
	}

	return false
}

// SetButtonTextColorDark gets a reference to the given string and assigns it to the ButtonTextColorDark field.
func (o *CreateOrganizationRequest) SetButtonTextColorDark(v string) {
	o.ButtonTextColorDark = &v
}

// GetLinkColorDark returns the LinkColorDark field value if set, zero value otherwise.
func (o *CreateOrganizationRequest) GetLinkColorDark() string {
	if o == nil || IsNil(o.LinkColorDark) {
		var ret string
		return ret
	}
	return *o.LinkColorDark
}

// GetLinkColorDarkOk returns a tuple with the LinkColorDark field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrganizationRequest) GetLinkColorDarkOk() (*string, bool) {
	if o == nil || IsNil(o.LinkColorDark) {
		return nil, false
	}
	return o.LinkColorDark, true
}

// HasLinkColorDark returns a boolean if a field has been set.
func (o *CreateOrganizationRequest) HasLinkColorDark() bool {
	if o != nil && !IsNil(o.LinkColorDark) {
		return true
	}

	return false
}

// SetLinkColorDark gets a reference to the given string and assigns it to the LinkColorDark field.
func (o *CreateOrganizationRequest) SetLinkColorDark(v string) {
	o.LinkColorDark = &v
}

// GetThemeCode returns the ThemeCode field value if set, zero value otherwise.
func (o *CreateOrganizationRequest) GetThemeCode() string {
	if o == nil || IsNil(o.ThemeCode) {
		var ret string
		return ret
	}
	return *o.ThemeCode
}

// GetThemeCodeOk returns a tuple with the ThemeCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrganizationRequest) GetThemeCodeOk() (*string, bool) {
	if o == nil || IsNil(o.ThemeCode) {
		return nil, false
	}
	return o.ThemeCode, true
}

// HasThemeCode returns a boolean if a field has been set.
func (o *CreateOrganizationRequest) HasThemeCode() bool {
	if o != nil && !IsNil(o.ThemeCode) {
		return true
	}

	return false
}

// SetThemeCode gets a reference to the given string and assigns it to the ThemeCode field.
func (o *CreateOrganizationRequest) SetThemeCode(v string) {
	o.ThemeCode = &v
}

// GetHandle returns the Handle field value if set, zero value otherwise.
func (o *CreateOrganizationRequest) GetHandle() string {
	if o == nil || IsNil(o.Handle) {
		var ret string
		return ret
	}
	return *o.Handle
}

// GetHandleOk returns a tuple with the Handle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrganizationRequest) GetHandleOk() (*string, bool) {
	if o == nil || IsNil(o.Handle) {
		return nil, false
	}
	return o.Handle, true
}

// HasHandle returns a boolean if a field has been set.
func (o *CreateOrganizationRequest) HasHandle() bool {
	if o != nil && !IsNil(o.Handle) {
		return true
	}

	return false
}

// SetHandle gets a reference to the given string and assigns it to the Handle field.
func (o *CreateOrganizationRequest) SetHandle(v string) {
	o.Handle = &v
}

// GetIsAllowRegistrations returns the IsAllowRegistrations field value if set, zero value otherwise.
func (o *CreateOrganizationRequest) GetIsAllowRegistrations() bool {
	if o == nil || IsNil(o.IsAllowRegistrations) {
		var ret bool
		return ret
	}
	return *o.IsAllowRegistrations
}

// GetIsAllowRegistrationsOk returns a tuple with the IsAllowRegistrations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrganizationRequest) GetIsAllowRegistrationsOk() (*bool, bool) {
	if o == nil || IsNil(o.IsAllowRegistrations) {
		return nil, false
	}
	return o.IsAllowRegistrations, true
}

// HasIsAllowRegistrations returns a boolean if a field has been set.
func (o *CreateOrganizationRequest) HasIsAllowRegistrations() bool {
	if o != nil && !IsNil(o.IsAllowRegistrations) {
		return true
	}

	return false
}

// SetIsAllowRegistrations gets a reference to the given bool and assigns it to the IsAllowRegistrations field.
func (o *CreateOrganizationRequest) SetIsAllowRegistrations(v bool) {
	o.IsAllowRegistrations = &v
}

// GetSenderName returns the SenderName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateOrganizationRequest) GetSenderName() string {
	if o == nil || IsNil(o.SenderName.Get()) {
		var ret string
		return ret
	}
	return *o.SenderName.Get()
}

// GetSenderNameOk returns a tuple with the SenderName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateOrganizationRequest) GetSenderNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SenderName.Get(), o.SenderName.IsSet()
}

// HasSenderName returns a boolean if a field has been set.
func (o *CreateOrganizationRequest) HasSenderName() bool {
	if o != nil && o.SenderName.IsSet() {
		return true
	}

	return false
}

// SetSenderName gets a reference to the given NullableString and assigns it to the SenderName field.
func (o *CreateOrganizationRequest) SetSenderName(v string) {
	o.SenderName.Set(&v)
}

// SetSenderNameNil sets the value for SenderName to be an explicit nil
func (o *CreateOrganizationRequest) SetSenderNameNil() {
	o.SenderName.Set(nil)
}

// UnsetSenderName ensures that no value is present for SenderName, not even an explicit nil
func (o *CreateOrganizationRequest) UnsetSenderName() {
	o.SenderName.Unset()
}

// GetSenderEmail returns the SenderEmail field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateOrganizationRequest) GetSenderEmail() string {
	if o == nil || IsNil(o.SenderEmail.Get()) {
		var ret string
		return ret
	}
	return *o.SenderEmail.Get()
}

// GetSenderEmailOk returns a tuple with the SenderEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateOrganizationRequest) GetSenderEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SenderEmail.Get(), o.SenderEmail.IsSet()
}

// HasSenderEmail returns a boolean if a field has been set.
func (o *CreateOrganizationRequest) HasSenderEmail() bool {
	if o != nil && o.SenderEmail.IsSet() {
		return true
	}

	return false
}

// SetSenderEmail gets a reference to the given NullableString and assigns it to the SenderEmail field.
func (o *CreateOrganizationRequest) SetSenderEmail(v string) {
	o.SenderEmail.Set(&v)
}

// SetSenderEmailNil sets the value for SenderEmail to be an explicit nil
func (o *CreateOrganizationRequest) SetSenderEmailNil() {
	o.SenderEmail.Set(nil)
}

// UnsetSenderEmail ensures that no value is present for SenderEmail, not even an explicit nil
func (o *CreateOrganizationRequest) UnsetSenderEmail() {
	o.SenderEmail.Unset()
}

// GetIsCreateBillingCustomer returns the IsCreateBillingCustomer field value if set, zero value otherwise.
func (o *CreateOrganizationRequest) GetIsCreateBillingCustomer() bool {
	if o == nil || IsNil(o.IsCreateBillingCustomer) {
		var ret bool
		return ret
	}
	return *o.IsCreateBillingCustomer
}

// GetIsCreateBillingCustomerOk returns a tuple with the IsCreateBillingCustomer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrganizationRequest) GetIsCreateBillingCustomerOk() (*bool, bool) {
	if o == nil || IsNil(o.IsCreateBillingCustomer) {
		return nil, false
	}
	return o.IsCreateBillingCustomer, true
}

// HasIsCreateBillingCustomer returns a boolean if a field has been set.
func (o *CreateOrganizationRequest) HasIsCreateBillingCustomer() bool {
	if o != nil && !IsNil(o.IsCreateBillingCustomer) {
		return true
	}

	return false
}

// SetIsCreateBillingCustomer gets a reference to the given bool and assigns it to the IsCreateBillingCustomer field.
func (o *CreateOrganizationRequest) SetIsCreateBillingCustomer(v bool) {
	o.IsCreateBillingCustomer = &v
}

// GetBillingEmail returns the BillingEmail field value if set, zero value otherwise.
func (o *CreateOrganizationRequest) GetBillingEmail() string {
	if o == nil || IsNil(o.BillingEmail) {
		var ret string
		return ret
	}
	return *o.BillingEmail
}

// GetBillingEmailOk returns a tuple with the BillingEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrganizationRequest) GetBillingEmailOk() (*string, bool) {
	if o == nil || IsNil(o.BillingEmail) {
		return nil, false
	}
	return o.BillingEmail, true
}

// HasBillingEmail returns a boolean if a field has been set.
func (o *CreateOrganizationRequest) HasBillingEmail() bool {
	if o != nil && !IsNil(o.BillingEmail) {
		return true
	}

	return false
}

// SetBillingEmail gets a reference to the given string and assigns it to the BillingEmail field.
func (o *CreateOrganizationRequest) SetBillingEmail(v string) {
	o.BillingEmail = &v
}

// GetBillingPlanCode returns the BillingPlanCode field value if set, zero value otherwise.
func (o *CreateOrganizationRequest) GetBillingPlanCode() string {
	if o == nil || IsNil(o.BillingPlanCode) {
		var ret string
		return ret
	}
	return *o.BillingPlanCode
}

// GetBillingPlanCodeOk returns a tuple with the BillingPlanCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrganizationRequest) GetBillingPlanCodeOk() (*string, bool) {
	if o == nil || IsNil(o.BillingPlanCode) {
		return nil, false
	}
	return o.BillingPlanCode, true
}

// HasBillingPlanCode returns a boolean if a field has been set.
func (o *CreateOrganizationRequest) HasBillingPlanCode() bool {
	if o != nil && !IsNil(o.BillingPlanCode) {
		return true
	}

	return false
}

// SetBillingPlanCode gets a reference to the given string and assigns it to the BillingPlanCode field.
func (o *CreateOrganizationRequest) SetBillingPlanCode(v string) {
	o.BillingPlanCode = &v
}

func (o CreateOrganizationRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateOrganizationRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	if !IsNil(o.FeatureFlags) {
		toSerialize["feature_flags"] = o.FeatureFlags
	}
	if !IsNil(o.ExternalId) {
		toSerialize["external_id"] = o.ExternalId
	}
	if !IsNil(o.BackgroundColor) {
		toSerialize["background_color"] = o.BackgroundColor
	}
	if !IsNil(o.ButtonColor) {
		toSerialize["button_color"] = o.ButtonColor
	}
	if !IsNil(o.ButtonTextColor) {
		toSerialize["button_text_color"] = o.ButtonTextColor
	}
	if !IsNil(o.LinkColor) {
		toSerialize["link_color"] = o.LinkColor
	}
	if !IsNil(o.BackgroundColorDark) {
		toSerialize["background_color_dark"] = o.BackgroundColorDark
	}
	if !IsNil(o.ButtonColorDark) {
		toSerialize["button_color_dark"] = o.ButtonColorDark
	}
	if !IsNil(o.ButtonTextColorDark) {
		toSerialize["button_text_color_dark"] = o.ButtonTextColorDark
	}
	if !IsNil(o.LinkColorDark) {
		toSerialize["link_color_dark"] = o.LinkColorDark
	}
	if !IsNil(o.ThemeCode) {
		toSerialize["theme_code"] = o.ThemeCode
	}
	if !IsNil(o.Handle) {
		toSerialize["handle"] = o.Handle
	}
	if !IsNil(o.IsAllowRegistrations) {
		toSerialize["is_allow_registrations"] = o.IsAllowRegistrations
	}
	if o.SenderName.IsSet() {
		toSerialize["sender_name"] = o.SenderName.Get()
	}
	if o.SenderEmail.IsSet() {
		toSerialize["sender_email"] = o.SenderEmail.Get()
	}
	if !IsNil(o.IsCreateBillingCustomer) {
		toSerialize["is_create_billing_customer"] = o.IsCreateBillingCustomer
	}
	if !IsNil(o.BillingEmail) {
		toSerialize["billing_email"] = o.BillingEmail
	}
	if !IsNil(o.BillingPlanCode) {
		toSerialize["billing_plan_code"] = o.BillingPlanCode
	}
	return toSerialize, nil
}

func (o *CreateOrganizationRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateOrganizationRequest := _CreateOrganizationRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateOrganizationRequest)

	if err != nil {
		return err
	}

	*o = CreateOrganizationRequest(varCreateOrganizationRequest)

	return err
}

type NullableCreateOrganizationRequest struct {
	value *CreateOrganizationRequest
	isSet bool
}

func (v NullableCreateOrganizationRequest) Get() *CreateOrganizationRequest {
	return v.value
}

func (v *NullableCreateOrganizationRequest) Set(val *CreateOrganizationRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateOrganizationRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateOrganizationRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateOrganizationRequest(val *CreateOrganizationRequest) *NullableCreateOrganizationRequest {
	return &NullableCreateOrganizationRequest{value: val, isSet: true}
}

func (v NullableCreateOrganizationRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateOrganizationRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
