/*
Kinde Management API

 Provides endpoints to manage your Kinde Businesses.  ## Intro  ## How to use  1. [Set up and authorize a machine-to-machine (M2M) application](https://docs.kinde.com/developer-tools/kinde-api/connect-to-kinde-api/).  2. [Generate a test access token](https://docs.kinde.com/developer-tools/kinde-api/access-token-for-api/)  3. Test request any endpoint using the test token

API version: 1
Contact: support@kinde.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the CreateBillingAgreementRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateBillingAgreementRequest{}

// CreateBillingAgreementRequest struct for CreateBillingAgreementRequest
type CreateBillingAgreementRequest struct {
	// The ID of the billing customer to create a new agreement for
	CustomerId string `json:"customer_id"`
	// The code of the billing plan the new agreement will be based on
	PlanCode string `json:"plan_code"`
	// Generate a final invoice for any un-invoiced metered usage.
	IsInvoiceNow *bool `json:"is_invoice_now,omitempty"`
	// Generate a proration invoice item that credits remaining unused features.
	IsProrate *bool `json:"is_prorate,omitempty"`
}

type _CreateBillingAgreementRequest CreateBillingAgreementRequest

// NewCreateBillingAgreementRequest instantiates a new CreateBillingAgreementRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateBillingAgreementRequest(customerId string, planCode string) *CreateBillingAgreementRequest {
	this := CreateBillingAgreementRequest{}
	this.CustomerId = customerId
	this.PlanCode = planCode
	return &this
}

// NewCreateBillingAgreementRequestWithDefaults instantiates a new CreateBillingAgreementRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateBillingAgreementRequestWithDefaults() *CreateBillingAgreementRequest {
	this := CreateBillingAgreementRequest{}
	return &this
}

// GetCustomerId returns the CustomerId field value
func (o *CreateBillingAgreementRequest) GetCustomerId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CustomerId
}

// GetCustomerIdOk returns a tuple with the CustomerId field value
// and a boolean to check if the value has been set.
func (o *CreateBillingAgreementRequest) GetCustomerIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CustomerId, true
}

// SetCustomerId sets field value
func (o *CreateBillingAgreementRequest) SetCustomerId(v string) {
	o.CustomerId = v
}

// GetPlanCode returns the PlanCode field value
func (o *CreateBillingAgreementRequest) GetPlanCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PlanCode
}

// GetPlanCodeOk returns a tuple with the PlanCode field value
// and a boolean to check if the value has been set.
func (o *CreateBillingAgreementRequest) GetPlanCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PlanCode, true
}

// SetPlanCode sets field value
func (o *CreateBillingAgreementRequest) SetPlanCode(v string) {
	o.PlanCode = v
}

// GetIsInvoiceNow returns the IsInvoiceNow field value if set, zero value otherwise.
func (o *CreateBillingAgreementRequest) GetIsInvoiceNow() bool {
	if o == nil || IsNil(o.IsInvoiceNow) {
		var ret bool
		return ret
	}
	return *o.IsInvoiceNow
}

// GetIsInvoiceNowOk returns a tuple with the IsInvoiceNow field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateBillingAgreementRequest) GetIsInvoiceNowOk() (*bool, bool) {
	if o == nil || IsNil(o.IsInvoiceNow) {
		return nil, false
	}
	return o.IsInvoiceNow, true
}

// HasIsInvoiceNow returns a boolean if a field has been set.
func (o *CreateBillingAgreementRequest) HasIsInvoiceNow() bool {
	if o != nil && !IsNil(o.IsInvoiceNow) {
		return true
	}

	return false
}

// SetIsInvoiceNow gets a reference to the given bool and assigns it to the IsInvoiceNow field.
func (o *CreateBillingAgreementRequest) SetIsInvoiceNow(v bool) {
	o.IsInvoiceNow = &v
}

// GetIsProrate returns the IsProrate field value if set, zero value otherwise.
func (o *CreateBillingAgreementRequest) GetIsProrate() bool {
	if o == nil || IsNil(o.IsProrate) {
		var ret bool
		return ret
	}
	return *o.IsProrate
}

// GetIsProrateOk returns a tuple with the IsProrate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateBillingAgreementRequest) GetIsProrateOk() (*bool, bool) {
	if o == nil || IsNil(o.IsProrate) {
		return nil, false
	}
	return o.IsProrate, true
}

// HasIsProrate returns a boolean if a field has been set.
func (o *CreateBillingAgreementRequest) HasIsProrate() bool {
	if o != nil && !IsNil(o.IsProrate) {
		return true
	}

	return false
}

// SetIsProrate gets a reference to the given bool and assigns it to the IsProrate field.
func (o *CreateBillingAgreementRequest) SetIsProrate(v bool) {
	o.IsProrate = &v
}

func (o CreateBillingAgreementRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateBillingAgreementRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["customer_id"] = o.CustomerId
	toSerialize["plan_code"] = o.PlanCode
	if !IsNil(o.IsInvoiceNow) {
		toSerialize["is_invoice_now"] = o.IsInvoiceNow
	}
	if !IsNil(o.IsProrate) {
		toSerialize["is_prorate"] = o.IsProrate
	}
	return toSerialize, nil
}

func (o *CreateBillingAgreementRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"customer_id",
		"plan_code",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateBillingAgreementRequest := _CreateBillingAgreementRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateBillingAgreementRequest)

	if err != nil {
		return err
	}

	*o = CreateBillingAgreementRequest(varCreateBillingAgreementRequest)

	return err
}

type NullableCreateBillingAgreementRequest struct {
	value *CreateBillingAgreementRequest
	isSet bool
}

func (v NullableCreateBillingAgreementRequest) Get() *CreateBillingAgreementRequest {
	return v.value
}

func (v *NullableCreateBillingAgreementRequest) Set(val *CreateBillingAgreementRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateBillingAgreementRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateBillingAgreementRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateBillingAgreementRequest(val *CreateBillingAgreementRequest) *NullableCreateBillingAgreementRequest {
	return &NullableCreateBillingAgreementRequest{value: val, isSet: true}
}

func (v NullableCreateBillingAgreementRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateBillingAgreementRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
