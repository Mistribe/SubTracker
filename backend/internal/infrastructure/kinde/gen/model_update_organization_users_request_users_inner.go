/*
Kinde Management API

 Provides endpoints to manage your Kinde Businesses.  ## Intro  ## How to use  1. [Set up and authorize a machine-to-machine (M2M) application](https://docs.kinde.com/developer-tools/kinde-api/connect-to-kinde-api/).  2. [Generate a test access token](https://docs.kinde.com/developer-tools/kinde-api/access-token-for-api/)  3. Test request any endpoint using the test token

API version: 1
Contact: support@kinde.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the UpdateOrganizationUsersRequestUsersInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateOrganizationUsersRequestUsersInner{}

// UpdateOrganizationUsersRequestUsersInner struct for UpdateOrganizationUsersRequestUsersInner
type UpdateOrganizationUsersRequestUsersInner struct {
	// The users id.
	Id *string `json:"id,omitempty"`
	// Optional operation, set to 'delete' to remove the user from the organization.
	Operation *string `json:"operation,omitempty"`
	// Role keys to assign to the user.
	Roles []string `json:"roles,omitempty"`
	// Permission keys to assign to the user.
	Permissions []string `json:"permissions,omitempty"`
}

// NewUpdateOrganizationUsersRequestUsersInner instantiates a new UpdateOrganizationUsersRequestUsersInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateOrganizationUsersRequestUsersInner() *UpdateOrganizationUsersRequestUsersInner {
	this := UpdateOrganizationUsersRequestUsersInner{}
	return &this
}

// NewUpdateOrganizationUsersRequestUsersInnerWithDefaults instantiates a new UpdateOrganizationUsersRequestUsersInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateOrganizationUsersRequestUsersInnerWithDefaults() *UpdateOrganizationUsersRequestUsersInner {
	this := UpdateOrganizationUsersRequestUsersInner{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *UpdateOrganizationUsersRequestUsersInner) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateOrganizationUsersRequestUsersInner) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *UpdateOrganizationUsersRequestUsersInner) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *UpdateOrganizationUsersRequestUsersInner) SetId(v string) {
	o.Id = &v
}

// GetOperation returns the Operation field value if set, zero value otherwise.
func (o *UpdateOrganizationUsersRequestUsersInner) GetOperation() string {
	if o == nil || IsNil(o.Operation) {
		var ret string
		return ret
	}
	return *o.Operation
}

// GetOperationOk returns a tuple with the Operation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateOrganizationUsersRequestUsersInner) GetOperationOk() (*string, bool) {
	if o == nil || IsNil(o.Operation) {
		return nil, false
	}
	return o.Operation, true
}

// HasOperation returns a boolean if a field has been set.
func (o *UpdateOrganizationUsersRequestUsersInner) HasOperation() bool {
	if o != nil && !IsNil(o.Operation) {
		return true
	}

	return false
}

// SetOperation gets a reference to the given string and assigns it to the Operation field.
func (o *UpdateOrganizationUsersRequestUsersInner) SetOperation(v string) {
	o.Operation = &v
}

// GetRoles returns the Roles field value if set, zero value otherwise.
func (o *UpdateOrganizationUsersRequestUsersInner) GetRoles() []string {
	if o == nil || IsNil(o.Roles) {
		var ret []string
		return ret
	}
	return o.Roles
}

// GetRolesOk returns a tuple with the Roles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateOrganizationUsersRequestUsersInner) GetRolesOk() ([]string, bool) {
	if o == nil || IsNil(o.Roles) {
		return nil, false
	}
	return o.Roles, true
}

// HasRoles returns a boolean if a field has been set.
func (o *UpdateOrganizationUsersRequestUsersInner) HasRoles() bool {
	if o != nil && !IsNil(o.Roles) {
		return true
	}

	return false
}

// SetRoles gets a reference to the given []string and assigns it to the Roles field.
func (o *UpdateOrganizationUsersRequestUsersInner) SetRoles(v []string) {
	o.Roles = v
}

// GetPermissions returns the Permissions field value if set, zero value otherwise.
func (o *UpdateOrganizationUsersRequestUsersInner) GetPermissions() []string {
	if o == nil || IsNil(o.Permissions) {
		var ret []string
		return ret
	}
	return o.Permissions
}

// GetPermissionsOk returns a tuple with the Permissions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateOrganizationUsersRequestUsersInner) GetPermissionsOk() ([]string, bool) {
	if o == nil || IsNil(o.Permissions) {
		return nil, false
	}
	return o.Permissions, true
}

// HasPermissions returns a boolean if a field has been set.
func (o *UpdateOrganizationUsersRequestUsersInner) HasPermissions() bool {
	if o != nil && !IsNil(o.Permissions) {
		return true
	}

	return false
}

// SetPermissions gets a reference to the given []string and assigns it to the Permissions field.
func (o *UpdateOrganizationUsersRequestUsersInner) SetPermissions(v []string) {
	o.Permissions = v
}

func (o UpdateOrganizationUsersRequestUsersInner) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateOrganizationUsersRequestUsersInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Operation) {
		toSerialize["operation"] = o.Operation
	}
	if !IsNil(o.Roles) {
		toSerialize["roles"] = o.Roles
	}
	if !IsNil(o.Permissions) {
		toSerialize["permissions"] = o.Permissions
	}
	return toSerialize, nil
}

type NullableUpdateOrganizationUsersRequestUsersInner struct {
	value *UpdateOrganizationUsersRequestUsersInner
	isSet bool
}

func (v NullableUpdateOrganizationUsersRequestUsersInner) Get() *UpdateOrganizationUsersRequestUsersInner {
	return v.value
}

func (v *NullableUpdateOrganizationUsersRequestUsersInner) Set(val *UpdateOrganizationUsersRequestUsersInner) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateOrganizationUsersRequestUsersInner) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateOrganizationUsersRequestUsersInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateOrganizationUsersRequestUsersInner(val *UpdateOrganizationUsersRequestUsersInner) *NullableUpdateOrganizationUsersRequestUsersInner {
	return &NullableUpdateOrganizationUsersRequestUsersInner{value: val, isSet: true}
}

func (v NullableUpdateOrganizationUsersRequestUsersInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateOrganizationUsersRequestUsersInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
