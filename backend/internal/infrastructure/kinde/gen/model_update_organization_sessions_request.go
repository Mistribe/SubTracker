/*
Kinde Management API

 Provides endpoints to manage your Kinde Businesses.  ## Intro  ## How to use  1. [Set up and authorize a machine-to-machine (M2M) application](https://docs.kinde.com/developer-tools/kinde-api/connect-to-kinde-api/).  2. [Generate a test access token](https://docs.kinde.com/developer-tools/kinde-api/access-token-for-api/)  3. Test request any endpoint using the test token

API version: 1
Contact: support@kinde.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the UpdateOrganizationSessionsRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateOrganizationSessionsRequest{}

// UpdateOrganizationSessionsRequest struct for UpdateOrganizationSessionsRequest
type UpdateOrganizationSessionsRequest struct {
	// Whether to use the organization's SSO session policy override.
	IsUseOrgSsoSessionPolicy *bool `json:"is_use_org_sso_session_policy,omitempty"`
	// Determines if the session should be persistent or not.
	SsoSessionPersistenceMode *string `json:"sso_session_persistence_mode,omitempty"`
	// Whether to apply the organization's authenticated session lifetime override.
	IsUseOrgAuthenticatedSessionLifetime *bool `json:"is_use_org_authenticated_session_lifetime,omitempty"`
	// Authenticated session lifetime in seconds.
	AuthenticatedSessionLifetime *int32 `json:"authenticated_session_lifetime,omitempty"`
}

// NewUpdateOrganizationSessionsRequest instantiates a new UpdateOrganizationSessionsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateOrganizationSessionsRequest() *UpdateOrganizationSessionsRequest {
	this := UpdateOrganizationSessionsRequest{}
	return &this
}

// NewUpdateOrganizationSessionsRequestWithDefaults instantiates a new UpdateOrganizationSessionsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateOrganizationSessionsRequestWithDefaults() *UpdateOrganizationSessionsRequest {
	this := UpdateOrganizationSessionsRequest{}
	return &this
}

// GetIsUseOrgSsoSessionPolicy returns the IsUseOrgSsoSessionPolicy field value if set, zero value otherwise.
func (o *UpdateOrganizationSessionsRequest) GetIsUseOrgSsoSessionPolicy() bool {
	if o == nil || IsNil(o.IsUseOrgSsoSessionPolicy) {
		var ret bool
		return ret
	}
	return *o.IsUseOrgSsoSessionPolicy
}

// GetIsUseOrgSsoSessionPolicyOk returns a tuple with the IsUseOrgSsoSessionPolicy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateOrganizationSessionsRequest) GetIsUseOrgSsoSessionPolicyOk() (*bool, bool) {
	if o == nil || IsNil(o.IsUseOrgSsoSessionPolicy) {
		return nil, false
	}
	return o.IsUseOrgSsoSessionPolicy, true
}

// HasIsUseOrgSsoSessionPolicy returns a boolean if a field has been set.
func (o *UpdateOrganizationSessionsRequest) HasIsUseOrgSsoSessionPolicy() bool {
	if o != nil && !IsNil(o.IsUseOrgSsoSessionPolicy) {
		return true
	}

	return false
}

// SetIsUseOrgSsoSessionPolicy gets a reference to the given bool and assigns it to the IsUseOrgSsoSessionPolicy field.
func (o *UpdateOrganizationSessionsRequest) SetIsUseOrgSsoSessionPolicy(v bool) {
	o.IsUseOrgSsoSessionPolicy = &v
}

// GetSsoSessionPersistenceMode returns the SsoSessionPersistenceMode field value if set, zero value otherwise.
func (o *UpdateOrganizationSessionsRequest) GetSsoSessionPersistenceMode() string {
	if o == nil || IsNil(o.SsoSessionPersistenceMode) {
		var ret string
		return ret
	}
	return *o.SsoSessionPersistenceMode
}

// GetSsoSessionPersistenceModeOk returns a tuple with the SsoSessionPersistenceMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateOrganizationSessionsRequest) GetSsoSessionPersistenceModeOk() (*string, bool) {
	if o == nil || IsNil(o.SsoSessionPersistenceMode) {
		return nil, false
	}
	return o.SsoSessionPersistenceMode, true
}

// HasSsoSessionPersistenceMode returns a boolean if a field has been set.
func (o *UpdateOrganizationSessionsRequest) HasSsoSessionPersistenceMode() bool {
	if o != nil && !IsNil(o.SsoSessionPersistenceMode) {
		return true
	}

	return false
}

// SetSsoSessionPersistenceMode gets a reference to the given string and assigns it to the SsoSessionPersistenceMode field.
func (o *UpdateOrganizationSessionsRequest) SetSsoSessionPersistenceMode(v string) {
	o.SsoSessionPersistenceMode = &v
}

// GetIsUseOrgAuthenticatedSessionLifetime returns the IsUseOrgAuthenticatedSessionLifetime field value if set, zero value otherwise.
func (o *UpdateOrganizationSessionsRequest) GetIsUseOrgAuthenticatedSessionLifetime() bool {
	if o == nil || IsNil(o.IsUseOrgAuthenticatedSessionLifetime) {
		var ret bool
		return ret
	}
	return *o.IsUseOrgAuthenticatedSessionLifetime
}

// GetIsUseOrgAuthenticatedSessionLifetimeOk returns a tuple with the IsUseOrgAuthenticatedSessionLifetime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateOrganizationSessionsRequest) GetIsUseOrgAuthenticatedSessionLifetimeOk() (*bool, bool) {
	if o == nil || IsNil(o.IsUseOrgAuthenticatedSessionLifetime) {
		return nil, false
	}
	return o.IsUseOrgAuthenticatedSessionLifetime, true
}

// HasIsUseOrgAuthenticatedSessionLifetime returns a boolean if a field has been set.
func (o *UpdateOrganizationSessionsRequest) HasIsUseOrgAuthenticatedSessionLifetime() bool {
	if o != nil && !IsNil(o.IsUseOrgAuthenticatedSessionLifetime) {
		return true
	}

	return false
}

// SetIsUseOrgAuthenticatedSessionLifetime gets a reference to the given bool and assigns it to the IsUseOrgAuthenticatedSessionLifetime field.
func (o *UpdateOrganizationSessionsRequest) SetIsUseOrgAuthenticatedSessionLifetime(v bool) {
	o.IsUseOrgAuthenticatedSessionLifetime = &v
}

// GetAuthenticatedSessionLifetime returns the AuthenticatedSessionLifetime field value if set, zero value otherwise.
func (o *UpdateOrganizationSessionsRequest) GetAuthenticatedSessionLifetime() int32 {
	if o == nil || IsNil(o.AuthenticatedSessionLifetime) {
		var ret int32
		return ret
	}
	return *o.AuthenticatedSessionLifetime
}

// GetAuthenticatedSessionLifetimeOk returns a tuple with the AuthenticatedSessionLifetime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateOrganizationSessionsRequest) GetAuthenticatedSessionLifetimeOk() (*int32, bool) {
	if o == nil || IsNil(o.AuthenticatedSessionLifetime) {
		return nil, false
	}
	return o.AuthenticatedSessionLifetime, true
}

// HasAuthenticatedSessionLifetime returns a boolean if a field has been set.
func (o *UpdateOrganizationSessionsRequest) HasAuthenticatedSessionLifetime() bool {
	if o != nil && !IsNil(o.AuthenticatedSessionLifetime) {
		return true
	}

	return false
}

// SetAuthenticatedSessionLifetime gets a reference to the given int32 and assigns it to the AuthenticatedSessionLifetime field.
func (o *UpdateOrganizationSessionsRequest) SetAuthenticatedSessionLifetime(v int32) {
	o.AuthenticatedSessionLifetime = &v
}

func (o UpdateOrganizationSessionsRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateOrganizationSessionsRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.IsUseOrgSsoSessionPolicy) {
		toSerialize["is_use_org_sso_session_policy"] = o.IsUseOrgSsoSessionPolicy
	}
	if !IsNil(o.SsoSessionPersistenceMode) {
		toSerialize["sso_session_persistence_mode"] = o.SsoSessionPersistenceMode
	}
	if !IsNil(o.IsUseOrgAuthenticatedSessionLifetime) {
		toSerialize["is_use_org_authenticated_session_lifetime"] = o.IsUseOrgAuthenticatedSessionLifetime
	}
	if !IsNil(o.AuthenticatedSessionLifetime) {
		toSerialize["authenticated_session_lifetime"] = o.AuthenticatedSessionLifetime
	}
	return toSerialize, nil
}

type NullableUpdateOrganizationSessionsRequest struct {
	value *UpdateOrganizationSessionsRequest
	isSet bool
}

func (v NullableUpdateOrganizationSessionsRequest) Get() *UpdateOrganizationSessionsRequest {
	return v.value
}

func (v *NullableUpdateOrganizationSessionsRequest) Set(val *UpdateOrganizationSessionsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateOrganizationSessionsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateOrganizationSessionsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateOrganizationSessionsRequest(val *UpdateOrganizationSessionsRequest) *NullableUpdateOrganizationSessionsRequest {
	return &NullableUpdateOrganizationSessionsRequest{value: val, isSet: true}
}

func (v NullableUpdateOrganizationSessionsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateOrganizationSessionsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
