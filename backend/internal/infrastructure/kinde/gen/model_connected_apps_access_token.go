/*
Kinde Management API

 Provides endpoints to manage your Kinde Businesses.  ## Intro  ## How to use  1. [Set up and authorize a machine-to-machine (M2M) application](https://docs.kinde.com/developer-tools/kinde-api/connect-to-kinde-api/).  2. [Generate a test access token](https://docs.kinde.com/developer-tools/kinde-api/access-token-for-api/)  3. Test request any endpoint using the test token

API version: 1
Contact: support@kinde.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ConnectedAppsAccessToken type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ConnectedAppsAccessToken{}

// ConnectedAppsAccessToken struct for ConnectedAppsAccessToken
type ConnectedAppsAccessToken struct {
	// The access token to access a third-party provider.
	AccessToken *string `json:"access_token,omitempty"`
	// The date and time that the access token expires.
	AccessTokenExpiry *string `json:"access_token_expiry,omitempty"`
}

// NewConnectedAppsAccessToken instantiates a new ConnectedAppsAccessToken object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConnectedAppsAccessToken() *ConnectedAppsAccessToken {
	this := ConnectedAppsAccessToken{}
	return &this
}

// NewConnectedAppsAccessTokenWithDefaults instantiates a new ConnectedAppsAccessToken object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConnectedAppsAccessTokenWithDefaults() *ConnectedAppsAccessToken {
	this := ConnectedAppsAccessToken{}
	return &this
}

// GetAccessToken returns the AccessToken field value if set, zero value otherwise.
func (o *ConnectedAppsAccessToken) GetAccessToken() string {
	if o == nil || IsNil(o.AccessToken) {
		var ret string
		return ret
	}
	return *o.AccessToken
}

// GetAccessTokenOk returns a tuple with the AccessToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectedAppsAccessToken) GetAccessTokenOk() (*string, bool) {
	if o == nil || IsNil(o.AccessToken) {
		return nil, false
	}
	return o.AccessToken, true
}

// HasAccessToken returns a boolean if a field has been set.
func (o *ConnectedAppsAccessToken) HasAccessToken() bool {
	if o != nil && !IsNil(o.AccessToken) {
		return true
	}

	return false
}

// SetAccessToken gets a reference to the given string and assigns it to the AccessToken field.
func (o *ConnectedAppsAccessToken) SetAccessToken(v string) {
	o.AccessToken = &v
}

// GetAccessTokenExpiry returns the AccessTokenExpiry field value if set, zero value otherwise.
func (o *ConnectedAppsAccessToken) GetAccessTokenExpiry() string {
	if o == nil || IsNil(o.AccessTokenExpiry) {
		var ret string
		return ret
	}
	return *o.AccessTokenExpiry
}

// GetAccessTokenExpiryOk returns a tuple with the AccessTokenExpiry field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectedAppsAccessToken) GetAccessTokenExpiryOk() (*string, bool) {
	if o == nil || IsNil(o.AccessTokenExpiry) {
		return nil, false
	}
	return o.AccessTokenExpiry, true
}

// HasAccessTokenExpiry returns a boolean if a field has been set.
func (o *ConnectedAppsAccessToken) HasAccessTokenExpiry() bool {
	if o != nil && !IsNil(o.AccessTokenExpiry) {
		return true
	}

	return false
}

// SetAccessTokenExpiry gets a reference to the given string and assigns it to the AccessTokenExpiry field.
func (o *ConnectedAppsAccessToken) SetAccessTokenExpiry(v string) {
	o.AccessTokenExpiry = &v
}

func (o ConnectedAppsAccessToken) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ConnectedAppsAccessToken) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AccessToken) {
		toSerialize["access_token"] = o.AccessToken
	}
	if !IsNil(o.AccessTokenExpiry) {
		toSerialize["access_token_expiry"] = o.AccessTokenExpiry
	}
	return toSerialize, nil
}

type NullableConnectedAppsAccessToken struct {
	value *ConnectedAppsAccessToken
	isSet bool
}

func (v NullableConnectedAppsAccessToken) Get() *ConnectedAppsAccessToken {
	return v.value
}

func (v *NullableConnectedAppsAccessToken) Set(val *ConnectedAppsAccessToken) {
	v.value = val
	v.isSet = true
}

func (v NullableConnectedAppsAccessToken) IsSet() bool {
	return v.isSet
}

func (v *NullableConnectedAppsAccessToken) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConnectedAppsAccessToken(val *ConnectedAppsAccessToken) *NullableConnectedAppsAccessToken {
	return &NullableConnectedAppsAccessToken{value: val, isSet: true}
}

func (v NullableConnectedAppsAccessToken) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConnectedAppsAccessToken) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
