/*
Kinde Management API

 Provides endpoints to manage your Kinde Businesses.  ## Intro  ## How to use  1. [Set up and authorize a machine-to-machine (M2M) application](https://docs.kinde.com/developer-tools/kinde-api/connect-to-kinde-api/).  2. [Generate a test access token](https://docs.kinde.com/developer-tools/kinde-api/access-token-for-api/)  3. Test request any endpoint using the test token

API version: 1
Contact: support@kinde.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the GetRedirectCallbackUrlsResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetRedirectCallbackUrlsResponse{}

// GetRedirectCallbackUrlsResponse struct for GetRedirectCallbackUrlsResponse
type GetRedirectCallbackUrlsResponse struct {
	// An application's redirect callback URLs.
	RedirectUrls []RedirectCallbackUrls `json:"redirect_urls,omitempty"`
}

// NewGetRedirectCallbackUrlsResponse instantiates a new GetRedirectCallbackUrlsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetRedirectCallbackUrlsResponse() *GetRedirectCallbackUrlsResponse {
	this := GetRedirectCallbackUrlsResponse{}
	return &this
}

// NewGetRedirectCallbackUrlsResponseWithDefaults instantiates a new GetRedirectCallbackUrlsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetRedirectCallbackUrlsResponseWithDefaults() *GetRedirectCallbackUrlsResponse {
	this := GetRedirectCallbackUrlsResponse{}
	return &this
}

// GetRedirectUrls returns the RedirectUrls field value if set, zero value otherwise.
func (o *GetRedirectCallbackUrlsResponse) GetRedirectUrls() []RedirectCallbackUrls {
	if o == nil || IsNil(o.RedirectUrls) {
		var ret []RedirectCallbackUrls
		return ret
	}
	return o.RedirectUrls
}

// GetRedirectUrlsOk returns a tuple with the RedirectUrls field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetRedirectCallbackUrlsResponse) GetRedirectUrlsOk() ([]RedirectCallbackUrls, bool) {
	if o == nil || IsNil(o.RedirectUrls) {
		return nil, false
	}
	return o.RedirectUrls, true
}

// HasRedirectUrls returns a boolean if a field has been set.
func (o *GetRedirectCallbackUrlsResponse) HasRedirectUrls() bool {
	if o != nil && !IsNil(o.RedirectUrls) {
		return true
	}

	return false
}

// SetRedirectUrls gets a reference to the given []RedirectCallbackUrls and assigns it to the RedirectUrls field.
func (o *GetRedirectCallbackUrlsResponse) SetRedirectUrls(v []RedirectCallbackUrls) {
	o.RedirectUrls = v
}

func (o GetRedirectCallbackUrlsResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetRedirectCallbackUrlsResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.RedirectUrls) {
		toSerialize["redirect_urls"] = o.RedirectUrls
	}
	return toSerialize, nil
}

type NullableGetRedirectCallbackUrlsResponse struct {
	value *GetRedirectCallbackUrlsResponse
	isSet bool
}

func (v NullableGetRedirectCallbackUrlsResponse) Get() *GetRedirectCallbackUrlsResponse {
	return v.value
}

func (v *NullableGetRedirectCallbackUrlsResponse) Set(val *GetRedirectCallbackUrlsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetRedirectCallbackUrlsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetRedirectCallbackUrlsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetRedirectCallbackUrlsResponse(val *GetRedirectCallbackUrlsResponse) *NullableGetRedirectCallbackUrlsResponse {
	return &NullableGetRedirectCallbackUrlsResponse{value: val, isSet: true}
}

func (v NullableGetRedirectCallbackUrlsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetRedirectCallbackUrlsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
