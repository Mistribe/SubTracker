/*
Kinde Management API

 Provides endpoints to manage your Kinde Businesses.  ## Intro  ## How to use  1. [Set up and authorize a machine-to-machine (M2M) application](https://docs.kinde.com/developer-tools/kinde-api/connect-to-kinde-api/).  2. [Generate a test access token](https://docs.kinde.com/developer-tools/kinde-api/access-token-for-api/)  3. Test request any endpoint using the test token

API version: 1
Contact: support@kinde.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the GetBillingEntitlementsResponsePlansInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetBillingEntitlementsResponsePlansInner{}

// GetBillingEntitlementsResponsePlansInner struct for GetBillingEntitlementsResponsePlansInner
type GetBillingEntitlementsResponsePlansInner struct {
	// The plan code the billing customer is subscribed to
	Code         *string    `json:"code,omitempty"`
	SubscribedOn *time.Time `json:"subscribed_on,omitempty"`
}

// NewGetBillingEntitlementsResponsePlansInner instantiates a new GetBillingEntitlementsResponsePlansInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetBillingEntitlementsResponsePlansInner() *GetBillingEntitlementsResponsePlansInner {
	this := GetBillingEntitlementsResponsePlansInner{}
	return &this
}

// NewGetBillingEntitlementsResponsePlansInnerWithDefaults instantiates a new GetBillingEntitlementsResponsePlansInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetBillingEntitlementsResponsePlansInnerWithDefaults() *GetBillingEntitlementsResponsePlansInner {
	this := GetBillingEntitlementsResponsePlansInner{}
	return &this
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *GetBillingEntitlementsResponsePlansInner) GetCode() string {
	if o == nil || IsNil(o.Code) {
		var ret string
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetBillingEntitlementsResponsePlansInner) GetCodeOk() (*string, bool) {
	if o == nil || IsNil(o.Code) {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *GetBillingEntitlementsResponsePlansInner) HasCode() bool {
	if o != nil && !IsNil(o.Code) {
		return true
	}

	return false
}

// SetCode gets a reference to the given string and assigns it to the Code field.
func (o *GetBillingEntitlementsResponsePlansInner) SetCode(v string) {
	o.Code = &v
}

// GetSubscribedOn returns the SubscribedOn field value if set, zero value otherwise.
func (o *GetBillingEntitlementsResponsePlansInner) GetSubscribedOn() time.Time {
	if o == nil || IsNil(o.SubscribedOn) {
		var ret time.Time
		return ret
	}
	return *o.SubscribedOn
}

// GetSubscribedOnOk returns a tuple with the SubscribedOn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetBillingEntitlementsResponsePlansInner) GetSubscribedOnOk() (*time.Time, bool) {
	if o == nil || IsNil(o.SubscribedOn) {
		return nil, false
	}
	return o.SubscribedOn, true
}

// HasSubscribedOn returns a boolean if a field has been set.
func (o *GetBillingEntitlementsResponsePlansInner) HasSubscribedOn() bool {
	if o != nil && !IsNil(o.SubscribedOn) {
		return true
	}

	return false
}

// SetSubscribedOn gets a reference to the given time.Time and assigns it to the SubscribedOn field.
func (o *GetBillingEntitlementsResponsePlansInner) SetSubscribedOn(v time.Time) {
	o.SubscribedOn = &v
}

func (o GetBillingEntitlementsResponsePlansInner) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetBillingEntitlementsResponsePlansInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Code) {
		toSerialize["code"] = o.Code
	}
	if !IsNil(o.SubscribedOn) {
		toSerialize["subscribed_on"] = o.SubscribedOn
	}
	return toSerialize, nil
}

type NullableGetBillingEntitlementsResponsePlansInner struct {
	value *GetBillingEntitlementsResponsePlansInner
	isSet bool
}

func (v NullableGetBillingEntitlementsResponsePlansInner) Get() *GetBillingEntitlementsResponsePlansInner {
	return v.value
}

func (v *NullableGetBillingEntitlementsResponsePlansInner) Set(val *GetBillingEntitlementsResponsePlansInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGetBillingEntitlementsResponsePlansInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGetBillingEntitlementsResponsePlansInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetBillingEntitlementsResponsePlansInner(val *GetBillingEntitlementsResponsePlansInner) *NullableGetBillingEntitlementsResponsePlansInner {
	return &NullableGetBillingEntitlementsResponsePlansInner{value: val, isSet: true}
}

func (v NullableGetBillingEntitlementsResponsePlansInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetBillingEntitlementsResponsePlansInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
