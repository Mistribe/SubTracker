/*
Kinde Management API

 Provides endpoints to manage your Kinde Businesses.  ## Intro  ## How to use  1. [Set up and authorize a machine-to-machine (M2M) application](https://docs.kinde.com/developer-tools/kinde-api/connect-to-kinde-api/).  2. [Generate a test access token](https://docs.kinde.com/developer-tools/kinde-api/access-token-for-api/)  3. Test request any endpoint using the test token

API version: 1
Contact: support@kinde.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the OrganizationItemSchema type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OrganizationItemSchema{}

// OrganizationItemSchema struct for OrganizationItemSchema
type OrganizationItemSchema struct {
	// The unique identifier for the organization.
	Code *string `json:"code,omitempty"`
	// The organization's name.
	Name *string `json:"name,omitempty"`
	// A unique handle for the organization - can be used for dynamic callback urls.
	Handle NullableString `json:"handle,omitempty"`
	// Whether the organization is the default organization.
	IsDefault *bool `json:"is_default,omitempty"`
	// The organization's external identifier - commonly used when migrating from or mapping to other systems.
	ExternalId NullableString `json:"external_id,omitempty"`
	// If users become members of this organization when the org code is supplied during authentication.
	IsAutoMembershipEnabled *bool `json:"is_auto_membership_enabled,omitempty"`
}

// NewOrganizationItemSchema instantiates a new OrganizationItemSchema object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrganizationItemSchema() *OrganizationItemSchema {
	this := OrganizationItemSchema{}
	return &this
}

// NewOrganizationItemSchemaWithDefaults instantiates a new OrganizationItemSchema object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrganizationItemSchemaWithDefaults() *OrganizationItemSchema {
	this := OrganizationItemSchema{}
	return &this
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *OrganizationItemSchema) GetCode() string {
	if o == nil || IsNil(o.Code) {
		var ret string
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationItemSchema) GetCodeOk() (*string, bool) {
	if o == nil || IsNil(o.Code) {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *OrganizationItemSchema) HasCode() bool {
	if o != nil && !IsNil(o.Code) {
		return true
	}

	return false
}

// SetCode gets a reference to the given string and assigns it to the Code field.
func (o *OrganizationItemSchema) SetCode(v string) {
	o.Code = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *OrganizationItemSchema) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationItemSchema) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *OrganizationItemSchema) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *OrganizationItemSchema) SetName(v string) {
	o.Name = &v
}

// GetHandle returns the Handle field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OrganizationItemSchema) GetHandle() string {
	if o == nil || IsNil(o.Handle.Get()) {
		var ret string
		return ret
	}
	return *o.Handle.Get()
}

// GetHandleOk returns a tuple with the Handle field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OrganizationItemSchema) GetHandleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Handle.Get(), o.Handle.IsSet()
}

// HasHandle returns a boolean if a field has been set.
func (o *OrganizationItemSchema) HasHandle() bool {
	if o != nil && o.Handle.IsSet() {
		return true
	}

	return false
}

// SetHandle gets a reference to the given NullableString and assigns it to the Handle field.
func (o *OrganizationItemSchema) SetHandle(v string) {
	o.Handle.Set(&v)
}

// SetHandleNil sets the value for Handle to be an explicit nil
func (o *OrganizationItemSchema) SetHandleNil() {
	o.Handle.Set(nil)
}

// UnsetHandle ensures that no value is present for Handle, not even an explicit nil
func (o *OrganizationItemSchema) UnsetHandle() {
	o.Handle.Unset()
}

// GetIsDefault returns the IsDefault field value if set, zero value otherwise.
func (o *OrganizationItemSchema) GetIsDefault() bool {
	if o == nil || IsNil(o.IsDefault) {
		var ret bool
		return ret
	}
	return *o.IsDefault
}

// GetIsDefaultOk returns a tuple with the IsDefault field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationItemSchema) GetIsDefaultOk() (*bool, bool) {
	if o == nil || IsNil(o.IsDefault) {
		return nil, false
	}
	return o.IsDefault, true
}

// HasIsDefault returns a boolean if a field has been set.
func (o *OrganizationItemSchema) HasIsDefault() bool {
	if o != nil && !IsNil(o.IsDefault) {
		return true
	}

	return false
}

// SetIsDefault gets a reference to the given bool and assigns it to the IsDefault field.
func (o *OrganizationItemSchema) SetIsDefault(v bool) {
	o.IsDefault = &v
}

// GetExternalId returns the ExternalId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OrganizationItemSchema) GetExternalId() string {
	if o == nil || IsNil(o.ExternalId.Get()) {
		var ret string
		return ret
	}
	return *o.ExternalId.Get()
}

// GetExternalIdOk returns a tuple with the ExternalId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OrganizationItemSchema) GetExternalIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ExternalId.Get(), o.ExternalId.IsSet()
}

// HasExternalId returns a boolean if a field has been set.
func (o *OrganizationItemSchema) HasExternalId() bool {
	if o != nil && o.ExternalId.IsSet() {
		return true
	}

	return false
}

// SetExternalId gets a reference to the given NullableString and assigns it to the ExternalId field.
func (o *OrganizationItemSchema) SetExternalId(v string) {
	o.ExternalId.Set(&v)
}

// SetExternalIdNil sets the value for ExternalId to be an explicit nil
func (o *OrganizationItemSchema) SetExternalIdNil() {
	o.ExternalId.Set(nil)
}

// UnsetExternalId ensures that no value is present for ExternalId, not even an explicit nil
func (o *OrganizationItemSchema) UnsetExternalId() {
	o.ExternalId.Unset()
}

// GetIsAutoMembershipEnabled returns the IsAutoMembershipEnabled field value if set, zero value otherwise.
func (o *OrganizationItemSchema) GetIsAutoMembershipEnabled() bool {
	if o == nil || IsNil(o.IsAutoMembershipEnabled) {
		var ret bool
		return ret
	}
	return *o.IsAutoMembershipEnabled
}

// GetIsAutoMembershipEnabledOk returns a tuple with the IsAutoMembershipEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationItemSchema) GetIsAutoMembershipEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.IsAutoMembershipEnabled) {
		return nil, false
	}
	return o.IsAutoMembershipEnabled, true
}

// HasIsAutoMembershipEnabled returns a boolean if a field has been set.
func (o *OrganizationItemSchema) HasIsAutoMembershipEnabled() bool {
	if o != nil && !IsNil(o.IsAutoMembershipEnabled) {
		return true
	}

	return false
}

// SetIsAutoMembershipEnabled gets a reference to the given bool and assigns it to the IsAutoMembershipEnabled field.
func (o *OrganizationItemSchema) SetIsAutoMembershipEnabled(v bool) {
	o.IsAutoMembershipEnabled = &v
}

func (o OrganizationItemSchema) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OrganizationItemSchema) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Code) {
		toSerialize["code"] = o.Code
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if o.Handle.IsSet() {
		toSerialize["handle"] = o.Handle.Get()
	}
	if !IsNil(o.IsDefault) {
		toSerialize["is_default"] = o.IsDefault
	}
	if o.ExternalId.IsSet() {
		toSerialize["external_id"] = o.ExternalId.Get()
	}
	if !IsNil(o.IsAutoMembershipEnabled) {
		toSerialize["is_auto_membership_enabled"] = o.IsAutoMembershipEnabled
	}
	return toSerialize, nil
}

type NullableOrganizationItemSchema struct {
	value *OrganizationItemSchema
	isSet bool
}

func (v NullableOrganizationItemSchema) Get() *OrganizationItemSchema {
	return v.value
}

func (v *NullableOrganizationItemSchema) Set(val *OrganizationItemSchema) {
	v.value = val
	v.isSet = true
}

func (v NullableOrganizationItemSchema) IsSet() bool {
	return v.isSet
}

func (v *NullableOrganizationItemSchema) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrganizationItemSchema(val *OrganizationItemSchema) *NullableOrganizationItemSchema {
	return &NullableOrganizationItemSchema{value: val, isSet: true}
}

func (v NullableOrganizationItemSchema) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrganizationItemSchema) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
