/*
Kinde Management API

 Provides endpoints to manage your Kinde Businesses.  ## Intro  ## How to use  1. [Set up and authorize a machine-to-machine (M2M) application](https://docs.kinde.com/developer-tools/kinde-api/connect-to-kinde-api/).  2. [Generate a test access token](https://docs.kinde.com/developer-tools/kinde-api/access-token-for-api/)  3. Test request any endpoint using the test token

API version: 1
Contact: support@kinde.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CreateWebhookResponseWebhook type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateWebhookResponseWebhook{}

// CreateWebhookResponseWebhook struct for CreateWebhookResponseWebhook
type CreateWebhookResponseWebhook struct {
	Id       *string `json:"id,omitempty"`
	Endpoint *string `json:"endpoint,omitempty"`
}

// NewCreateWebhookResponseWebhook instantiates a new CreateWebhookResponseWebhook object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateWebhookResponseWebhook() *CreateWebhookResponseWebhook {
	this := CreateWebhookResponseWebhook{}
	return &this
}

// NewCreateWebhookResponseWebhookWithDefaults instantiates a new CreateWebhookResponseWebhook object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateWebhookResponseWebhookWithDefaults() *CreateWebhookResponseWebhook {
	this := CreateWebhookResponseWebhook{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *CreateWebhookResponseWebhook) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateWebhookResponseWebhook) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *CreateWebhookResponseWebhook) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *CreateWebhookResponseWebhook) SetId(v string) {
	o.Id = &v
}

// GetEndpoint returns the Endpoint field value if set, zero value otherwise.
func (o *CreateWebhookResponseWebhook) GetEndpoint() string {
	if o == nil || IsNil(o.Endpoint) {
		var ret string
		return ret
	}
	return *o.Endpoint
}

// GetEndpointOk returns a tuple with the Endpoint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateWebhookResponseWebhook) GetEndpointOk() (*string, bool) {
	if o == nil || IsNil(o.Endpoint) {
		return nil, false
	}
	return o.Endpoint, true
}

// HasEndpoint returns a boolean if a field has been set.
func (o *CreateWebhookResponseWebhook) HasEndpoint() bool {
	if o != nil && !IsNil(o.Endpoint) {
		return true
	}

	return false
}

// SetEndpoint gets a reference to the given string and assigns it to the Endpoint field.
func (o *CreateWebhookResponseWebhook) SetEndpoint(v string) {
	o.Endpoint = &v
}

func (o CreateWebhookResponseWebhook) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateWebhookResponseWebhook) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Endpoint) {
		toSerialize["endpoint"] = o.Endpoint
	}
	return toSerialize, nil
}

type NullableCreateWebhookResponseWebhook struct {
	value *CreateWebhookResponseWebhook
	isSet bool
}

func (v NullableCreateWebhookResponseWebhook) Get() *CreateWebhookResponseWebhook {
	return v.value
}

func (v *NullableCreateWebhookResponseWebhook) Set(val *CreateWebhookResponseWebhook) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateWebhookResponseWebhook) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateWebhookResponseWebhook) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateWebhookResponseWebhook(val *CreateWebhookResponseWebhook) *NullableCreateWebhookResponseWebhook {
	return &NullableCreateWebhookResponseWebhook{value: val, isSet: true}
}

func (v NullableCreateWebhookResponseWebhook) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateWebhookResponseWebhook) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
