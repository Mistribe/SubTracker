/*
Kinde Management API

 Provides endpoints to manage your Kinde Businesses.  ## Intro  ## How to use  1. [Set up and authorize a machine-to-machine (M2M) application](https://docs.kinde.com/developer-tools/kinde-api/connect-to-kinde-api/).  2. [Generate a test access token](https://docs.kinde.com/developer-tools/kinde-api/access-token-for-api/)  3. Test request any endpoint using the test token

API version: 1
Contact: support@kinde.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the CreateEnvironmentVariableRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateEnvironmentVariableRequest{}

// CreateEnvironmentVariableRequest struct for CreateEnvironmentVariableRequest
type CreateEnvironmentVariableRequest struct {
	// The name of the environment variable (max 128 characters).
	Key string `json:"key"`
	// The value of the new environment variable (max 2048 characters).
	Value string `json:"value"`
	// Whether the environment variable is sensitive. Secrets are not-readable by you or your team after creation.
	IsSecret *bool `json:"is_secret,omitempty"`
}

type _CreateEnvironmentVariableRequest CreateEnvironmentVariableRequest

// NewCreateEnvironmentVariableRequest instantiates a new CreateEnvironmentVariableRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateEnvironmentVariableRequest(key string, value string) *CreateEnvironmentVariableRequest {
	this := CreateEnvironmentVariableRequest{}
	this.Key = key
	this.Value = value
	return &this
}

// NewCreateEnvironmentVariableRequestWithDefaults instantiates a new CreateEnvironmentVariableRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateEnvironmentVariableRequestWithDefaults() *CreateEnvironmentVariableRequest {
	this := CreateEnvironmentVariableRequest{}
	return &this
}

// GetKey returns the Key field value
func (o *CreateEnvironmentVariableRequest) GetKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Key
}

// GetKeyOk returns a tuple with the Key field value
// and a boolean to check if the value has been set.
func (o *CreateEnvironmentVariableRequest) GetKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Key, true
}

// SetKey sets field value
func (o *CreateEnvironmentVariableRequest) SetKey(v string) {
	o.Key = v
}

// GetValue returns the Value field value
func (o *CreateEnvironmentVariableRequest) GetValue() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Value
}

// GetValueOk returns a tuple with the Value field value
// and a boolean to check if the value has been set.
func (o *CreateEnvironmentVariableRequest) GetValueOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Value, true
}

// SetValue sets field value
func (o *CreateEnvironmentVariableRequest) SetValue(v string) {
	o.Value = v
}

// GetIsSecret returns the IsSecret field value if set, zero value otherwise.
func (o *CreateEnvironmentVariableRequest) GetIsSecret() bool {
	if o == nil || IsNil(o.IsSecret) {
		var ret bool
		return ret
	}
	return *o.IsSecret
}

// GetIsSecretOk returns a tuple with the IsSecret field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateEnvironmentVariableRequest) GetIsSecretOk() (*bool, bool) {
	if o == nil || IsNil(o.IsSecret) {
		return nil, false
	}
	return o.IsSecret, true
}

// HasIsSecret returns a boolean if a field has been set.
func (o *CreateEnvironmentVariableRequest) HasIsSecret() bool {
	if o != nil && !IsNil(o.IsSecret) {
		return true
	}

	return false
}

// SetIsSecret gets a reference to the given bool and assigns it to the IsSecret field.
func (o *CreateEnvironmentVariableRequest) SetIsSecret(v bool) {
	o.IsSecret = &v
}

func (o CreateEnvironmentVariableRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateEnvironmentVariableRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["key"] = o.Key
	toSerialize["value"] = o.Value
	if !IsNil(o.IsSecret) {
		toSerialize["is_secret"] = o.IsSecret
	}
	return toSerialize, nil
}

func (o *CreateEnvironmentVariableRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"key",
		"value",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateEnvironmentVariableRequest := _CreateEnvironmentVariableRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateEnvironmentVariableRequest)

	if err != nil {
		return err
	}

	*o = CreateEnvironmentVariableRequest(varCreateEnvironmentVariableRequest)

	return err
}

type NullableCreateEnvironmentVariableRequest struct {
	value *CreateEnvironmentVariableRequest
	isSet bool
}

func (v NullableCreateEnvironmentVariableRequest) Get() *CreateEnvironmentVariableRequest {
	return v.value
}

func (v *NullableCreateEnvironmentVariableRequest) Set(val *CreateEnvironmentVariableRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateEnvironmentVariableRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateEnvironmentVariableRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateEnvironmentVariableRequest(val *CreateEnvironmentVariableRequest) *NullableCreateEnvironmentVariableRequest {
	return &NullableCreateEnvironmentVariableRequest{value: val, isSet: true}
}

func (v NullableCreateEnvironmentVariableRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateEnvironmentVariableRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
