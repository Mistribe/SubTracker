/*
Kinde Management API

 Provides endpoints to manage your Kinde Businesses.  ## Intro  ## How to use  1. [Set up and authorize a machine-to-machine (M2M) application](https://docs.kinde.com/developer-tools/kinde-api/connect-to-kinde-api/).  2. [Generate a test access token](https://docs.kinde.com/developer-tools/kinde-api/access-token-for-api/)  3. Test request any endpoint using the test token

API version: 1
Contact: support@kinde.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CreateSubscriberSuccessResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateSubscriberSuccessResponse{}

// CreateSubscriberSuccessResponse struct for CreateSubscriberSuccessResponse
type CreateSubscriberSuccessResponse struct {
	Subscriber *CreateSubscriberSuccessResponseSubscriber `json:"subscriber,omitempty"`
}

// NewCreateSubscriberSuccessResponse instantiates a new CreateSubscriberSuccessResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateSubscriberSuccessResponse() *CreateSubscriberSuccessResponse {
	this := CreateSubscriberSuccessResponse{}
	return &this
}

// NewCreateSubscriberSuccessResponseWithDefaults instantiates a new CreateSubscriberSuccessResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateSubscriberSuccessResponseWithDefaults() *CreateSubscriberSuccessResponse {
	this := CreateSubscriberSuccessResponse{}
	return &this
}

// GetSubscriber returns the Subscriber field value if set, zero value otherwise.
func (o *CreateSubscriberSuccessResponse) GetSubscriber() CreateSubscriberSuccessResponseSubscriber {
	if o == nil || IsNil(o.Subscriber) {
		var ret CreateSubscriberSuccessResponseSubscriber
		return ret
	}
	return *o.Subscriber
}

// GetSubscriberOk returns a tuple with the Subscriber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateSubscriberSuccessResponse) GetSubscriberOk() (*CreateSubscriberSuccessResponseSubscriber, bool) {
	if o == nil || IsNil(o.Subscriber) {
		return nil, false
	}
	return o.Subscriber, true
}

// HasSubscriber returns a boolean if a field has been set.
func (o *CreateSubscriberSuccessResponse) HasSubscriber() bool {
	if o != nil && !IsNil(o.Subscriber) {
		return true
	}

	return false
}

// SetSubscriber gets a reference to the given CreateSubscriberSuccessResponseSubscriber and assigns it to the Subscriber field.
func (o *CreateSubscriberSuccessResponse) SetSubscriber(v CreateSubscriberSuccessResponseSubscriber) {
	o.Subscriber = &v
}

func (o CreateSubscriberSuccessResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateSubscriberSuccessResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Subscriber) {
		toSerialize["subscriber"] = o.Subscriber
	}
	return toSerialize, nil
}

type NullableCreateSubscriberSuccessResponse struct {
	value *CreateSubscriberSuccessResponse
	isSet bool
}

func (v NullableCreateSubscriberSuccessResponse) Get() *CreateSubscriberSuccessResponse {
	return v.value
}

func (v *NullableCreateSubscriberSuccessResponse) Set(val *CreateSubscriberSuccessResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateSubscriberSuccessResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateSubscriberSuccessResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateSubscriberSuccessResponse(val *CreateSubscriberSuccessResponse) *NullableCreateSubscriberSuccessResponse {
	return &NullableCreateSubscriberSuccessResponse{value: val, isSet: true}
}

func (v NullableCreateSubscriberSuccessResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateSubscriberSuccessResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
