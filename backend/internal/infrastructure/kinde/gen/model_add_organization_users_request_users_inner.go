/*
Kinde Management API

 Provides endpoints to manage your Kinde Businesses.  ## Intro  ## How to use  1. [Set up and authorize a machine-to-machine (M2M) application](https://docs.kinde.com/developer-tools/kinde-api/connect-to-kinde-api/).  2. [Generate a test access token](https://docs.kinde.com/developer-tools/kinde-api/access-token-for-api/)  3. Test request any endpoint using the test token

API version: 1
Contact: support@kinde.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the AddOrganizationUsersRequestUsersInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddOrganizationUsersRequestUsersInner{}

// AddOrganizationUsersRequestUsersInner struct for AddOrganizationUsersRequestUsersInner
type AddOrganizationUsersRequestUsersInner struct {
	// The users id.
	Id *string `json:"id,omitempty"`
	// Role keys to assign to the user.
	Roles []string `json:"roles,omitempty"`
	// Permission keys to assign to the user.
	Permissions []string `json:"permissions,omitempty"`
}

// NewAddOrganizationUsersRequestUsersInner instantiates a new AddOrganizationUsersRequestUsersInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddOrganizationUsersRequestUsersInner() *AddOrganizationUsersRequestUsersInner {
	this := AddOrganizationUsersRequestUsersInner{}
	return &this
}

// NewAddOrganizationUsersRequestUsersInnerWithDefaults instantiates a new AddOrganizationUsersRequestUsersInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddOrganizationUsersRequestUsersInnerWithDefaults() *AddOrganizationUsersRequestUsersInner {
	this := AddOrganizationUsersRequestUsersInner{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *AddOrganizationUsersRequestUsersInner) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddOrganizationUsersRequestUsersInner) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *AddOrganizationUsersRequestUsersInner) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *AddOrganizationUsersRequestUsersInner) SetId(v string) {
	o.Id = &v
}

// GetRoles returns the Roles field value if set, zero value otherwise.
func (o *AddOrganizationUsersRequestUsersInner) GetRoles() []string {
	if o == nil || IsNil(o.Roles) {
		var ret []string
		return ret
	}
	return o.Roles
}

// GetRolesOk returns a tuple with the Roles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddOrganizationUsersRequestUsersInner) GetRolesOk() ([]string, bool) {
	if o == nil || IsNil(o.Roles) {
		return nil, false
	}
	return o.Roles, true
}

// HasRoles returns a boolean if a field has been set.
func (o *AddOrganizationUsersRequestUsersInner) HasRoles() bool {
	if o != nil && !IsNil(o.Roles) {
		return true
	}

	return false
}

// SetRoles gets a reference to the given []string and assigns it to the Roles field.
func (o *AddOrganizationUsersRequestUsersInner) SetRoles(v []string) {
	o.Roles = v
}

// GetPermissions returns the Permissions field value if set, zero value otherwise.
func (o *AddOrganizationUsersRequestUsersInner) GetPermissions() []string {
	if o == nil || IsNil(o.Permissions) {
		var ret []string
		return ret
	}
	return o.Permissions
}

// GetPermissionsOk returns a tuple with the Permissions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddOrganizationUsersRequestUsersInner) GetPermissionsOk() ([]string, bool) {
	if o == nil || IsNil(o.Permissions) {
		return nil, false
	}
	return o.Permissions, true
}

// HasPermissions returns a boolean if a field has been set.
func (o *AddOrganizationUsersRequestUsersInner) HasPermissions() bool {
	if o != nil && !IsNil(o.Permissions) {
		return true
	}

	return false
}

// SetPermissions gets a reference to the given []string and assigns it to the Permissions field.
func (o *AddOrganizationUsersRequestUsersInner) SetPermissions(v []string) {
	o.Permissions = v
}

func (o AddOrganizationUsersRequestUsersInner) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddOrganizationUsersRequestUsersInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Roles) {
		toSerialize["roles"] = o.Roles
	}
	if !IsNil(o.Permissions) {
		toSerialize["permissions"] = o.Permissions
	}
	return toSerialize, nil
}

type NullableAddOrganizationUsersRequestUsersInner struct {
	value *AddOrganizationUsersRequestUsersInner
	isSet bool
}

func (v NullableAddOrganizationUsersRequestUsersInner) Get() *AddOrganizationUsersRequestUsersInner {
	return v.value
}

func (v *NullableAddOrganizationUsersRequestUsersInner) Set(val *AddOrganizationUsersRequestUsersInner) {
	v.value = val
	v.isSet = true
}

func (v NullableAddOrganizationUsersRequestUsersInner) IsSet() bool {
	return v.isSet
}

func (v *NullableAddOrganizationUsersRequestUsersInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddOrganizationUsersRequestUsersInner(val *AddOrganizationUsersRequestUsersInner) *NullableAddOrganizationUsersRequestUsersInner {
	return &NullableAddOrganizationUsersRequestUsersInner{value: val, isSet: true}
}

func (v NullableAddOrganizationUsersRequestUsersInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddOrganizationUsersRequestUsersInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
