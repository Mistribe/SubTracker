/*
Kinde Management API

 Provides endpoints to manage your Kinde Businesses.  ## Intro  ## How to use  1. [Set up and authorize a machine-to-machine (M2M) application](https://docs.kinde.com/developer-tools/kinde-api/connect-to-kinde-api/).  2. [Generate a test access token](https://docs.kinde.com/developer-tools/kinde-api/access-token-for-api/)  3. Test request any endpoint using the test token

API version: 1
Contact: support@kinde.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CreateUserRequestProfile type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateUserRequestProfile{}

// CreateUserRequestProfile Basic information required to create a user.
type CreateUserRequestProfile struct {
	// User's first name.
	GivenName *string `json:"given_name,omitempty"`
	// User's last name.
	FamilyName *string `json:"family_name,omitempty"`
	// The user's profile picture.
	Picture *string `json:"picture,omitempty"`
}

// NewCreateUserRequestProfile instantiates a new CreateUserRequestProfile object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateUserRequestProfile() *CreateUserRequestProfile {
	this := CreateUserRequestProfile{}
	return &this
}

// NewCreateUserRequestProfileWithDefaults instantiates a new CreateUserRequestProfile object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateUserRequestProfileWithDefaults() *CreateUserRequestProfile {
	this := CreateUserRequestProfile{}
	return &this
}

// GetGivenName returns the GivenName field value if set, zero value otherwise.
func (o *CreateUserRequestProfile) GetGivenName() string {
	if o == nil || IsNil(o.GivenName) {
		var ret string
		return ret
	}
	return *o.GivenName
}

// GetGivenNameOk returns a tuple with the GivenName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateUserRequestProfile) GetGivenNameOk() (*string, bool) {
	if o == nil || IsNil(o.GivenName) {
		return nil, false
	}
	return o.GivenName, true
}

// HasGivenName returns a boolean if a field has been set.
func (o *CreateUserRequestProfile) HasGivenName() bool {
	if o != nil && !IsNil(o.GivenName) {
		return true
	}

	return false
}

// SetGivenName gets a reference to the given string and assigns it to the GivenName field.
func (o *CreateUserRequestProfile) SetGivenName(v string) {
	o.GivenName = &v
}

// GetFamilyName returns the FamilyName field value if set, zero value otherwise.
func (o *CreateUserRequestProfile) GetFamilyName() string {
	if o == nil || IsNil(o.FamilyName) {
		var ret string
		return ret
	}
	return *o.FamilyName
}

// GetFamilyNameOk returns a tuple with the FamilyName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateUserRequestProfile) GetFamilyNameOk() (*string, bool) {
	if o == nil || IsNil(o.FamilyName) {
		return nil, false
	}
	return o.FamilyName, true
}

// HasFamilyName returns a boolean if a field has been set.
func (o *CreateUserRequestProfile) HasFamilyName() bool {
	if o != nil && !IsNil(o.FamilyName) {
		return true
	}

	return false
}

// SetFamilyName gets a reference to the given string and assigns it to the FamilyName field.
func (o *CreateUserRequestProfile) SetFamilyName(v string) {
	o.FamilyName = &v
}

// GetPicture returns the Picture field value if set, zero value otherwise.
func (o *CreateUserRequestProfile) GetPicture() string {
	if o == nil || IsNil(o.Picture) {
		var ret string
		return ret
	}
	return *o.Picture
}

// GetPictureOk returns a tuple with the Picture field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateUserRequestProfile) GetPictureOk() (*string, bool) {
	if o == nil || IsNil(o.Picture) {
		return nil, false
	}
	return o.Picture, true
}

// HasPicture returns a boolean if a field has been set.
func (o *CreateUserRequestProfile) HasPicture() bool {
	if o != nil && !IsNil(o.Picture) {
		return true
	}

	return false
}

// SetPicture gets a reference to the given string and assigns it to the Picture field.
func (o *CreateUserRequestProfile) SetPicture(v string) {
	o.Picture = &v
}

func (o CreateUserRequestProfile) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateUserRequestProfile) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.GivenName) {
		toSerialize["given_name"] = o.GivenName
	}
	if !IsNil(o.FamilyName) {
		toSerialize["family_name"] = o.FamilyName
	}
	if !IsNil(o.Picture) {
		toSerialize["picture"] = o.Picture
	}
	return toSerialize, nil
}

type NullableCreateUserRequestProfile struct {
	value *CreateUserRequestProfile
	isSet bool
}

func (v NullableCreateUserRequestProfile) Get() *CreateUserRequestProfile {
	return v.value
}

func (v *NullableCreateUserRequestProfile) Set(val *CreateUserRequestProfile) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateUserRequestProfile) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateUserRequestProfile) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateUserRequestProfile(val *CreateUserRequestProfile) *NullableCreateUserRequestProfile {
	return &NullableCreateUserRequestProfile{value: val, isSet: true}
}

func (v NullableCreateUserRequestProfile) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateUserRequestProfile) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
