/*
Kinde Management API

 Provides endpoints to manage your Kinde Businesses.  ## Intro  ## How to use  1. [Set up and authorize a machine-to-machine (M2M) application](https://docs.kinde.com/developer-tools/kinde-api/connect-to-kinde-api/).  2. [Generate a test access token](https://docs.kinde.com/developer-tools/kinde-api/access-token-for-api/)  3. Test request any endpoint using the test token

API version: 1
Contact: support@kinde.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the GetOrganizationResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetOrganizationResponse{}

// GetOrganizationResponse struct for GetOrganizationResponse
type GetOrganizationResponse struct {
	// The unique identifier for the organization.
	Code *string `json:"code,omitempty"`
	// The organization's name.
	Name *string `json:"name,omitempty"`
	// A unique handle for the organization - can be used for dynamic callback urls.
	Handle NullableString `json:"handle,omitempty"`
	// Whether the organization is the default organization.
	IsDefault *bool `json:"is_default,omitempty"`
	// The organization's external identifier - commonly used when migrating from or mapping to other systems.
	ExternalId NullableString `json:"external_id,omitempty"`
	// If users become members of this organization when the org code is supplied during authentication.
	IsAutoMembershipEnabled *bool `json:"is_auto_membership_enabled,omitempty"`
	// The organization's logo URL.
	Logo NullableString `json:"logo,omitempty"`
	// The organization's logo URL to be used for dark themes.
	LogoDark NullableString `json:"logo_dark,omitempty"`
	// The organization's SVG favicon URL. Optimal format for most browsers
	FaviconSvg NullableString `json:"favicon_svg,omitempty"`
	// The favicon URL to be used as a fallback in browsers that donâ€™t support SVG, add a PNG
	FaviconFallback     NullableString                                           `json:"favicon_fallback,omitempty"`
	LinkColor           NullableGetEnvironmentResponseEnvironmentLinkColor       `json:"link_color,omitempty"`
	BackgroundColor     NullableGetEnvironmentResponseEnvironmentBackgroundColor `json:"background_color,omitempty"`
	ButtonColor         NullableGetEnvironmentResponseEnvironmentLinkColor       `json:"button_color,omitempty"`
	ButtonTextColor     NullableGetEnvironmentResponseEnvironmentBackgroundColor `json:"button_text_color,omitempty"`
	LinkColorDark       NullableGetEnvironmentResponseEnvironmentLinkColor       `json:"link_color_dark,omitempty"`
	BackgroundColorDark NullableGetEnvironmentResponseEnvironmentLinkColor       `json:"background_color_dark,omitempty"`
	ButtonTextColorDark NullableGetEnvironmentResponseEnvironmentLinkColor       `json:"button_text_color_dark,omitempty"`
	ButtonColorDark     NullableGetEnvironmentResponseEnvironmentLinkColor       `json:"button_color_dark,omitempty"`
	// The border radius for buttons. Value is px, Kinde transforms to rem for rendering
	ButtonBorderRadius NullableInt32 `json:"button_border_radius,omitempty"`
	// The border radius for cards. Value is px, Kinde transforms to rem for rendering
	CardBorderRadius NullableInt32 `json:"card_border_radius,omitempty"`
	// The border radius for inputs. Value is px, Kinde transforms to rem for rendering
	InputBorderRadius NullableInt32 `json:"input_border_radius,omitempty"`
	// Whether the environment is forced into light mode, dark mode or user preference
	ThemeCode *string `json:"theme_code,omitempty"`
	// The color scheme for the environment used for meta tags based on the theme code
	ColorScheme *string `json:"color_scheme,omitempty"`
	// Date of organization creation in ISO 8601 format.
	CreatedOn *string `json:"created_on,omitempty"`
	// Deprecated - Use 'is_auto_membership_enabled' instead
	// Deprecated
	IsAllowRegistrations NullableBool `json:"is_allow_registrations,omitempty"`
	// The name of the organization that will be used in emails
	SenderName NullableString `json:"sender_name,omitempty"`
	// The email address that will be used in emails. Requires custom SMTP to be set up.
	SenderEmail NullableString                  `json:"sender_email,omitempty"`
	Billing     *GetOrganizationResponseBilling `json:"billing,omitempty"`
}

// NewGetOrganizationResponse instantiates a new GetOrganizationResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetOrganizationResponse() *GetOrganizationResponse {
	this := GetOrganizationResponse{}
	return &this
}

// NewGetOrganizationResponseWithDefaults instantiates a new GetOrganizationResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetOrganizationResponseWithDefaults() *GetOrganizationResponse {
	this := GetOrganizationResponse{}
	return &this
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *GetOrganizationResponse) GetCode() string {
	if o == nil || IsNil(o.Code) {
		var ret string
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetOrganizationResponse) GetCodeOk() (*string, bool) {
	if o == nil || IsNil(o.Code) {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *GetOrganizationResponse) HasCode() bool {
	if o != nil && !IsNil(o.Code) {
		return true
	}

	return false
}

// SetCode gets a reference to the given string and assigns it to the Code field.
func (o *GetOrganizationResponse) SetCode(v string) {
	o.Code = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *GetOrganizationResponse) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetOrganizationResponse) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *GetOrganizationResponse) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *GetOrganizationResponse) SetName(v string) {
	o.Name = &v
}

// GetHandle returns the Handle field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetOrganizationResponse) GetHandle() string {
	if o == nil || IsNil(o.Handle.Get()) {
		var ret string
		return ret
	}
	return *o.Handle.Get()
}

// GetHandleOk returns a tuple with the Handle field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetOrganizationResponse) GetHandleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Handle.Get(), o.Handle.IsSet()
}

// HasHandle returns a boolean if a field has been set.
func (o *GetOrganizationResponse) HasHandle() bool {
	if o != nil && o.Handle.IsSet() {
		return true
	}

	return false
}

// SetHandle gets a reference to the given NullableString and assigns it to the Handle field.
func (o *GetOrganizationResponse) SetHandle(v string) {
	o.Handle.Set(&v)
}

// SetHandleNil sets the value for Handle to be an explicit nil
func (o *GetOrganizationResponse) SetHandleNil() {
	o.Handle.Set(nil)
}

// UnsetHandle ensures that no value is present for Handle, not even an explicit nil
func (o *GetOrganizationResponse) UnsetHandle() {
	o.Handle.Unset()
}

// GetIsDefault returns the IsDefault field value if set, zero value otherwise.
func (o *GetOrganizationResponse) GetIsDefault() bool {
	if o == nil || IsNil(o.IsDefault) {
		var ret bool
		return ret
	}
	return *o.IsDefault
}

// GetIsDefaultOk returns a tuple with the IsDefault field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetOrganizationResponse) GetIsDefaultOk() (*bool, bool) {
	if o == nil || IsNil(o.IsDefault) {
		return nil, false
	}
	return o.IsDefault, true
}

// HasIsDefault returns a boolean if a field has been set.
func (o *GetOrganizationResponse) HasIsDefault() bool {
	if o != nil && !IsNil(o.IsDefault) {
		return true
	}

	return false
}

// SetIsDefault gets a reference to the given bool and assigns it to the IsDefault field.
func (o *GetOrganizationResponse) SetIsDefault(v bool) {
	o.IsDefault = &v
}

// GetExternalId returns the ExternalId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetOrganizationResponse) GetExternalId() string {
	if o == nil || IsNil(o.ExternalId.Get()) {
		var ret string
		return ret
	}
	return *o.ExternalId.Get()
}

// GetExternalIdOk returns a tuple with the ExternalId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetOrganizationResponse) GetExternalIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ExternalId.Get(), o.ExternalId.IsSet()
}

// HasExternalId returns a boolean if a field has been set.
func (o *GetOrganizationResponse) HasExternalId() bool {
	if o != nil && o.ExternalId.IsSet() {
		return true
	}

	return false
}

// SetExternalId gets a reference to the given NullableString and assigns it to the ExternalId field.
func (o *GetOrganizationResponse) SetExternalId(v string) {
	o.ExternalId.Set(&v)
}

// SetExternalIdNil sets the value for ExternalId to be an explicit nil
func (o *GetOrganizationResponse) SetExternalIdNil() {
	o.ExternalId.Set(nil)
}

// UnsetExternalId ensures that no value is present for ExternalId, not even an explicit nil
func (o *GetOrganizationResponse) UnsetExternalId() {
	o.ExternalId.Unset()
}

// GetIsAutoMembershipEnabled returns the IsAutoMembershipEnabled field value if set, zero value otherwise.
func (o *GetOrganizationResponse) GetIsAutoMembershipEnabled() bool {
	if o == nil || IsNil(o.IsAutoMembershipEnabled) {
		var ret bool
		return ret
	}
	return *o.IsAutoMembershipEnabled
}

// GetIsAutoMembershipEnabledOk returns a tuple with the IsAutoMembershipEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetOrganizationResponse) GetIsAutoMembershipEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.IsAutoMembershipEnabled) {
		return nil, false
	}
	return o.IsAutoMembershipEnabled, true
}

// HasIsAutoMembershipEnabled returns a boolean if a field has been set.
func (o *GetOrganizationResponse) HasIsAutoMembershipEnabled() bool {
	if o != nil && !IsNil(o.IsAutoMembershipEnabled) {
		return true
	}

	return false
}

// SetIsAutoMembershipEnabled gets a reference to the given bool and assigns it to the IsAutoMembershipEnabled field.
func (o *GetOrganizationResponse) SetIsAutoMembershipEnabled(v bool) {
	o.IsAutoMembershipEnabled = &v
}

// GetLogo returns the Logo field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetOrganizationResponse) GetLogo() string {
	if o == nil || IsNil(o.Logo.Get()) {
		var ret string
		return ret
	}
	return *o.Logo.Get()
}

// GetLogoOk returns a tuple with the Logo field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetOrganizationResponse) GetLogoOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Logo.Get(), o.Logo.IsSet()
}

// HasLogo returns a boolean if a field has been set.
func (o *GetOrganizationResponse) HasLogo() bool {
	if o != nil && o.Logo.IsSet() {
		return true
	}

	return false
}

// SetLogo gets a reference to the given NullableString and assigns it to the Logo field.
func (o *GetOrganizationResponse) SetLogo(v string) {
	o.Logo.Set(&v)
}

// SetLogoNil sets the value for Logo to be an explicit nil
func (o *GetOrganizationResponse) SetLogoNil() {
	o.Logo.Set(nil)
}

// UnsetLogo ensures that no value is present for Logo, not even an explicit nil
func (o *GetOrganizationResponse) UnsetLogo() {
	o.Logo.Unset()
}

// GetLogoDark returns the LogoDark field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetOrganizationResponse) GetLogoDark() string {
	if o == nil || IsNil(o.LogoDark.Get()) {
		var ret string
		return ret
	}
	return *o.LogoDark.Get()
}

// GetLogoDarkOk returns a tuple with the LogoDark field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetOrganizationResponse) GetLogoDarkOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.LogoDark.Get(), o.LogoDark.IsSet()
}

// HasLogoDark returns a boolean if a field has been set.
func (o *GetOrganizationResponse) HasLogoDark() bool {
	if o != nil && o.LogoDark.IsSet() {
		return true
	}

	return false
}

// SetLogoDark gets a reference to the given NullableString and assigns it to the LogoDark field.
func (o *GetOrganizationResponse) SetLogoDark(v string) {
	o.LogoDark.Set(&v)
}

// SetLogoDarkNil sets the value for LogoDark to be an explicit nil
func (o *GetOrganizationResponse) SetLogoDarkNil() {
	o.LogoDark.Set(nil)
}

// UnsetLogoDark ensures that no value is present for LogoDark, not even an explicit nil
func (o *GetOrganizationResponse) UnsetLogoDark() {
	o.LogoDark.Unset()
}

// GetFaviconSvg returns the FaviconSvg field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetOrganizationResponse) GetFaviconSvg() string {
	if o == nil || IsNil(o.FaviconSvg.Get()) {
		var ret string
		return ret
	}
	return *o.FaviconSvg.Get()
}

// GetFaviconSvgOk returns a tuple with the FaviconSvg field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetOrganizationResponse) GetFaviconSvgOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.FaviconSvg.Get(), o.FaviconSvg.IsSet()
}

// HasFaviconSvg returns a boolean if a field has been set.
func (o *GetOrganizationResponse) HasFaviconSvg() bool {
	if o != nil && o.FaviconSvg.IsSet() {
		return true
	}

	return false
}

// SetFaviconSvg gets a reference to the given NullableString and assigns it to the FaviconSvg field.
func (o *GetOrganizationResponse) SetFaviconSvg(v string) {
	o.FaviconSvg.Set(&v)
}

// SetFaviconSvgNil sets the value for FaviconSvg to be an explicit nil
func (o *GetOrganizationResponse) SetFaviconSvgNil() {
	o.FaviconSvg.Set(nil)
}

// UnsetFaviconSvg ensures that no value is present for FaviconSvg, not even an explicit nil
func (o *GetOrganizationResponse) UnsetFaviconSvg() {
	o.FaviconSvg.Unset()
}

// GetFaviconFallback returns the FaviconFallback field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetOrganizationResponse) GetFaviconFallback() string {
	if o == nil || IsNil(o.FaviconFallback.Get()) {
		var ret string
		return ret
	}
	return *o.FaviconFallback.Get()
}

// GetFaviconFallbackOk returns a tuple with the FaviconFallback field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetOrganizationResponse) GetFaviconFallbackOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.FaviconFallback.Get(), o.FaviconFallback.IsSet()
}

// HasFaviconFallback returns a boolean if a field has been set.
func (o *GetOrganizationResponse) HasFaviconFallback() bool {
	if o != nil && o.FaviconFallback.IsSet() {
		return true
	}

	return false
}

// SetFaviconFallback gets a reference to the given NullableString and assigns it to the FaviconFallback field.
func (o *GetOrganizationResponse) SetFaviconFallback(v string) {
	o.FaviconFallback.Set(&v)
}

// SetFaviconFallbackNil sets the value for FaviconFallback to be an explicit nil
func (o *GetOrganizationResponse) SetFaviconFallbackNil() {
	o.FaviconFallback.Set(nil)
}

// UnsetFaviconFallback ensures that no value is present for FaviconFallback, not even an explicit nil
func (o *GetOrganizationResponse) UnsetFaviconFallback() {
	o.FaviconFallback.Unset()
}

// GetLinkColor returns the LinkColor field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetOrganizationResponse) GetLinkColor() GetEnvironmentResponseEnvironmentLinkColor {
	if o == nil || IsNil(o.LinkColor.Get()) {
		var ret GetEnvironmentResponseEnvironmentLinkColor
		return ret
	}
	return *o.LinkColor.Get()
}

// GetLinkColorOk returns a tuple with the LinkColor field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetOrganizationResponse) GetLinkColorOk() (*GetEnvironmentResponseEnvironmentLinkColor, bool) {
	if o == nil {
		return nil, false
	}
	return o.LinkColor.Get(), o.LinkColor.IsSet()
}

// HasLinkColor returns a boolean if a field has been set.
func (o *GetOrganizationResponse) HasLinkColor() bool {
	if o != nil && o.LinkColor.IsSet() {
		return true
	}

	return false
}

// SetLinkColor gets a reference to the given NullableGetEnvironmentResponseEnvironmentLinkColor and assigns it to the LinkColor field.
func (o *GetOrganizationResponse) SetLinkColor(v GetEnvironmentResponseEnvironmentLinkColor) {
	o.LinkColor.Set(&v)
}

// SetLinkColorNil sets the value for LinkColor to be an explicit nil
func (o *GetOrganizationResponse) SetLinkColorNil() {
	o.LinkColor.Set(nil)
}

// UnsetLinkColor ensures that no value is present for LinkColor, not even an explicit nil
func (o *GetOrganizationResponse) UnsetLinkColor() {
	o.LinkColor.Unset()
}

// GetBackgroundColor returns the BackgroundColor field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetOrganizationResponse) GetBackgroundColor() GetEnvironmentResponseEnvironmentBackgroundColor {
	if o == nil || IsNil(o.BackgroundColor.Get()) {
		var ret GetEnvironmentResponseEnvironmentBackgroundColor
		return ret
	}
	return *o.BackgroundColor.Get()
}

// GetBackgroundColorOk returns a tuple with the BackgroundColor field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetOrganizationResponse) GetBackgroundColorOk() (*GetEnvironmentResponseEnvironmentBackgroundColor, bool) {
	if o == nil {
		return nil, false
	}
	return o.BackgroundColor.Get(), o.BackgroundColor.IsSet()
}

// HasBackgroundColor returns a boolean if a field has been set.
func (o *GetOrganizationResponse) HasBackgroundColor() bool {
	if o != nil && o.BackgroundColor.IsSet() {
		return true
	}

	return false
}

// SetBackgroundColor gets a reference to the given NullableGetEnvironmentResponseEnvironmentBackgroundColor and assigns it to the BackgroundColor field.
func (o *GetOrganizationResponse) SetBackgroundColor(v GetEnvironmentResponseEnvironmentBackgroundColor) {
	o.BackgroundColor.Set(&v)
}

// SetBackgroundColorNil sets the value for BackgroundColor to be an explicit nil
func (o *GetOrganizationResponse) SetBackgroundColorNil() {
	o.BackgroundColor.Set(nil)
}

// UnsetBackgroundColor ensures that no value is present for BackgroundColor, not even an explicit nil
func (o *GetOrganizationResponse) UnsetBackgroundColor() {
	o.BackgroundColor.Unset()
}

// GetButtonColor returns the ButtonColor field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetOrganizationResponse) GetButtonColor() GetEnvironmentResponseEnvironmentLinkColor {
	if o == nil || IsNil(o.ButtonColor.Get()) {
		var ret GetEnvironmentResponseEnvironmentLinkColor
		return ret
	}
	return *o.ButtonColor.Get()
}

// GetButtonColorOk returns a tuple with the ButtonColor field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetOrganizationResponse) GetButtonColorOk() (*GetEnvironmentResponseEnvironmentLinkColor, bool) {
	if o == nil {
		return nil, false
	}
	return o.ButtonColor.Get(), o.ButtonColor.IsSet()
}

// HasButtonColor returns a boolean if a field has been set.
func (o *GetOrganizationResponse) HasButtonColor() bool {
	if o != nil && o.ButtonColor.IsSet() {
		return true
	}

	return false
}

// SetButtonColor gets a reference to the given NullableGetEnvironmentResponseEnvironmentLinkColor and assigns it to the ButtonColor field.
func (o *GetOrganizationResponse) SetButtonColor(v GetEnvironmentResponseEnvironmentLinkColor) {
	o.ButtonColor.Set(&v)
}

// SetButtonColorNil sets the value for ButtonColor to be an explicit nil
func (o *GetOrganizationResponse) SetButtonColorNil() {
	o.ButtonColor.Set(nil)
}

// UnsetButtonColor ensures that no value is present for ButtonColor, not even an explicit nil
func (o *GetOrganizationResponse) UnsetButtonColor() {
	o.ButtonColor.Unset()
}

// GetButtonTextColor returns the ButtonTextColor field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetOrganizationResponse) GetButtonTextColor() GetEnvironmentResponseEnvironmentBackgroundColor {
	if o == nil || IsNil(o.ButtonTextColor.Get()) {
		var ret GetEnvironmentResponseEnvironmentBackgroundColor
		return ret
	}
	return *o.ButtonTextColor.Get()
}

// GetButtonTextColorOk returns a tuple with the ButtonTextColor field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetOrganizationResponse) GetButtonTextColorOk() (*GetEnvironmentResponseEnvironmentBackgroundColor, bool) {
	if o == nil {
		return nil, false
	}
	return o.ButtonTextColor.Get(), o.ButtonTextColor.IsSet()
}

// HasButtonTextColor returns a boolean if a field has been set.
func (o *GetOrganizationResponse) HasButtonTextColor() bool {
	if o != nil && o.ButtonTextColor.IsSet() {
		return true
	}

	return false
}

// SetButtonTextColor gets a reference to the given NullableGetEnvironmentResponseEnvironmentBackgroundColor and assigns it to the ButtonTextColor field.
func (o *GetOrganizationResponse) SetButtonTextColor(v GetEnvironmentResponseEnvironmentBackgroundColor) {
	o.ButtonTextColor.Set(&v)
}

// SetButtonTextColorNil sets the value for ButtonTextColor to be an explicit nil
func (o *GetOrganizationResponse) SetButtonTextColorNil() {
	o.ButtonTextColor.Set(nil)
}

// UnsetButtonTextColor ensures that no value is present for ButtonTextColor, not even an explicit nil
func (o *GetOrganizationResponse) UnsetButtonTextColor() {
	o.ButtonTextColor.Unset()
}

// GetLinkColorDark returns the LinkColorDark field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetOrganizationResponse) GetLinkColorDark() GetEnvironmentResponseEnvironmentLinkColor {
	if o == nil || IsNil(o.LinkColorDark.Get()) {
		var ret GetEnvironmentResponseEnvironmentLinkColor
		return ret
	}
	return *o.LinkColorDark.Get()
}

// GetLinkColorDarkOk returns a tuple with the LinkColorDark field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetOrganizationResponse) GetLinkColorDarkOk() (*GetEnvironmentResponseEnvironmentLinkColor, bool) {
	if o == nil {
		return nil, false
	}
	return o.LinkColorDark.Get(), o.LinkColorDark.IsSet()
}

// HasLinkColorDark returns a boolean if a field has been set.
func (o *GetOrganizationResponse) HasLinkColorDark() bool {
	if o != nil && o.LinkColorDark.IsSet() {
		return true
	}

	return false
}

// SetLinkColorDark gets a reference to the given NullableGetEnvironmentResponseEnvironmentLinkColor and assigns it to the LinkColorDark field.
func (o *GetOrganizationResponse) SetLinkColorDark(v GetEnvironmentResponseEnvironmentLinkColor) {
	o.LinkColorDark.Set(&v)
}

// SetLinkColorDarkNil sets the value for LinkColorDark to be an explicit nil
func (o *GetOrganizationResponse) SetLinkColorDarkNil() {
	o.LinkColorDark.Set(nil)
}

// UnsetLinkColorDark ensures that no value is present for LinkColorDark, not even an explicit nil
func (o *GetOrganizationResponse) UnsetLinkColorDark() {
	o.LinkColorDark.Unset()
}

// GetBackgroundColorDark returns the BackgroundColorDark field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetOrganizationResponse) GetBackgroundColorDark() GetEnvironmentResponseEnvironmentLinkColor {
	if o == nil || IsNil(o.BackgroundColorDark.Get()) {
		var ret GetEnvironmentResponseEnvironmentLinkColor
		return ret
	}
	return *o.BackgroundColorDark.Get()
}

// GetBackgroundColorDarkOk returns a tuple with the BackgroundColorDark field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetOrganizationResponse) GetBackgroundColorDarkOk() (*GetEnvironmentResponseEnvironmentLinkColor, bool) {
	if o == nil {
		return nil, false
	}
	return o.BackgroundColorDark.Get(), o.BackgroundColorDark.IsSet()
}

// HasBackgroundColorDark returns a boolean if a field has been set.
func (o *GetOrganizationResponse) HasBackgroundColorDark() bool {
	if o != nil && o.BackgroundColorDark.IsSet() {
		return true
	}

	return false
}

// SetBackgroundColorDark gets a reference to the given NullableGetEnvironmentResponseEnvironmentLinkColor and assigns it to the BackgroundColorDark field.
func (o *GetOrganizationResponse) SetBackgroundColorDark(v GetEnvironmentResponseEnvironmentLinkColor) {
	o.BackgroundColorDark.Set(&v)
}

// SetBackgroundColorDarkNil sets the value for BackgroundColorDark to be an explicit nil
func (o *GetOrganizationResponse) SetBackgroundColorDarkNil() {
	o.BackgroundColorDark.Set(nil)
}

// UnsetBackgroundColorDark ensures that no value is present for BackgroundColorDark, not even an explicit nil
func (o *GetOrganizationResponse) UnsetBackgroundColorDark() {
	o.BackgroundColorDark.Unset()
}

// GetButtonTextColorDark returns the ButtonTextColorDark field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetOrganizationResponse) GetButtonTextColorDark() GetEnvironmentResponseEnvironmentLinkColor {
	if o == nil || IsNil(o.ButtonTextColorDark.Get()) {
		var ret GetEnvironmentResponseEnvironmentLinkColor
		return ret
	}
	return *o.ButtonTextColorDark.Get()
}

// GetButtonTextColorDarkOk returns a tuple with the ButtonTextColorDark field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetOrganizationResponse) GetButtonTextColorDarkOk() (*GetEnvironmentResponseEnvironmentLinkColor, bool) {
	if o == nil {
		return nil, false
	}
	return o.ButtonTextColorDark.Get(), o.ButtonTextColorDark.IsSet()
}

// HasButtonTextColorDark returns a boolean if a field has been set.
func (o *GetOrganizationResponse) HasButtonTextColorDark() bool {
	if o != nil && o.ButtonTextColorDark.IsSet() {
		return true
	}

	return false
}

// SetButtonTextColorDark gets a reference to the given NullableGetEnvironmentResponseEnvironmentLinkColor and assigns it to the ButtonTextColorDark field.
func (o *GetOrganizationResponse) SetButtonTextColorDark(v GetEnvironmentResponseEnvironmentLinkColor) {
	o.ButtonTextColorDark.Set(&v)
}

// SetButtonTextColorDarkNil sets the value for ButtonTextColorDark to be an explicit nil
func (o *GetOrganizationResponse) SetButtonTextColorDarkNil() {
	o.ButtonTextColorDark.Set(nil)
}

// UnsetButtonTextColorDark ensures that no value is present for ButtonTextColorDark, not even an explicit nil
func (o *GetOrganizationResponse) UnsetButtonTextColorDark() {
	o.ButtonTextColorDark.Unset()
}

// GetButtonColorDark returns the ButtonColorDark field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetOrganizationResponse) GetButtonColorDark() GetEnvironmentResponseEnvironmentLinkColor {
	if o == nil || IsNil(o.ButtonColorDark.Get()) {
		var ret GetEnvironmentResponseEnvironmentLinkColor
		return ret
	}
	return *o.ButtonColorDark.Get()
}

// GetButtonColorDarkOk returns a tuple with the ButtonColorDark field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetOrganizationResponse) GetButtonColorDarkOk() (*GetEnvironmentResponseEnvironmentLinkColor, bool) {
	if o == nil {
		return nil, false
	}
	return o.ButtonColorDark.Get(), o.ButtonColorDark.IsSet()
}

// HasButtonColorDark returns a boolean if a field has been set.
func (o *GetOrganizationResponse) HasButtonColorDark() bool {
	if o != nil && o.ButtonColorDark.IsSet() {
		return true
	}

	return false
}

// SetButtonColorDark gets a reference to the given NullableGetEnvironmentResponseEnvironmentLinkColor and assigns it to the ButtonColorDark field.
func (o *GetOrganizationResponse) SetButtonColorDark(v GetEnvironmentResponseEnvironmentLinkColor) {
	o.ButtonColorDark.Set(&v)
}

// SetButtonColorDarkNil sets the value for ButtonColorDark to be an explicit nil
func (o *GetOrganizationResponse) SetButtonColorDarkNil() {
	o.ButtonColorDark.Set(nil)
}

// UnsetButtonColorDark ensures that no value is present for ButtonColorDark, not even an explicit nil
func (o *GetOrganizationResponse) UnsetButtonColorDark() {
	o.ButtonColorDark.Unset()
}

// GetButtonBorderRadius returns the ButtonBorderRadius field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetOrganizationResponse) GetButtonBorderRadius() int32 {
	if o == nil || IsNil(o.ButtonBorderRadius.Get()) {
		var ret int32
		return ret
	}
	return *o.ButtonBorderRadius.Get()
}

// GetButtonBorderRadiusOk returns a tuple with the ButtonBorderRadius field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetOrganizationResponse) GetButtonBorderRadiusOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.ButtonBorderRadius.Get(), o.ButtonBorderRadius.IsSet()
}

// HasButtonBorderRadius returns a boolean if a field has been set.
func (o *GetOrganizationResponse) HasButtonBorderRadius() bool {
	if o != nil && o.ButtonBorderRadius.IsSet() {
		return true
	}

	return false
}

// SetButtonBorderRadius gets a reference to the given NullableInt32 and assigns it to the ButtonBorderRadius field.
func (o *GetOrganizationResponse) SetButtonBorderRadius(v int32) {
	o.ButtonBorderRadius.Set(&v)
}

// SetButtonBorderRadiusNil sets the value for ButtonBorderRadius to be an explicit nil
func (o *GetOrganizationResponse) SetButtonBorderRadiusNil() {
	o.ButtonBorderRadius.Set(nil)
}

// UnsetButtonBorderRadius ensures that no value is present for ButtonBorderRadius, not even an explicit nil
func (o *GetOrganizationResponse) UnsetButtonBorderRadius() {
	o.ButtonBorderRadius.Unset()
}

// GetCardBorderRadius returns the CardBorderRadius field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetOrganizationResponse) GetCardBorderRadius() int32 {
	if o == nil || IsNil(o.CardBorderRadius.Get()) {
		var ret int32
		return ret
	}
	return *o.CardBorderRadius.Get()
}

// GetCardBorderRadiusOk returns a tuple with the CardBorderRadius field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetOrganizationResponse) GetCardBorderRadiusOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.CardBorderRadius.Get(), o.CardBorderRadius.IsSet()
}

// HasCardBorderRadius returns a boolean if a field has been set.
func (o *GetOrganizationResponse) HasCardBorderRadius() bool {
	if o != nil && o.CardBorderRadius.IsSet() {
		return true
	}

	return false
}

// SetCardBorderRadius gets a reference to the given NullableInt32 and assigns it to the CardBorderRadius field.
func (o *GetOrganizationResponse) SetCardBorderRadius(v int32) {
	o.CardBorderRadius.Set(&v)
}

// SetCardBorderRadiusNil sets the value for CardBorderRadius to be an explicit nil
func (o *GetOrganizationResponse) SetCardBorderRadiusNil() {
	o.CardBorderRadius.Set(nil)
}

// UnsetCardBorderRadius ensures that no value is present for CardBorderRadius, not even an explicit nil
func (o *GetOrganizationResponse) UnsetCardBorderRadius() {
	o.CardBorderRadius.Unset()
}

// GetInputBorderRadius returns the InputBorderRadius field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetOrganizationResponse) GetInputBorderRadius() int32 {
	if o == nil || IsNil(o.InputBorderRadius.Get()) {
		var ret int32
		return ret
	}
	return *o.InputBorderRadius.Get()
}

// GetInputBorderRadiusOk returns a tuple with the InputBorderRadius field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetOrganizationResponse) GetInputBorderRadiusOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.InputBorderRadius.Get(), o.InputBorderRadius.IsSet()
}

// HasInputBorderRadius returns a boolean if a field has been set.
func (o *GetOrganizationResponse) HasInputBorderRadius() bool {
	if o != nil && o.InputBorderRadius.IsSet() {
		return true
	}

	return false
}

// SetInputBorderRadius gets a reference to the given NullableInt32 and assigns it to the InputBorderRadius field.
func (o *GetOrganizationResponse) SetInputBorderRadius(v int32) {
	o.InputBorderRadius.Set(&v)
}

// SetInputBorderRadiusNil sets the value for InputBorderRadius to be an explicit nil
func (o *GetOrganizationResponse) SetInputBorderRadiusNil() {
	o.InputBorderRadius.Set(nil)
}

// UnsetInputBorderRadius ensures that no value is present for InputBorderRadius, not even an explicit nil
func (o *GetOrganizationResponse) UnsetInputBorderRadius() {
	o.InputBorderRadius.Unset()
}

// GetThemeCode returns the ThemeCode field value if set, zero value otherwise.
func (o *GetOrganizationResponse) GetThemeCode() string {
	if o == nil || IsNil(o.ThemeCode) {
		var ret string
		return ret
	}
	return *o.ThemeCode
}

// GetThemeCodeOk returns a tuple with the ThemeCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetOrganizationResponse) GetThemeCodeOk() (*string, bool) {
	if o == nil || IsNil(o.ThemeCode) {
		return nil, false
	}
	return o.ThemeCode, true
}

// HasThemeCode returns a boolean if a field has been set.
func (o *GetOrganizationResponse) HasThemeCode() bool {
	if o != nil && !IsNil(o.ThemeCode) {
		return true
	}

	return false
}

// SetThemeCode gets a reference to the given string and assigns it to the ThemeCode field.
func (o *GetOrganizationResponse) SetThemeCode(v string) {
	o.ThemeCode = &v
}

// GetColorScheme returns the ColorScheme field value if set, zero value otherwise.
func (o *GetOrganizationResponse) GetColorScheme() string {
	if o == nil || IsNil(o.ColorScheme) {
		var ret string
		return ret
	}
	return *o.ColorScheme
}

// GetColorSchemeOk returns a tuple with the ColorScheme field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetOrganizationResponse) GetColorSchemeOk() (*string, bool) {
	if o == nil || IsNil(o.ColorScheme) {
		return nil, false
	}
	return o.ColorScheme, true
}

// HasColorScheme returns a boolean if a field has been set.
func (o *GetOrganizationResponse) HasColorScheme() bool {
	if o != nil && !IsNil(o.ColorScheme) {
		return true
	}

	return false
}

// SetColorScheme gets a reference to the given string and assigns it to the ColorScheme field.
func (o *GetOrganizationResponse) SetColorScheme(v string) {
	o.ColorScheme = &v
}

// GetCreatedOn returns the CreatedOn field value if set, zero value otherwise.
func (o *GetOrganizationResponse) GetCreatedOn() string {
	if o == nil || IsNil(o.CreatedOn) {
		var ret string
		return ret
	}
	return *o.CreatedOn
}

// GetCreatedOnOk returns a tuple with the CreatedOn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetOrganizationResponse) GetCreatedOnOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedOn) {
		return nil, false
	}
	return o.CreatedOn, true
}

// HasCreatedOn returns a boolean if a field has been set.
func (o *GetOrganizationResponse) HasCreatedOn() bool {
	if o != nil && !IsNil(o.CreatedOn) {
		return true
	}

	return false
}

// SetCreatedOn gets a reference to the given string and assigns it to the CreatedOn field.
func (o *GetOrganizationResponse) SetCreatedOn(v string) {
	o.CreatedOn = &v
}

// GetIsAllowRegistrations returns the IsAllowRegistrations field value if set, zero value otherwise (both if not set or set to explicit null).
// Deprecated
func (o *GetOrganizationResponse) GetIsAllowRegistrations() bool {
	if o == nil || IsNil(o.IsAllowRegistrations.Get()) {
		var ret bool
		return ret
	}
	return *o.IsAllowRegistrations.Get()
}

// GetIsAllowRegistrationsOk returns a tuple with the IsAllowRegistrations field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
// Deprecated
func (o *GetOrganizationResponse) GetIsAllowRegistrationsOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.IsAllowRegistrations.Get(), o.IsAllowRegistrations.IsSet()
}

// HasIsAllowRegistrations returns a boolean if a field has been set.
func (o *GetOrganizationResponse) HasIsAllowRegistrations() bool {
	if o != nil && o.IsAllowRegistrations.IsSet() {
		return true
	}

	return false
}

// SetIsAllowRegistrations gets a reference to the given NullableBool and assigns it to the IsAllowRegistrations field.
// Deprecated
func (o *GetOrganizationResponse) SetIsAllowRegistrations(v bool) {
	o.IsAllowRegistrations.Set(&v)
}

// SetIsAllowRegistrationsNil sets the value for IsAllowRegistrations to be an explicit nil
func (o *GetOrganizationResponse) SetIsAllowRegistrationsNil() {
	o.IsAllowRegistrations.Set(nil)
}

// UnsetIsAllowRegistrations ensures that no value is present for IsAllowRegistrations, not even an explicit nil
func (o *GetOrganizationResponse) UnsetIsAllowRegistrations() {
	o.IsAllowRegistrations.Unset()
}

// GetSenderName returns the SenderName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetOrganizationResponse) GetSenderName() string {
	if o == nil || IsNil(o.SenderName.Get()) {
		var ret string
		return ret
	}
	return *o.SenderName.Get()
}

// GetSenderNameOk returns a tuple with the SenderName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetOrganizationResponse) GetSenderNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SenderName.Get(), o.SenderName.IsSet()
}

// HasSenderName returns a boolean if a field has been set.
func (o *GetOrganizationResponse) HasSenderName() bool {
	if o != nil && o.SenderName.IsSet() {
		return true
	}

	return false
}

// SetSenderName gets a reference to the given NullableString and assigns it to the SenderName field.
func (o *GetOrganizationResponse) SetSenderName(v string) {
	o.SenderName.Set(&v)
}

// SetSenderNameNil sets the value for SenderName to be an explicit nil
func (o *GetOrganizationResponse) SetSenderNameNil() {
	o.SenderName.Set(nil)
}

// UnsetSenderName ensures that no value is present for SenderName, not even an explicit nil
func (o *GetOrganizationResponse) UnsetSenderName() {
	o.SenderName.Unset()
}

// GetSenderEmail returns the SenderEmail field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetOrganizationResponse) GetSenderEmail() string {
	if o == nil || IsNil(o.SenderEmail.Get()) {
		var ret string
		return ret
	}
	return *o.SenderEmail.Get()
}

// GetSenderEmailOk returns a tuple with the SenderEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetOrganizationResponse) GetSenderEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SenderEmail.Get(), o.SenderEmail.IsSet()
}

// HasSenderEmail returns a boolean if a field has been set.
func (o *GetOrganizationResponse) HasSenderEmail() bool {
	if o != nil && o.SenderEmail.IsSet() {
		return true
	}

	return false
}

// SetSenderEmail gets a reference to the given NullableString and assigns it to the SenderEmail field.
func (o *GetOrganizationResponse) SetSenderEmail(v string) {
	o.SenderEmail.Set(&v)
}

// SetSenderEmailNil sets the value for SenderEmail to be an explicit nil
func (o *GetOrganizationResponse) SetSenderEmailNil() {
	o.SenderEmail.Set(nil)
}

// UnsetSenderEmail ensures that no value is present for SenderEmail, not even an explicit nil
func (o *GetOrganizationResponse) UnsetSenderEmail() {
	o.SenderEmail.Unset()
}

// GetBilling returns the Billing field value if set, zero value otherwise.
func (o *GetOrganizationResponse) GetBilling() GetOrganizationResponseBilling {
	if o == nil || IsNil(o.Billing) {
		var ret GetOrganizationResponseBilling
		return ret
	}
	return *o.Billing
}

// GetBillingOk returns a tuple with the Billing field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetOrganizationResponse) GetBillingOk() (*GetOrganizationResponseBilling, bool) {
	if o == nil || IsNil(o.Billing) {
		return nil, false
	}
	return o.Billing, true
}

// HasBilling returns a boolean if a field has been set.
func (o *GetOrganizationResponse) HasBilling() bool {
	if o != nil && !IsNil(o.Billing) {
		return true
	}

	return false
}

// SetBilling gets a reference to the given GetOrganizationResponseBilling and assigns it to the Billing field.
func (o *GetOrganizationResponse) SetBilling(v GetOrganizationResponseBilling) {
	o.Billing = &v
}

func (o GetOrganizationResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetOrganizationResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Code) {
		toSerialize["code"] = o.Code
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if o.Handle.IsSet() {
		toSerialize["handle"] = o.Handle.Get()
	}
	if !IsNil(o.IsDefault) {
		toSerialize["is_default"] = o.IsDefault
	}
	if o.ExternalId.IsSet() {
		toSerialize["external_id"] = o.ExternalId.Get()
	}
	if !IsNil(o.IsAutoMembershipEnabled) {
		toSerialize["is_auto_membership_enabled"] = o.IsAutoMembershipEnabled
	}
	if o.Logo.IsSet() {
		toSerialize["logo"] = o.Logo.Get()
	}
	if o.LogoDark.IsSet() {
		toSerialize["logo_dark"] = o.LogoDark.Get()
	}
	if o.FaviconSvg.IsSet() {
		toSerialize["favicon_svg"] = o.FaviconSvg.Get()
	}
	if o.FaviconFallback.IsSet() {
		toSerialize["favicon_fallback"] = o.FaviconFallback.Get()
	}
	if o.LinkColor.IsSet() {
		toSerialize["link_color"] = o.LinkColor.Get()
	}
	if o.BackgroundColor.IsSet() {
		toSerialize["background_color"] = o.BackgroundColor.Get()
	}
	if o.ButtonColor.IsSet() {
		toSerialize["button_color"] = o.ButtonColor.Get()
	}
	if o.ButtonTextColor.IsSet() {
		toSerialize["button_text_color"] = o.ButtonTextColor.Get()
	}
	if o.LinkColorDark.IsSet() {
		toSerialize["link_color_dark"] = o.LinkColorDark.Get()
	}
	if o.BackgroundColorDark.IsSet() {
		toSerialize["background_color_dark"] = o.BackgroundColorDark.Get()
	}
	if o.ButtonTextColorDark.IsSet() {
		toSerialize["button_text_color_dark"] = o.ButtonTextColorDark.Get()
	}
	if o.ButtonColorDark.IsSet() {
		toSerialize["button_color_dark"] = o.ButtonColorDark.Get()
	}
	if o.ButtonBorderRadius.IsSet() {
		toSerialize["button_border_radius"] = o.ButtonBorderRadius.Get()
	}
	if o.CardBorderRadius.IsSet() {
		toSerialize["card_border_radius"] = o.CardBorderRadius.Get()
	}
	if o.InputBorderRadius.IsSet() {
		toSerialize["input_border_radius"] = o.InputBorderRadius.Get()
	}
	if !IsNil(o.ThemeCode) {
		toSerialize["theme_code"] = o.ThemeCode
	}
	if !IsNil(o.ColorScheme) {
		toSerialize["color_scheme"] = o.ColorScheme
	}
	if !IsNil(o.CreatedOn) {
		toSerialize["created_on"] = o.CreatedOn
	}
	if o.IsAllowRegistrations.IsSet() {
		toSerialize["is_allow_registrations"] = o.IsAllowRegistrations.Get()
	}
	if o.SenderName.IsSet() {
		toSerialize["sender_name"] = o.SenderName.Get()
	}
	if o.SenderEmail.IsSet() {
		toSerialize["sender_email"] = o.SenderEmail.Get()
	}
	if !IsNil(o.Billing) {
		toSerialize["billing"] = o.Billing
	}
	return toSerialize, nil
}

type NullableGetOrganizationResponse struct {
	value *GetOrganizationResponse
	isSet bool
}

func (v NullableGetOrganizationResponse) Get() *GetOrganizationResponse {
	return v.value
}

func (v *NullableGetOrganizationResponse) Set(val *GetOrganizationResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetOrganizationResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetOrganizationResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetOrganizationResponse(val *GetOrganizationResponse) *NullableGetOrganizationResponse {
	return &NullableGetOrganizationResponse{value: val, isSet: true}
}

func (v NullableGetOrganizationResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetOrganizationResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
