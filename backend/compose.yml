services:
  api:
    build:
      dockerfile: ./cmd/api/Dockerfile
      context: .
    ports:
      - "8080:8080"
    depends_on:
      database:
        condition: service_healthy
      database.migration:
        condition: service_completed_successfully
  database:
    image: postgres:alpine3.21
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=app
    ports:
      - "5432:5432"
    volumes:
      - ./database/init:/docker-entrypoint-initdb.d
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d app" ]
      interval: 10s
      timeout: 5s
      retries: 5

  database.migration:
    build:
      dockerfile: Dockerfile
      context: ./database
    environment:
      - GOOSE_DRIVER=postgres
      - GOOSE_MIGRATION_DIR=.
      - GOOSE_DBSTRING=postgres://postgres:postgres@database:5432/app
      - GOOSE_TABLE=goose.migrations
    depends_on:
      database:
        condition: service_healthy