services:
  api:
    build:
      dockerfile: ./cmd/api/Dockerfile
      context: .
    ports:
      - "8080:8080"
    volumes:
      - "./data:/data"
    environment:
      - DATABASE_DSN=host=database user=postgres password=postgres dbname=app port=5432
      - UPDATER_AT_START=true
      - DATA_LABEL=/data/labels.json
      - DATA_FAMILY=/data/families.json
      - DATA_PROVIDER=/data/providers.json
      - DATA_SUBSCRIPTION=/data/subscriptions.json
    env_file:
      - .env
    depends_on:
      database:
        condition: service_healthy
  database:
    image: postgres:alpine3.21
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=app
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d app" ]
      interval: 10s
      timeout: 5s
      retries: 5

  database.migration:
    build:
      dockerfile: Dockerfile
      context: ./database
    environment:
      - GOOSE_DRIVER=postgres
      - GOOSE_MIGRATION_DIR=.
      - GOOSE_DBSTRING=postgres://postgres:postgres@database:5432/app
    depends_on:
      database:
        condition: service_healthy